Computational Thinking
Professor Madhavan Mukund
Department of Computer Science
Chennai Mathematical Institute
Professor G. Venkatesh
Indian Institute of Technology, Madras
Concept of Message Broadcasting
Professor Madhavan Mukund: So, we were discussing what we could do with these objects. So,
one of the things we said was a train could ask a station, whether the platform is free. But in
general, we could ask a station, I mean, not a train. But from our perspective, also, we could ask
the same thing to each station, we could say, do you have a train waiting at the platform at the
moment or not?
Professor G. Venkatesh: Each station you have done?
Professor Madhavan Mukund: Yeah. Now, this is a point, so now we have to go through all the
stations. So, even if we have this idea of concurrency, we have first asked the first station, then
we have to go back ask the second station. So, we have to call this some however many stations
100 times. And the same question
Professor G. Venkatesh: Same question?
Professor Madhavan Mukund: Same question. And we want the answer now.
Professor G. Venkatesh: So, here was the trains
Professor Madhavan Mukund: No, but also the other problem by the time asked 100th question,
some, maybe some 2 minutes have passed. So maybe in that time, the train the information I got
about 100th train is not the same as the information I got about the first train. So it would be nice
to be able to just send this,
Professor G. Venkatesh: To all stations.
Professor Madhavan Mukund: Yeah we were just want to say,
Professor G. Venkatesh: I am not saying to one station, I am saying to all stations.
Professor Madhavan Mukund: Yeah. So, it is like you have a siren, which goes off
Professor G. Venkatesh: I am saying to all stations like this circle you said like
Professor Madhavan Mukund: Exactly. Everybody report back.
Professor G. Venkatesh: All classrooms. You said one circular to every class.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: So, put it in the notice board, something like that.
Professor Madhavan Mukund: Then everybody has to report back their answer.
Professor G. Venkatesh: This is broadcasting?
Professor Madhavan Mukund: Yeah. So, we are broadcasting this question. We are not, we are
not asking you to any specific station. We are just putting it out as a message to everybody
Professor G. Venkatesh: Crazy, a procedure call means basically, you will call an object
procedure, not it is not like that.
Professor Madhavan Mukund: No, so this is, yeah.
Professor G. Venkatesh: So, you made a call, you made a general call? Not to anybody.
Professor Madhavan Mukund: Yeah. So, you are asking for some information? In this particular
case. And the information is
Professor G. Venkatesh: Anybody can answer it.
Professor Madhavan Mukund: Everybody should answer it. Anybody also could answer it. So,
there could be two different ways of doing this. So, in this case, we are asking every station to
report whether or not
Professor G. Venkatesh: Broadcast just say whether you want to answer for everybody or for one
person?
Professor Madhavan Mukund: Or you decide what you want to do with them. So, for instance,
you might have a broadcast, supposing you need something. So, you say you have an emergency
at home, and you need to mop up some water. So, you might send out a broadcast on your
building WhatsApp group saying anybody have a suction mop? And if anybody says, Yes, you
are happy, do not expect everybody to have it.
Professor G. Venkatesh: One person is enough.
Professor Madhavan Mukund: So here, you broadcast it, and you interpret the answer. So,
everybody tells you whether they have a train station, train waiting in that station or not. You
decide what you want to do with that information.
Professor G. Venkatesh: So, broadcast, but when there is some crazy thing, now procedure call,
even when needed remote procedure call with this producer consumer model? We gave it a tray,
then that guy specific tray for him, nobody else. Physics teacher has his own tray, Chemistry,
And then the guy who was supposed to put his result? Because that is the otherwise you do not
have any sanity
Professor Madhavan Mukund: Yeah, because you do not even know who these stations are now,
since you are not addressing it to anyone.
Professor G. Venkatesh: So, if I broadcast something first of all the other guy should know that
these broadcasts are coming. So, you should be looking somewhere for
Professor Madhavan Mukund: Correct.
Professor G. Venkatesh: Second is that they should know where to put the answer. So, there
should be some agreed method of putting the answer back.
Professor Madhavan Mukund: So, maybe they could have a tray for this broadcast.
Professor G. Venkatesh: Firstly, there is a broadcast so everybody knows that there are going to
be broadcast. So, they keep they there is a tray which they look for. Every station is looking in
some tray to see whether or not there is a broadcast today.
Professor Madhavan Mukund: Correct.
Professor G. Venkatesh: That is one thing.
Professor Madhavan Mukund: Last the notice board or whatever it is.
Professor G. Venkatesh: Notice board or if we do.
Professor Madhavan Mukund: Or like in an email or an app, the notification, you have a new
message.
Professor G. Venkatesh: You have a new message or something.
Professor Madhavan Mukund: So, then they have to go and look up that message.
Professor G. Venkatesh: They will go look up the broadcast, they will go up there, they get a
notification, they go look at the tray, broadcast tray. And if they find something sitting there,
Professor Madhavan Mukund: They have to decide how to send the answer back. That is what
we are discussing.
Professor G. Venkatesh: So, this is some shared tray I guess.
Professor Madhavan Mukund: Yeah, so maybe I am saying so maybe this depending on who has
sent the broadcast. Each person who sends a broadcast has a single
Professor G. Venkatesh: Shared tray
Professor Madhavan Mukund: Shared tray for everyone to put the answers.
Professor G. Venkatesh: Everybody share that tray. Lot of concurrency okay, everybody is there
but then they have to say who they are? People
Professor Madhavan Mukund: Yeah, they have to say because it is not useful to know that one
person has a mop unit. need to know who has that Mop?
Professor G. Venkatesh Yeah, correct. You know where to pick it up. So, the guy will say, Hey, I
have station Adra and I have a station train
Professor Madhavan Mukund: Waiting right now.
Professor G. Venkatesh: Numbers of the waiting right now in me. He has to say that, so he has to
identify himself. And the answer and he will put it in the tray, in the common tray.
Professor Madhavan Mukund: This answer tray.
Professor G. Venkatesh: It is not a Physics tray, Chemistry tray, Math
s tray. It is one tray.
Professor Madhavan Mukund: It can hold a lot of information because every station potentially,
Professor G. Venkatesh: Every station potentially try right to do it.
Professor Madhavan Mukund: Yeah. So, I of course, we have the old problem of reading and
concurrency. So, we will assume that this so we have one common answer tray.
Professor G. Venkatesh: One tray only broadcast answer tray. Everybody tried to
Professor Madhavan Mukund: And everybody is trying to write into it. And we had this old
problem that we must have Atomic.
(Refer Slide Time: 05:49)
Professor G. Venkatesh It should be atomic, only one guy can write at a time and one read only
at a time. Two people cannot write at the same time, there will be a huge problem otherwise.
Professor Madhavan Mukund: So, both read and write from this. So, the broadcaster will look for
the answer there. And when is looking for the answer, nobody should be writing an answer. And
when somebody writing an answer, nobody else should be writing an answer. And nobody
should be reading an answer.
Professor G. Venkatesh: You wait for some time keep collecting answers after some time out and
say okay, I think I got enough out of responses. You can process it.
Professor Madhavan Mukund: Yeah, right. Correct so, supposing he is waiting for five objects?
Five answers. So, then you can decide.
Professor G. Venkatesh: Or we wait for 5 minutes or 10 minutes something? Yeah. And then
after that, we will see what our answers are there accordingly we will make a decision. These are
the train stations where the trains are waiting.
Professor Madhavan Mukund: Yes.
Professor G. Venkatesh: This is cool. Because this way, broadcast nice, because this way, I do
not need to tell each station.
Professor Madhavan Mukund: Correct.
Professor G. Venkatesh: One by one. One message I sent there. That is all.
Professor Madhavan Mukund: Yeah, and whoever is there will get the message and that is it.
Professor G. Venkatesh: And then they will respond in a comment place and than done. Very
nice. But in the case of trains, it is tougher no because train station is always there.
Professor Madhavan Mukund: Correct. So, trains have different lifetimes. So, when you send a
broadcast at a particular time,
Professor G. Venkatesh: Suppose they want to ask the train. I mean, I would not ask the train.
Professor Madhavan Mukund: Are you running?
Professor G. Venkatesh: Are you running? Yeah.
Professor Madhavan Mukund: So, some of them will say yes, and the others would not respond,
because they are not running or will they mean to train these objects? Are they always
Professor G. Venkatesh: They are not there.
Professor Madhavan Mukund: Because
Professor G. Venkatesh: The object is not even there. So, you have a possible station that the
train so if you do not get anything for some trains you do not get any answer at all means the
object is not there. But if the train is alive which is running elements that the object has been
created then it should respond either yes, I am running or it should say No I am not running.
Something like that it should say. It cannot just say I am running and if it No I keep quiet
because if you keep quiet then.
Professor Madhavan Mukund: You do not know if the object has been created or not. Yes so that
we have to assume therefore this broadcasts will actually reach every object which is created
Professor G. Venkatesh: Alive.
Professor Madhavan Mukund: Which is currently exists, exists and they will all give an answer
Professor G. Venkatesh: Give an answer they will either say yes I am running or no I am at rest I
am stopped at this point in time. And so, you will get an answer if you look at your train, put
train on after the broadcast you will see number of trains have responded these are the trains
which are.
Professor Madhavan Mukund: Alive.
Professor G. Venkatesh: Have been created. Some of them will say yes, I am running some of
them will say not I am not running. So, you know the answer. But this is cool, this method is
much better than other is what I have to do Firstly, I do not even know which are the trains?
Professor Madhavan Mukund: Yeah, so you do not know
Professor G. Venkatesh: How do I call them?
Professor Madhavan Mukund: Because you have to address a procedure to each object. First you
have to determine whether the object, so this is kind of indirectly telling you which ones are
there.
Professor G. Venkatesh: If I want to do otherwise that I have to ask each class, have to go to the
classes, train classes and say hey which are the objects you created? Then he will give me some
objects. Then I have to call each of those objects and say, Hey, are you running? Such a painful
thing? I can just broadcast, broadcast is so much better.
