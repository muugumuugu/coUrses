Computational Thinking
Professor. Madhvan Mukund
Professor. G. Venkatesh
Department of Computer Science
Indian Institute of Technology, Madras
Concept of message passing using Remote Procedure Call (RPC)
Professor Madhvan Mukund: So, now we have these objects which we said we will create as we
go along, and the objects may create other objects and all that. But, the other part of it was the
procedures; like the procedures are now something where. So, normally what happens? We call a
procedure.
Professor G. Venkatesh: Yeah.
Professor Madhvan Mukund: And we will wait for the procedure; so we pass some parameters to
it. So, like we say I want the maximum physics marks; so then it will like physics and then it will
look through that and we wait to get the answer and once we get the answer.
Professor G. Venkatesh: Once you call the procedure, we do not do anything; we are just
waiting.
Professor Madhvan Mukund: We are just waiting; so, basically it is like you have no, you cannot
do anything.
Professor G. Venkatesh: you cannot do anything.
Professor Madhvan Mukund: you are stuck.
Professor G. Venkatesh: Procedure is doing it; procedure is doing something and at the end of
the procedure is there is a way of.
Professor Madhvan Mukund: So, there is a way to give the procedure parameters and there is a
way for the procedure to return things back to us; and we are all sort of sitting in the same.
Professor G. Venkatesh: So, when we did it with cards, you wrote the thing and give it to me; I
was the procedure. You called it the sub-contractor.
Professor Madhvan Mukund: The sub-contractor.
Professor G. Venkatesh: So, you wrote the cards and give it to me; I did the work.
Professor Madhvan Mukund: And you give it back to me.
Professor G. Venkatesh: And I gave the result back on another card.
Professor Madhvan Mukund: On another card.
Professor G. Venkatesh: Now, all these cards are shared between the two of us. So, I can see the
cards you give to me and you can see the cards I gave back to you. And so this is an
environmental context in which we are doing this.
Professor Madhvan Mukund: So, now on the other hand if we are now talking to procedures that
I have executed on objects.
Professor G. Venkatesh: Objects.
Professor Madhvan Mukund: So, then we have to tell the object to do something.
Professor G. Venkatesh: It has a procedure inside.
Professor Madhvan Mukund: Procedure inside, we are not directly calling the procedure; we are
telling the object please execute.
Professor G. Venkatesh: Please execute the problem; the problem is where is the context.
Professor Madhvan Mukund: Because we are sitting inside.
Professor G. Venkatesh: The cards which we are exchanging early inside the object or where the
inside object; the outside that does not get act.
Professor Madhvan Mukund: Exactly; so when like two different rooms or two different
locations or two different.
Professor G. Venkatesh: So, there is a complicated; so now if the so if the cards these cards we
are exchanging parameter and result; we are outside the object means object cannot see it. So,
procedure cannot see it.
Professor Madhvan Mukund: Correct.
Professor G. Venkatesh: On the other hand, if it is inside the object
Professor Madhvan Mukund: Then we cannot pull it.
Professor G. Venkatesh: We cannot because we cannot go inside the box and not takeout the; so
how to go inside the box. So, only you have to call the procedure.
Professor Madhvan Mukund: So, so we need to somehow.
Professor G. Venkatesh: Somehow we have to
Professor Madhvan Mukund: Communicate; send the message or some some kind of instruction
we have to tell.
Professor G. Venkatesh: We need some way to pass, so like in like you example you took of
that.
Professor Madhvan Mukund: Like in that.
Professor G. Venkatesh: Service booth, service; there is a glass pane actually have a hole there.
Professor Madhvan Mukund: Yeah, so you are passing something.
Professor G. Venkatesh: Give me your ID card or something; you can.
Professor Madhvan Mukund: Put it there.
Professor G. Venkatesh: Put it there and she wants to return the money or something.
Professor Madhvan Mukund: Tell me another (slips) slots and then you can pick it up from there.
So, there is a designated place where this transfer of information happens.
Professor G. Venkatesh: So, you can pull/push things and take things out; you can give and take
back. So, there is a, you need a way by which the object has to not only allow us to call the
procedures. That is a way to give us by which you can pass things to the procedure, and the
procedure can return things back; so, some method of communication to the object. Some
messaging you are saying.
Professor Madhvan Mukund: So, basically here we can just put it in a in a grid place; you know
here it is, it will be in this box, this tray.
Professor G. Venkatesh: The tray has to pass to it.
Professor Madhvan Mukund: There is a sometimes you do that also, then you pass your tray and
say put your things in this.
Professor G. Venkatesh: Correct correct.
Professor Madhvan Mukund: So, so there is like if you go into some of these; it happens also
when you go into some of these hotels and they wanted you to pass through metal detector and I
will put your wallet and keys and your phone in a tray; and then you go on the other side and
pick it up such like that; so this.
Professor G. Venkatesh: So, you have some mechanism some in a tray, in which you can put
your parameters and pushed it.
Professor Madhvan Mukund: Pushed it and little comeback with.
Professor G. Venkatesh: That person will put the result and push it back.
Professor Madhvan Mukund: Push it back to you, correct.
Professor G. Venkatesh: So nice, so you need this tray mechanism when you messaging some
messaging, some mechanism.
Professor Madhvan Mukund: So, this tray works if again if you are close to the procedure; so if I
am I am executing an object procedure and the object is some sense some sense, where I can
directly interact with your object; then it makes sense. Like I am going to an ATM and I can
press the buttons; because the (but) ATM is a box, and I can touch that box and pass the buttons.
Professor G. Venkatesh: It has to be nearby only; otherwise how do you even contact it?
Professor Madhvan Mukund: Well, suppose it is in a some like our sub-contractor; so we want
somebody to print some cards for us.
Professor G. Venkatesh: Can be somewhere else? Can be in Bangalore or in other city?
Professor Madhvan Mukund: Maybe in other city, so we send the instruction saying I want this
done.
Professor G. Venkatesh: I see, I can send it on internet like email?
Professor Madhvan Mukund: I could send the instructions; instructions does not require a
physical thing; you can send it by internet.
Professor G. Venkatesh: So, I send an email to the fellow or a WhatsApp message and that
becomes the message.
Professor Madhvan Mukund: That becomes the message and again then let let see.
Professor G. Venkatesh: They might asks me the question about card and so I can send him
what kind of card layout and all I want; send him by a WhatsApp.
Professor Madhvan Mukund: And then he will send back a design maybe; first I mean so that
there is no physical thing involved in as easy as that way. But, again they will send the message.
Professor G. Venkatesh: And then I can send him ok and then he will send me the cards by
courier.
Professor Madhvan Mukund: Yeah, if that is required yes; then there will be you have to be some
other way to send the cards. Supposing for simplicity we do not have to send the card; suppose I
am just saying prepare a poster for me. So, this is what the information should be on the poster;
you should have that event and all that. Prepare a nice layout.
Professor G. Venkatesh: Maybe website.
Professor Madhvan Mukund: Make a website, so you give the design; this is what I want the
information I want. You design it in a attractive way, after sometime you will comeback to me
and I will say here it is; you can take a look at it. And if you are agree, we are done.
Professor G. Venkatesh: So, in this case so this is interesting; so which means what we are
saying is that this object may not be nearby, far away.
Professor Madhvan Mukund: There is no reason, so basically our sub-contractor can be in
different city.
Professor G. Venkatesh: And then I call this procedure or I tell this object to do a procedure; this
call or this thing is happening far away.
Professor Madhvan Mukund: So, what we think of is just one you know the normal thing that I
call a procedure with a parameter; and then the procedure returns an answer to me. It is hiding
this whole thing in this case; where somehow that calling the procedure involves sending the
message to the parameter, and returning from the thing with the answer.
Professor G. Venkatesh: 3 things are going on; so when I call a procedure; this is what? This is
remote.
Professor Madhvan Mukund: It is called the remote procedure call.
Professor G. Venkatesh: It is called the remote procedure.
Professor Madhvan Mukund: So, we are at remote procedure call;
(Refer Slide Time: 06:37)
Professor Madhvan Mukund: So, normally we just suppose we are calling some P with some A,
B, C as parameters; and now we want to store the answer in some X. So, this is how you
normally write it.
Professor G. Venkatesh: Normally write it.
Professor Madhvan Mukund: So, this means that you first call this guy and these are the
parameters, and then the return value comes by magic to X; and and we store it in X.
Professor G. Venkatesh: But now this call what you are saying is that this okay, now it is a
object; so let say.
Professor Madhvan Mukund: So, now P is sitting so now P is sitting somewhere here; so P is
sitting inside the object and we have an object there.
Professor G. Venkatesh: So, you will get object dot P will say object, will tell object.
Professor Madhvan Mukund: Will tell the object, execute P for me; so you will somehow to pass
both the name, which I mean because it could have different procedure. Could have P, Q, R, it
could be many different things it can do; so you tell what to do. And you tell it what to.
Professor G. Venkatesh: What are the parameters?
Professor Madhvan Mukund: What are the parameters to pass to it?
Professor G. Venkatesh: So, I am saying here object, so object do P with parameters A, B, C
send the message; someway I will write this.
Professor Madhvan Mukund: So, this is one message.
Professor G. Venkatesh: I send this message to the object and this object is now far away.
Professor Madhvan Mukund: Potentially it could be far away.
Professor G. Venkatesh: So, I sent so it is a remote procedure; so I am to the remote object, I am
sending call; it is a call. Like a call only, no difference.
Professor Madhvan Mukund: No difference; the only difference is from I mean what goes on
underneath.
Professor G. Venkatesh: So, I am making a call a remote procedure call; so I make a remote
procedure call. So, I make a call to this object which is far away; call it and tell it to do
procedure, give it the parameters. And then it returns the result and I store the result in X; so the
actual writing of this will be X equal to object dot P.
Professor Madhvan Mukund: So, in my in my pseudo code or whatever equivalent code; I will
just write the same thing. I will say X equal to object dot P (A, B, C); so there is no big change.
Professor G. Venkatesh: But, inside this region, there are so many things.
Professor Madhvan Mukund: So, inside this means convert that A, B, C into a message; send it
to the object.
Professor G. Venkatesh: P also; P and A, B, C.
Professor Madhvan Mukund: Then there is a corresponding message which comes back.
Professor G. Venkatesh: Some message is coming back and then I am storing that result.
Professor Madhvan Mukund: Which is some result and then over here I finally put that result
back into X.
Professor G. Venkatesh: All of that, all this business make a message out of this; send it to the
other object this object. Then this object actually does that work calls P inside passes it the
parameters, does all those things; finds the result, sends the result back in the form of message.
This guy takes the result from a message, unpacks it and puts it in a all that is inside this one line.
Professor Madhvan Mukund: So, form as a as a high level thing from our understanding what is
happening; we just need to know that this is what is happening. We called the procedure, we got
the answers to store it next; but while executing it, it got translated into these materials.
Professor G. Venkatesh: Some internet things all are happened; it went on the internet.
Professor Madhvan Mukund: So, so when you write this we do not know; when we write this I
mean the same by reading it we would not know by reading it whether or not this object this
object is away or nearby. So, effectively we are using the same.
Professor G. Venkatesh: This is interesting because in a computer I sit in front of the computer;
sometimes I write program, I run an application. App is running locally, sometimes open up a
browser; then I am looking at some browser links and all. But, now nothing happening local
actually, correct.
Professor Madhvan Mukund: Even the app could be like that; so you say you are trying to order
from a restaurant or something like that.
Professor G. Venkatesh: May not be running here.
Professor Madhvan Mukund: So, when the menu comes, it will look up the menu from
somewhere right; if you want to try an order some food.
Professor G. Venkatesh: It will be looking at somewhere.
Professor Madhvan Mukund: So, so.
Professor G. Venkatesh: It looks as of bit as a local.
Professor Madhvan Mukund: So, to you it would looks as though you just asking for something,
and you get the answer it is like same as you are using a calculator on your screen. Now, that
surely if you are doing seven times on your screen; it is happening
Professor G. Venkatesh: It is not going anywhere else.
Professor Madhvan Mukund: It is not going anywhere or if you are setting the alarm; it is not
going anywhere. But, when you are asking this kind of information; it is actually going out and
collect that.
Professor G. Venkatesh: It is going somewhere and collect; you do not know.
Professor Madhvan Mukund: You have no idea.
Professor G. Venkatesh: You have no idea.
Professor Madhvan Mukund: Except that you might see a delay and the sense.
Professor G. Venkatesh: Because it takes some time, sometimes it does (that).
Professor Madhvan Mukund: But, also it could be that your phone is slow and so.
Professor G. Venkatesh: So, there some kind of remote procedure called like thing is going on.
Professor Madhvan Mukund: So, I think in some way we are using this when we whenever we
interact with things which are connected; and we do not know how much. And sometimes also
these things are also stored, second time you ask the same question. It might just
Professor G. Venkatesh: Returned it from locally.
Professor Madhvan Mukund: It might keep a copy so that it does not have to ask again; so in fact
if this web browser they do it that they have this cache.
Professor G. Venkatesh: Keep it locally.
Professor Madhvan Mukund: So, you you download a page one to see it, you go back to the
same page; it does not download again, unless you have deleted it.
Professor G. Venkatesh: So, this is a phenomenal abstraction phenomenal way of simplifying
very complicated.
Professor Madhvan Mukund: Correct, because you do not need to you do not need to decide
whether to send the message, not to send the message. You just for use you know about object
Obj; you know it has a procedure, you want to call it. You just call it as though you as though it
store inside your own context or inside your own environment; without worrying about where it
is. And it will get taken care off by the way the system works.
Professor G. Venkatesh: And in fact actually they on the other side this object may change the
value of this procedure; may decide internally. Because it is taking a message and deciding what
to do; you give it a message, it may call from anything also you do not know. Like we saw this
physics feature has gone a call from a physics guy; we can do all that.
Professor Madhvan Mukund: So, for instance, supposing just for example, supposing this was
the messages to find the meaning of a word. Let so the object is so you give it a complicated
word, suppose to give some meaning. But, it is not using today it might be using one dictionary,
tomorrow
 so might have P, Q, R are calls one in Oxford dictionary, one is Cambridge
dictionary, one is Webster dictionary.
Professor G. Venkatesh: Of course, it is Oxford.
Professor Madhvan Mukund: So, you just say I want meaning; today it might give you from
Oxford, tomorrow it might give you from Cambridge. As long as you do not tell it use that
dictionary, it is free to choose; so that way the internal thing is not dictated by our call; so they.
Professor G. Venkatesh: So, they can keep on getting better and better and you want do not
know.
Professor Madhvan Mukund: or worse.
Professor G. Venkatesh: Hopefully not worse; so that is interesting. So, this is a beautiful way of
separating things modularizing the.
Professor Madhvan Mukund: So, again this need to know; I I do not need to know what
dictionary it using as long as it gives me reliable answers. So, it can choose whichever dictionary
works well for it and tell me the answer; so, it is like that physics teacher. So, I do not need to
know who the physics teacher is; as long as when I need the marks, I can get the marks.
Professor G. Venkatesh: Correct correct.
Professor Madhvan Mukund: Class teacher will offer that; I guarantee that I will give you the
physics marks whenever you need it just ask me.
