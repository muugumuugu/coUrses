Computational Thinking
Professor Madhavan Mukund
Department of Computer Science
Chennai Mathematical Institute
Professor G. Venkatesh
Indian Institute of Technology, Madras
Conditional Termination in Iteration
Professor Madhavan Mukund: So, suppose we are now going to look for some specific type
of student. For instance we want to know there is a student was done well.
Professor G. Venkatesh: Searching for this thing. Searching for this thing
Professor Madhavan Mukund: So, we need to search through this for somebody who meet
some criterion. For instance it could be that a student has got high marks in all subjects.
Professor G. Venkatesh: What does high means?
Professor Madhavan Mukund: Say above 90.
Professor G. Venkatesh: 90, okay.
Professor Madhavan Mukund: So, as somebody got more than 90.
Professor G. Venkatesh: More than 90 in physics, 90 in chemistry and 90 in maths, okay
Professor Madhavan Mukund: So, we want to look through these cards and find out. So, we
look at the first card, so as usual we will go through all the cards systematically.
Professor G. Venkatesh: And we will look one by one, so maths is not greater than 90 we can
skip so we do not even have to look at.
(Refer Slide Time: 0:53)
Professor Madhavan Mukund: We can look if any of them is below 90, we can skip, so this
74 so we skip, 62 so we skip so we keep skipping, skip.
Professor G. Venkatesh: skip.
Professor Madhavan Mukund: skip, skip now here is a physics 90 but that does not help us,
so 203 so we keep looking and now we find the card.
Professor G. Venkatesh: okay.
Professor Madhavan Mukund: So, now we just wanted to find if there is one student, so
searching for one student.
Professor G. Venkatesh: So, you found the student Rahul.
Professor Madhavan Mukund: We found the student, so now.
Professor G. Venkatesh: But the iterator.
Professor Madhavan Mukund: would say go through all the cards, that is what our iterator
says, while there are cards.
Professor G. Venkatesh: So, we have found the card but your still be.
Professor Madhavan Mukund: So, we have to say
Professor G. Venkatesh: It is not required right. Why do you have to.
Professor Madhavan Mukund: because right now what we would say, we found it we maybe
we will note down the name or the card Number 11.
Professor G. Venkatesh: And then still through.
Professor Madhavan Mukund: And then we will still go through all of these searching for
something which we do not need to search for any more. So, that seems a little bit wasteful it
would.
Professor G. Venkatesh: Is there a way to way to stop the iterator without having to and of
course the iterator normally will go through the cards, but in this case we should be able to
stop the iteration at this point and get out.
Professor Madhavan Mukund: Yes, well how do we get out? So, the problem is that when we
get out of this iteration we go on to do something else.
Professor G. Venkatesh: We go there.
Professor Madhavan Mukund: And we have to make sure that if we come out in the middle
of the iteration we are still going to right place. So, it is a little bit tricky to actually just jump
away from this iteration midway and also we will leave the cards in some kind of funny state.
Professor G. Venkatesh: Mess mess.
Professor Madhavan Mukund: Like this in two piles and all. So, we have to be a little careful
about how we do that, so maybe we should think about how to do this.
Professor G. Venkatesh: Let us think about it, let us try we got example in this.
Professor Madhavan Mukund: But let us see how these examples work.
Professor G. Venkatesh: Find; find; find a card.
Professor Madhavan Mukund: find a card, so for instance if we had the shopping bills, then
we might ask for something similar, I mean not similar but something like this for shopping
bills. (Refer Slide Time: 2:47)
So, for instance look at this shopping bill, so this is SV stores and everybody has bought
food. Here on the other hand if you look there are stationary, electronics, accessories so there
although they are all similar but we could say that there is more than one category in this but
supposing we want to see if somebody has bought food and something and something else
three very different types of categories, is there a bill like that.
Professor G. Venkatesh: Like say food and apparel and.
Professor Madhavan Mukund: So, say food or apparel, maybe toiletries.
Professor G. Venkatesh: Toiletries, something like that.
Professor Madhavan Mukund: Something like that. So, then we would say that this is not
good enough, this is also not good now because they are all very similar things. So, this is
entirely food.
Professor G. Venkatesh: What are you doing, you are taking the card.
Professor Madhavan Mukund: We are taking the card and then we are going down the
category
Professor G. Venkatesh: We are going down the list and seeing whether the category is.
Professor Madhavan Mukund: Seeing how many different category.
Professor G. Venkatesh: How many different category, in this case it is all food.
Professor Madhavan Mukund: All food of different types but all food.
Professor G. Venkatesh: All food. So, therefore we are saying it does not have three
categories.
Professor Madhavan Mukund: Three categories that we are looking for.
Professor G. Venkatesh: We want to see whether the guys bought three different types of
things.
Professor Madhavan Mukund: Three different types of things. So, here again we have food.
Professor G. Venkatesh: He has bought all food.
Professor Madhavan Mukund: No, there is toiletries but that is only two, so want three. Here
there is stationary and food, so two items.
Professor G. Venkatesh: Two items.
Professor Madhavan Mukund: Here there is apparel, food.
Professor G. Venkatesh: This is 3.
Professor Madhavan Mukund: And toiletries, so we are done. So, we have found.
Professor G. Venkatesh: First bill, okay.
Professor Madhavan Mukund: And now the question is if all we needed to do was check that
there was one bill like this.
Professor G. Venkatesh: So, we want to find the first bill and we found it.
Professor Madhavan Mukund: We have found it but we still have this whole set of bills
which we have not seen before, so again we have to.
Professor G. Venkatesh: Stop at this point, in fact actually found it pretty quickly, so you
want to stop at this point and get out of the iteration.
Professor Madhavan Mukund: So, we want unnecessarily do not need to go through all the
others if that is the only goal that we had. So, this is similar to the other one where we found
the marks above a certain thing. So, we would like to I think eventually come up with the
way of doing this without messing up the.
Professor G. Venkatesh: Can we look at something little more interesting more complicated
example and words, I think words finding might be a littlemore interesting.
Professor Madhavan Mukund: So, let us see what we can find, so we can look for a
particular, so we have these parts of speech for instance, so we could look for say.
Professor G. Venkatesh: A verb.
Professor Madhavan Mukund: So, every sentence must have a verb.
Professor G. Venkatesh: Should have.
Professor Madhavan Mukund: At least one verb.
Professor G. Venkatesh: It has to have.
Professor Madhavan Mukund: Has to have a verb, otherwise it will be incomplete or
something.
Professor G. Venkatesh: Correct, the sentence has to have a verb, so.
Professor Madhavan Mukund: And of course, it could be a very long sentence which has
some.
Professor G. Venkatesh: Many verbs.
Professor Madhavan Mukund: Yeah, and, and, all and all connecting, so I went to school and
I saw something on the way.
Professor G. Venkatesh: But I saw.
Professor Madhavan Mukund: Yeah. So, let us look for just the first verb.
Professor G. Venkatesh: First verb.
Professor Madhavan Mukund: So, first verb in say a particular sentence, so.
Professor G. Venkatesh: Third sentence?
Professor Madhavan Mukund: Okay, so let us look for the first verb in the third sentence. So,
now we have to keep track of.
Professor G. Venkatesh: I think this has three sentence, it has.
Professor Madhavan Mukund: I think it has more than three.
Professor G. Venkatesh: So, okay, so third sentence we want to.
Professor Madhavan Mukund: We will have to keep track of where we are in terms of which
sentence we are in.
Professor G. Venkatesh: So, that is basically by the full stop, right?
Professor Madhavan Mukund: Yes, so everytime we come to a full stop.
Professor G. Venkatesh: We will know that.
Professor Madhavan Mukund: So, we will have some kind of a sentence count and.
Professor G. Venkatesh: And keep a variable called sentence count.
(Refer Slide Time: 5:50)
Professor Madhavan Mukund: Yeah, we will have to keep some sentence.
Professor G. Venkatesh: scount you can call it, and we will start with 0?
Professor Madhavan Mukund: Yeah, so initially we have seen no sentences.
Professor G. Venkatesh: So, as we go through the cards, what we do?
Professor Madhavan Mukund: We will first, we want to go till the third, we want to reach
scount has to cross 2, we have seen two sentences then we will be in the third sentence.
Professor G. Venkatesh: In the third sentence.
Professor Madhavan Mukund: In the third sentence, then we want to look for the verb.
Professor G. Venkatesh: So, till scount becomes 2.
Professor Madhavan Mukund: We just.
Professor G. Venkatesh: We are not searching?
Professor Madhavan Mukund: Yeah, we are not searching, we are just looking for a full stop.
Professor G. Venkatesh: Actually we are searching, we are looking for fullstop. So, you are
searching for two things, first we are searching for fullstop.
Professor Madhavan Mukund: Up to a certain.
Professor G. Venkatesh: When we reach a full stop, we do not stop. In earlier case, when we
found the card stopped.
Professor Madhavan Mukund: Yeah, so here we are looking for something repeatedly and
then when we have seen it enough times then we switch to looking for something else.
Professor G. Venkatesh: Very interesting.
Professor Madhavan Mukund: So, we are doing two types of.
Professor G. Venkatesh: Two kinds of search.
Professor Madhavan Mukund: Two kinds of search.
Professor G. Venkatesh: One search, yeah okay one search within a search, something like
that.
Professor Madhavan Mukund: So, for instance we can start here.
Professor G. Venkatesh: Let us start here. So, it, was, Monday, this has a fullstop.
Professor Madhavan Mukund: So, fullstop, so now we have finished one sentence.
Professor G. Venkatesh: So, at this point you will.
Professor Madhavan Mukund: So, I said now.
Professor G. Venkatesh: Count becomes 1.
Professor Madhavan Mukund: Count becomes 1.
Professor G. Venkatesh: We are still not.
Professor Madhavan Mukund: So, now we are starting the second sentence.
Professor G. Venkatesh: So, we are still not, searching the third sentence.
Professor Madhavan Mukund: Yes.
Professor G. Venkatesh: So, no searching yet, not searching for a verb yet.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: So, Swaminathan, was, reluctant, to, open, his, yeah Here is a
fullstop so this sentence is over.
Professor Madhavan Mukund: Yeah, so now we are in the third sentence.
Professor G. Venkatesh: Now, with that, this is the sentence we want.
Professor Madhavan Mukund: Now, we want to look for a verb.
Professor G. Venkatesh: Now, we have reach, so we are looking now for the verb.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: Now, for a verb, so we have reached third sentence, so he.
Professor Madhavan Mukund: That is a verb.
Professor G. Venkatesh: That a verb, all right.
Professor Madhavan Mukund: So, we say now whatever word number.
Professor G. Venkatesh: So, this is 12. So, the word number, word number 12.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: is the.
Professor Madhavan Mukund: Is the word that.
Professor G. Venkatesh: First verb.
Professor Madhavan Mukund: In the sentence three.
Professor G. Venkatesh: Third sentence, interesting now again we want to stop. Look at the
number of cards here.
Professor Madhavan Mukund: Yeah, so we have 12 and we have more than 60 cards, so we
have only come.
Professor G. Venkatesh: After having found word what do you want, what is the purpose of
going through all these cards.
Professor Madhavan Mukund: So, I think we need a way to get.
Professor G. Venkatesh: You have to get out of the loop.
Professor Madhavan Mukund: Yeah get out of the loop because in each of these cases we
found that whatever we were searching for can quite quickly and there is absolutely no point
in going through.
Professor G. Venkatesh: No point in going through.
Professor Madhavan Mukund: All the rest just because we have committed to doing it, of
course if we do not find it we would have to go through it but if we have found it why should
we waste the time.
Professor G. Venkatesh: But you know I mean what is the way to do it, how we get out of
this iterator?
Professor Madhavan Mukund: So, I think what we need to do we see what we are typically
doing in this iterator is.
Professor G. Venkatesh: Flow charts and all no, so flowchart we can just kind of jump from
this and go anywhere right, we can draw an arrow from anywhere to anywhere in flow chart,
right.
Professor Madhavan Mukund: You can draw an arrow from anywhere to anywhere, but if
you come out of this iterator you come out at a specific place. So, ideally if you come out of
this.
Professor G. Venkatesh: You do not know where you come out.
Professor Madhavan Mukund: Yeah, if you come out middle of the iterating steps then you
have to make sure that you reach the same point.
Professor G. Venkatesh: Same point where they normally the iterator would exit.
Professor Madhavan Mukund: Normally, so, that is a little bit.
Professor G. Venkatesh: So, typically the iterator has that condition which we are checking
for exiting.
Professor Madhavan Mukund: Yes.
Professor G. Venkatesh: So, you have to go there.
Professor Madhavan Mukund: We have to go there, exactly so you have to be little careful
about making sure that you are going there, so you have to check that the flowchart has
drawn somebody has not drawn the arrow going to wrong.
Professor G. Venkatesh: going somewhere else.
Professor Madhavan Mukund: Going to wrong place. Or maybe we should somehow.
Professor G. Venkatesh: Not allow that. (())(9:14)
Professor Madhavan Mukund: I think it is better not to.
Professor G. Venkatesh: But I still want to exit, I still want to stop I don
t want to continue
looking at the cards but I do not want to allow jumping out from the middle.
Professor Madhavan Mukund: That is true, so let us see what happens in these flow charts.
So, in these flow charts what we do is we usually.
(Refer Slide Time: 9:35)
So, we have this condition, we have this iterator which starts with this condition is something
like, is there another card for instance, and then so we come down another way is we sort of
stop or end or whatever let us just write. So, we have some situation here and otherwise we
come here and then we come back to this place, so this is the usual.
Professor G. Venkatesh: This is the usual iterator, right?
Professor Madhavan Mukund: Yeah. And now what we are saying is somewhere here, in the
middle.
Professor G. Venkatesh: Somewhere in the middle, we want to exit.
Professor Madhavan Mukund: In the middle we want to kind of say that we are done and we
want to come here saying do not go to the next card.
Professor G. Venkatesh: The solution will be conditionized.
Professor Madhavan Mukund: Yeah. So, this will some diamond yeah. So, if the card has got
Professor G. Venkatesh: If it has got 19, all 19 is some whatever it is, any category
something, it is a verb. Then in that case, you want to straight away go and stop.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: Now, you are exiting from middle of the loop.
Professor Madhavan Mukund: Yeah and the thing that you have to make sure that whoever is
drawing this flowchart.
Professor G. Venkatesh: Will always go there.
Professor Madhavan Mukund: And does not go out somewhere else, so we do not want to do
something like this which would be very.
Professor G. Venkatesh: This looks (())(10:46) so this looks messy because you have multiple
arrows going all over the places.
Professor Madhavan Mukund: So, the structure.
Professor Madhavan Mukund: The structure of this iteration is kind of disturbed by this the
side exits, so it is little unclear what the actual computation is doing.
Professor G. Venkatesh: So, suppose I do not want to do that, I do not want to allow you to
go out but at the same time.
Professor Madhavan Mukund: You want to not continue.
Professor G. Venkatesh: I still.
Professor Madhavan Mukund: Continue come back.
Professor G. Venkatesh: I do not want to continue doing this loop, I do not allow you to exit
but this loop itself we do not want to continue, which means something doing.
Professor Madhavan Mukund: So, basically this thing you want to break off, you do not want
to have this.
Professor G. Venkatesh: But this diamond somehow can I, put it slightly there?
Professor Madhavan Mukund: Well, you could check this diamond at that point.
Professor G. Venkatesh: Something like that (())(11:32).
Professor Madhavan Mukund: So, then you have to remember something.
Professor G. Venkatesh: You have to remember something.
Professor Madhavan Mukund: And then check it at the top.
Professor G. Venkatesh: That is the way to make the exit, same point only we exit.
Professor Madhavan Mukund: So, let us see how to do that. So, supposing we keep track of
something, so supposing we are asking, is the card found? This is what we want to know as
the card that we are looking for we found or not.
Professor G. Venkatesh: We can keep a variable.
Professor Madhavan Mukund: So, we can keep a variable, say found.
Professor G. Venkatesh: And initially we set it to not found which means false.
Professor Madhavan Mukund: So, we say that initially.
Professor G. Venkatesh: It is found is false, we initialize found to false.
Professor Madhavan Mukund: And now here when we actually at this point where we doing
this condition.
Professor G. Venkatesh: If we find that is true.
Professor Madhavan Mukund: If the condition is true, then if yes if we come out to this yes
thing, then we will update found to.
Professor G. Venkatesh: True.
Professor Madhavan Mukund: True, and then come back to this. So, we are part of the same
loop but when we find the card we are looking for the first time, we change found from false
to true.
Professor G. Venkatesh: So, then what happens is and here inside this then you have to check
something.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: It is not enough to do, maybe.
Professor Madhavan Mukund: So, maybe we should make it little bit.
Professor G. Venkatesh: So, found is false initially, now instead of just checking another
card, we have to check another card.
Professor Madhavan Mukund: If something and it is not, we have not yet found the card.
Professor G. Venkatesh: Not yet found, there is another card.
Professor Madhavan Mukund: And we have not yet.
Professor G. Venkatesh: And we have not yet found the card we want.
(Refer Slide Time: 13:05)
Professor Madhavan Mukund: So, let us draw that little more neatly now. So, now what we
say is that we initialize with.
Professor G. Venkatesh: This is a interesting pattern, it is a find pattern, search pattern, right?
Found equal to.
Professor Madhavan Mukund: Found equal to false, then we will fill in that thing later on, but
at some point we are there in the middle and we say that, if it is the say I will just say correct
card, this is my question. This is the, so we are examining the card.
Professor G. Venkatesh: Examining the card.
Professor Madhavan Mukund: For whatever we are looking for, whether it is a verb in the
third sentence or whether it is person above 90 marks. And here.
Professor G. Venkatesh: If it is.
Professor Madhavan Mukund: If it is, if it is true, let us write yes here, then we will do an
extra step so setting found equal to true.
Professor G. Venkatesh: Otherwise there is nothing to do.
Professor Madhavan Mukund: Otherwise we just skip, so this would be what we would
normally do continuing and if.
Professor G. Venkatesh: It is okay. So, if the card is correct, in addition to doing whatever we
have normally have done, we have also set the variable found to true.
Professor Madhavan Mukund: True. And now this will continue and eventually it would
come back to this diamond, so this is the diamond which controls the whole iterator, so we
will come back to this point.
Professor G. Venkatesh: Okay.
Professor Madhavan Mukund: And now we want to make sure that, where that either there
should be an another card, okay there should be another card and we should not have
finished, we have not found.
Professor G. Venkatesh: Another card and not found.
Professor Madhavan Mukund: So.
Professor G. Venkatesh: More cards are there in the pile, which is what I am checking.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: And not found, not foun?.
Professor Madhavan Mukund: We can just write not(found).
Professor G. Venkatesh: not(found), found means.
Professor Madhavan Mukund: Found is true.
Professor G. Venkatesh: Found is true.
Professor Madhavan Mukund: So, not(found) will be true when found is false.
Professor G. Venkatesh: So, it means that initially found is false.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: So, not(found) will be true, so which means that you are just
checking for another card and going, but when found became true then this point time
not(found) will be false.
Professor Madhavan Mukund: So, at this point this is still they may still be cards but you
might not have any desire to look at them anymore.
Professor G. Venkatesh: So, found will become true, so not(found) will become false and
because this is an And condition both of them have to be true, this is false so therefore you
exit.
Professor Madhavan Mukund: So, this is the yes case now here, so if both are true you will
continue down and if any of them becomes false you will come out here and you will
basically stop. Or stop or do whatever it is that you want.
Professor G. Venkatesh: So, basically we manage the get exit down to the same place by
using this trick of.
Professor Madhavan Mukund: So this red structure is still the normal iteration, we have just
made the continuation condition little bit more precise, so we do not unnecessarily look at
cards once we have finished whatever we want to do with the iteration.
Professor G. Venkatesh: Very nice, but you know I mean there is one thing that is going on
here, which is that this condition earlier, we are only checking whether there are cards, what
is on the card, what is inside the card. Now, this condition is checking against something in
the variables.
Professor Madhavan Mukund: Yes, yes, yes.
Professor G. Venkatesh: This condition itself was earlier the same, not changing condition
was not changing, now the condition is actually changing.
Professor Madhavan Mukund: Yes, so we have to keep checking this against the current
value of found which is being, which may have been updated.
Professor G. Venkatesh: Updated.
Professor Madhavan Mukund: May not have been updated.
Professor G. Venkatesh: So, it is basically the condition itself is in some sense dynamically
what you are actually checking for is changing because the variables value is changing but
only once, once you found it is false it is over it is done.
Professor Madhavan Mukund: So, this gives us a way to.
Professor G. Venkatesh: This gives us a way to stop the iteration.
Professor Madhavan Mukund: So, when we have seen only 12 cards we do not have to go to
the.
Professor G. Venkatesh: This is the pattern, I guess this is the pattern now it is a more
interesting iterator pattern, so iterator was filtering, now there is a pattern where we have
iterator with find, iterator with stop.
Professor Madhavan Mukund: So, basically when we are searching and we have found what
we were searching for.
Professor G. Venkatesh: You can stop.
Professor Madhavan Mukund: Then we can stop, and of course the other thing is that the
other way around also works which is when I stop I know whether I found it or not because if
I never found it if there is no student with more than 90 and all.
Professor G. Venkatesh: What will happen then?
Professor Madhavan Mukund: Then found would still be false.
Professor G. Venkatesh: Oh, I see.
Professor Madhavan Mukund: So, if all I want to know whether there was somebody or not
and not remember who it was.
Professor G. Venkatesh: So, because in this case with always found, in all our three example,
we found the example.
Professor Madhavan Mukund: Yeah.
Professor G. Venkatesh: Suppose there was no student greater than (())(17:56).
Professor Madhavan Mukund: Then you would finish ths whole thing and then.
Professor G. Venkatesh: And still come out with.
Professor Madhavan Mukund: Then you would.
Professor G. Venkatesh: Or there is only two sentences let us say.
Professor Madhavan Mukund: Yeah, then you would be kind of unsure about why you came
out and but with check found you know that you newer found it.
Professor G. Venkatesh: I see.
Professor Madhavan Mukund: So, that also gives you a way of knowing whether.
Professor G. Venkatesh: Knowing whether you found.
Professor Madhavan Mukund: Whatever you are looking for exist in that iteration or not.
