Computational Thinking
Professor Madhavan Mukund
Department of Computer Science
Chennai Mathematical Institute
Professor G. Venkatesh
Indian Institute of Technology, Madras
Introduction to Complex Data Types
(Refer Slide Time: 00:14)
So, far what we have seen is basically some basic data types the basic data types where a
Boolean which has true and false values, integers which have negative 0 or positive values and
the character data type and we saw subtypes of this, various subtypes of this and then we made
this data type called strings which was the sequence of characters and then we saw lot of
subtypes of the strings data type.
Now, I am going to introduce two more complex or some ways of putting together all these
data types together in a kind of a package, or a bundle. So, we have two ways of bundling.
(Refer Slide Time: 00:54)
And one way of bundling is what is called a record, so sometimes in some programming
languages it is called struct, in C and C++ it is called struct, or sometimes it may be called a
class, or it might in mathematics we like to call it a tuple but, the record basically is just a data
set or basically data item which has a number of elements and these elements are called fields.
So, for example we saw the marks card so, if you look at the marks card what I have shown in
the figure here it had basically this number 9 which is the sequence number it had a name, it
had a gender, it had a date of birth, city and the various marks, so this has these fields. These
are the fields of this marks card.
So, how do we represent the entire marks card as one data item? How do you represent, what
is the data type of this marks card? So, the value, the valid values the range of values or the
valid values that the marks card can take is not, cannot be, you cannot write it down
independent of the values that, the fields can take.
So, you are basically trying to define what are the fields in this particular data item, and what
are the values that fields can take. So, it is enough to basically write down all the fields and the
data types of those fields. And that is what I have attempted to do, for this particular card.
(Refer Slide Time: 02:20)
So, if you recall we had the sequence number and we have already defined the correct type of
data type for sequence number which was SeqNo, so I can write sequence number, sequence
number data type, name is of the names data type, gender is of the gender data type, date of
birth is of the dates data type, cities of the city data type and these marks are of the marks data
type. So, basically the marks card is a record, it is a record data type which contains various
fields, and each of these fields has a specific data type.
So, the values for each of these fields is constrained by the kind of data type that you are
defining for that particular field. So, the sanity of this card, the marks card is ensured because,
you have defined the fields data types, so that is how the sanity is ensured.
(Refer Slide Time: 03:07)
Now we can look at the second data type that we had which is the words which are, words in
the paragraph that we had, for example we had this word called It, which is the pronoun, it had
two letters and we had the sequence number 0. So, there are clearly 1 2 3 4 fields in this data
type, this is a record with 4 fields, and what are those 4 fields?
(Refer Slide Time: 03:32)
Sequence number is obviously of sequence number type the word which is in the card is of the
words data type. The category which is pronoun proposition and so on is of the category data
type and the letter count is of a count data type. So, we have already defined the sub types that
we need for writing the data type for all the fields in this card.
(Refer Slide Time: 03:55)
Finally, if we look at the, set of all the marks cards, if I add the bunch of all the marks cards, is
there a data type that can basically, that can represent that? Now, because I can write for one
card I can write a record, but for the entire list, or the entire set of cards I need something else.
So, sequence of data elements is called a list, so you can make the list which list is basically,
is the sequence of just like a string basically the sequence of characters so a string is also in
principle of list. So, the sequence of data elements is a list, for example a sequence of records,
so a marks card list is just a sequence of marks card record data types.
A paragraph word list is just a sequence of WordInPara record data type. So, the set of all the
marks cards, is a marks card list, the set of all the words in the paragraph is a paragraph word
list and similarly the set of all shopping bills, is the shopping bill list. Of course I have not told
you what the record data type for the shopping bill is. So, let us look at that.
(Refer Slide Time: 05:01)
How do we do the record for the shopping bill? Now, if you look at the shopping bill again it
looks like you have the name of the shop, you have the name of the customer you have a
sequence number and you have a total amount. Besides that you also have a list of items. Now,
the complication comes because of the list of items, this is the name, this is also a name , this
is the sequence number and this is an amount. So, all of these I can capture but, this again I do
not know how many items will be there in this list.
(Refer Slide Time: 05:32)
So, let me take a first pass, at making this record so, I have the sequence number which is
sequence number data type, store name which is the name data type, customer name which is
the name data type, total bill value which is an amount data type. And then there are items in
the shopping bill whose data type I do not know how to define?
Why don
t I know how to define? Because I do not know how many, there may be many
elements in it, that is why I do not know how to define it. But, it looks like because, there are
a sequence of elements there, it looks like it is a list, so something like a list should be put here.
Now, when you say list, it has to be a list of something, so what is it a list of, it has to be a list
of these items, one row is an item, we have a list of such items.
So, if we take one item and make a record data type out of it, then it will be a list of that record.
So, what does one item look like? It has basically the item name, it has a category name, it has
quantity, it has price, and it has the cost.
(Refer Slide Time: 06:28)
So, I can try and define the data type for that. So, I have the item name which is of the name
data type, item category which is string data type, quantity which is quantity data type, unit
price which is an amount and cost which is also an amount and once I have defined a data type
for an item then I can go back here, and fill this as a list of items. Item list is just a list of item
data type.
So, in this way I have basically created a record data type for shopping bill. So, note that the
record data type for shopping bill contains a number of fields, one of those fields is a list, that
list basically is a list of records, so basically it is a record of a list which contains a field which
is the list of another record which is item, which in turn has a number of fields.
So, it is a little bit more involved data type, and as we go long we will be seeing such hierarchy
of data types that we can build. Which is basically putting together basic data types to create
more, complex data types then working through those complex data types to do, solving our
problems.
(Refer Slide Time: 07:32)
So to summarize, a data type defines values that a variable can take, and the set of operations
that are permitted on it. The basic data types that we saw were integer, Boolean, and character
that is what we saw for our data sets that what we needed for our data sets.
The subtypes, of a type basically are used to further restrict the values or operations that can
be performed on a data type. A record type is a collection of named fields, each of those fields
may have the same or could be different data types. For example, when we saw the marks card
data type, it had basically different fields, all the fields had very different values but, the marks
if we look Physics, Maths, Chemistry and total marks, they were all of the same data type but
all the other fields name and date and all had different other types of data types.
But list if you take the list data type, typically the data type of all the elements in the list are
usually the same because, it is not necessary you could also make a list of different data types,
but usually most of the times, we will see list in which all the elements in the list are all of the
same data type. So, list is just a sequence of elements all of which have the same data type.
So, with that we end this lecture on data types and how to use the data types to constrain the
values and to constrain the operations that can be performed on them.
