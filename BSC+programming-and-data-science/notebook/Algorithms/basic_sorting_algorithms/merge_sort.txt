Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-10-12T18:36:41+05:30

====== merge sort ======
Created Tuesday 12 October 2021

===== recursive algorithm =====
1. split array into two
2. sort L and R
3. merge L and R (two sorted arrays)

==== merge procedure ====
* two sorted arrays as inputs
* two finger procedure, pointing into the two arrays
* starting at smallest element of both arrays
* compare the two elements, and mv the smaller element into sorted array
* move the pointer that is now on empty empty spot up 1 and compare again.
* at the end the sorted array is created by interlacing the two arrays.
* O(n) complexity.

===== complexity =====
* T(n)=
	* α → divide
	* 2T(n/2) → recursion
	* βn → merge
* From a tree structure 
	* no of leaves at end = n (sorted single elements)
	* work in each step =2^{k}*βn/2^{k} == O(n)
	* no of levels = 1+lg(n)
* T(n)=(1+lg(n))*c(n)
* O(nlg(n))

===== cons =====
* wastes auxillary space → O(n) space
* reducing space taken by constant factors:
	* throw away one of the halves of the array to get the split array part  instead of creating a new one.

