Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-10-13T15:46:50+05:30

====== AVL Tree ======
Created Wednesday 13 October 2021

==== height of a tree ====
height of root node.

==== height of a node ====
length of longest path from node to a leaf.
=//max{height(L),height(R)}+1//

==== balanced tree ====
height=O(lg(n))

===== balanced BSTs =====

==== AVL tree ====
require heights of L & R child of every node to differ by at most ±1
* worst case : when right subtree has height 1 more than left for every node.
* N_{h}=min #of nodes in AVL tree of height h. (inverse criterion)
* Recurrence:
	* N_{h}= 1+N_{h-1}+N_{h-2}
	* node itself, right child, left child.
	* N_{h}>Fibonnaci_{h}=ϕ^{h}/√5 
	* O(h)<1.44*lg(n)
	* N_{h}>1+2*N_{h-2}>2*N_{h-2}=O(2^{h/2})
	* O(h)<2lg(n)

=== AVL inserting ===
1. bst insert
2. fix avl from changed node up by rotating.
	a. suppose c is the lowest node violating AVL.
	b. go up updating heights and checking them.
	c. fixing at violation of height rule.
	d. assuming x is right heavy
		1. if x's right child is right heavy or balanced: right-rotate(x)
		2. else RR its right child, LR x.
3. O(nlg(n))
