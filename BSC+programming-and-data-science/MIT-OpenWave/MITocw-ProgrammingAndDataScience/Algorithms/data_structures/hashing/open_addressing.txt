Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-10-14T16:59:23+05:30

====== open addressing ======
Created Thursday 14 October 2021

* no chaining
* only available data struct ‚Üí array
* hash table has one item per slot ‚Üí m>n

===== Probing =====
* hash function that specifies order of slots to probe for a key
* h : ùîò X {0,..m-1} : unierse of keys X trial count ‚Üí slot numbers {0,1,...m-1}
* given arbitrary key k,
	* h(k,1),h(k,2)... is a permutation of range(m).
* empty slot stores a NONE
* deleted slot contains flag different from NONE, say UNDEFINED.
* search continues on encountering UNDEFINED.
* insert treates UNDEFINED and NONE equally and inserts value on encountering either.
==== strategies ====
* linear probing
	* h(k,i)=(h'(k)+i)mod m : h' being a ordinary hash function
	* cons:
		* cluster: consecutive groups of occupied slots.
		* clusters keep growing ‚Üí load **un**balancing.
* Double Hashing
	* h(k,i) = (h_{i}(k) + i.h_{2}(k)) mod m
	* if (h_{2}(k)) is relatively prime to m , permutation property is satisfie.
	* take an odd hash function and set m=2^{r}
===== Uniform Hashing Assumption =====
Each key is equally likely to have any one of the m! permutations as its probe sequence. 
* Œ± = n/m , cost of operations ‚â§ 1/(1-Œ±) ‚Üí as Œ± gets ‚â• 0.4, need to resize table.
