Computational Thinking
Professor. Madhavan Mukund
Department of Computer Science
Chennai Mathematical Institute
Professor. G. Venkatesh
Indian Institute of Technology, Madras
Applications of concurrency to speedup the execution process
PROF. MADHAVAN MUKUND: So, what about these trains then? So, we had this we saw
that the shops had a lot of concurrency. We also saw that our scores we could have these
different teachers...
PROF. G. VENKATESH: Could make concurrent.
PROF. MADHAVAN MUKUND: Who did their job individually and then we kind of
coordinated that role through the class teacher. So, here, how can we think of
PROF. G. VENKATESH: here is natural concurrency, train is running concurrently.
PROF. MADHAVAN MUKUND: we already saw that actually the same train actually runs
on many days.
PROF. G. VENKATESH: I know.
PROF. MADHAVAN MUKUND: So, we have to be able to ask at a given time,
PROF. G. VENKATESH: Where are you?
PROF. MADHAVAN MUKUND: Where are you? And it depends on which is,
PROF. G. VENKATESH: the train is all, all the trains are running, I mean, some, of course,
the train has we created the object has to be created in the class. But once created, it is
running.
PROF. MADHAVAN MUKUND: So, at a given time, for each train,
PROF. G. VENKATESH: multiple trains will be running.
PROF. MADHAVAN MUKUND: at a fixed day of the week and the time and all trains are
running on time, for example, then some of these trains are running,
PROF. G. VENKATESH: at any given point in time, I can,
PROF. MADHAVAN MUKUND: ask,
PROF. G. VENKATESH: check, who is running?
PROF. MADHAVAN MUKUND: and where you are? I mean,
PROF. G. VENKATESH: Where you are? Like that
PROF. MADHAVAN MUKUND: I can kind of get that. So, that will be the snapshot of all
the trains.
PROF. G. VENKATESH: trains running.
PROF. MADHAVAN MUKUND: trains running.
PROF. G. VENKATESH: if you have a map you can see, the trains with the statics on the
map and some stations also some trains will be actually sitting at the stations.
PROF. MADHAVAN MUKUND: some of them will be waiting.
PROF. G. VENKATESH: We ask the station.
PROF. MADHAVAN MUKUND: Yeah,
PROF. G. VENKATESH: which trains are waiting in the station, are there any station trains
sitting in the station right now? Some stations will have, some stations will not have.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: some stations have more than one?
PROF. MADHAVAN MUKUND: correct.
PROF. G. VENKATESH: right?
PROF. MADHAVAN MUKUND: multiple platforms and..
PROF. G. VENKATESH: and also, sometimes junction or they stay there for a long time.
PROF. MADHAVAN MUKUND: Yeah, but even here, you can see typically, I mean, here
some of these trains,
(Refer Slide Time: 01:51)
PROF. MADHAVAN MUKUND: they could stop some Kharagpur for 5 minutes. So, here
also, you can see that this one this first train at Adra stops for 10 minutes different depending
on the train and schedule, it could be..
PROF. G. VENKATESH: sitting in the station.
PROF. MADHAVAN MUKUND:
PROF. G. VENKATESH: So, you can ask the stations how many trains are sitting here with
you right now?
PROF. MADHAVAN MUKUND: Right.
PROF. G. VENKATESH: So, there is a lot of concurrency here, all the stations are
concurrently doing something trains are running.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: Are they interacting?
PROF. MADHAVAN MUKUND: Hardly.
PROF. G. VENKATESH: Hardly any,
PROF. MADHAVAN MUKUND: Not much. I guess stations and train will track to the
extent that
PROF. G. VENKATESH: train later the station.
PROF. MADHAVAN MUKUND: so, that means the station is now occupied. So, there the
next
PROF. G. VENKATESH: next train has to wait,
PROF. MADHAVAN MUKUND: wait in case there is I mean, normally it will be scheduled
so that they do not have to wait. But if there is a delay or something, then you know that the
next train has to wait for the first train to go pass. So, we will have to check with.
PROF. G. VENKATESH: So, what we will I do, second, so another train, so the train is
coming to a station.
PROF. MADHAVAN MUKUND: Yeah, so, it will have to ask the station.
PROF. G. VENKATESH: Are you free?
PROF. MADHAVAN MUKUND: Are you free? And that
PROF. G. VENKATESH: station will say
PROF. MADHAVAN MUKUND: station will look at its timetable, maybe like this and it
will look at the previous train on that day and that thing and see whether it has left. So, it will
ask that train, where are you?
PROF. G. VENKATESH: where are you? I am with you earlier. Then he will say, all right.
PROF. MADHAVAN MUKUND: then he will say I go back no you have to wait.
PROF. G. VENKATESH: Wait, so that guy will usually he will park outside the station, they
will be waiting.
PROF. MADHAVAN MUKUND: Yeah, outside the station.
PROF. G. VENKATESH: So, they are interacting, because trains are delayed and therefore,
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: the station gets occupied.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: And so, it makes this train get delayed, but then the other train
coming on the track?
PROF. MADHAVAN MUKUND: correct. So, that guy will also get delayed also, suppose.
So, because now will, last station at the session will..
PROF. G. VENKATESH: Usually, the guy will. How does it work?
PROF. MADHAVAN MUKUND: They are the signals,
PROF. G. VENKATESH: there are signals.
PROF. MADHAVAN MUKUND: so, somebody has to send a signal. So, the station will
have to send the instruction saying now I have one train waiting so put a red light before that
or something.
PROF. G. VENKATESH: Like that, they do. So, that means the train will be waiting
somewhere else.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: Far away,
PROF. MADHAVAN MUKUND: as you said. Otherwise, it will
PROF. G. VENKATESH: get crash.
PROF. MADHAVAN MUKUND: The station is not free, but it does not know how many
trains are there.
PROF. G. VENKATESH: So, crazy stuff. So, that is silly. So, the trains are interacting with
each other primarily because they share some resource which resources this, now what we
say station
PROF. MADHAVAN MUKUND: say as a station.
PROF. G. VENKATESH: or track.
PROF. MADHAVAN MUKUND: the track.
PROF. G. VENKATESH: they are all traveling on the same tracks, on a shared resource. So,
the resources are occupied like the shop, one customer is occupied, occupying the resource
with the shop. So, the other guy have to wait in the queue.
PROF. MADHAVAN MUKUND: So, there we have a queue of trains here waiting,
PROF. G. VENKATESH: we have a queue of trains waiting in, waiting to get a track or a
station or whatever.
PROF. MADHAVAN MUKUND: And then, so, here the train is talking to the station.
PROF. G. VENKATESH: Okay.
PROF. MADHAVAN MUKUND: But you might sometimes we saw that there are some very
important places where people might change trains like Delhi, Kolkata, or something. Lot of
people are coming from one direction and they are expecting to get into a train to go
somewhere else. And this train is getting delayed for whatever reason.
PROF. G. VENKATESH: Yes, commuter trains.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: there is a train which goes from say Delhi to nearby place and
there is a train that is coming from, let say Chennai to Delhi. So, you really a lot of people get
out from this Chennai-Delhi train and then they get into commuter train and go to
somewhere.
PROF. MADHAVAN MUKUND: So, then there is no point of that train takes off before this
train.
PROF. G. VENKATESH: That will be empty and then all these people are no train.
PROF. MADHAVAN MUKUND: or be stuck.
PROF. G. VENKATESH: there is usually, that is what happens.
PROF. MADHAVAN MUKUND: So, then this train will have somehow, I have to tell that
train to wait.
PROF. G. VENKATESH: I see. So, this train will have to, via station?
PROF. MADHAVAN MUKUND: well, if it knows. So, if there is some information that we
have about which trains are,
PROF. G. VENKATESH: you tell the station.
PROF. MADHAVAN MUKUND: I am delayed.
PROF. G. VENKATESH: So, the station will decide.
PROF. MADHAVAN MUKUND: Yeah, it will look at trains which are leaving after this
train arrives,
PROF. G. VENKATESH: and which are dependent on it
PROF. MADHAVAN MUKUND: yeah.
PROF. G. VENKATESH: and lot of passengers move from one to another
PROF. MADHAVAN MUKUND: and if it knows about this in previous history, it knows
that it will then tell signal to them that maybe you should
PROF. G. VENKATESH: wait.
PROF. MADHAVAN MUKUND: postpone your departure.
PROF. G. VENKATESH: by 10, 20 minutes.
PROF. MADHAVAN MUKUND: something like that.
PROF. G. VENKATESH: something like that, if it is too long then it may say like forget it,
PROF. MADHAVAN MUKUND: because it may be another train.
PROF. G. VENKATESH: So, things which are getting delayed may cause delay in
connecting trains.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: and all that. So, there is a lot of interaction like that that may
happen.
PROF. MADHAVAN MUKUND: So, between trains and stations, you could have this
indirectly a train telling another train to wait. So,
PROF. G. VENKATESH: you want to go back to one of the real problems that we did this
PROF. MADHAVAN MUKUND: we will do that how to get from one station to another,
PROF. G. VENKATESH: So, there is two stations are there but may not be a direct train,..
PROF. MADHAVAN MUKUND: So, direct train is relatively easy, I am station, I asked you
to tell me the list of trains that you have or I send you the list of trains that I pass through and
we check whether there is a train in common.
PROF. G. VENKATESH: that is easy, we do not want to do direct train. Assume, that we are
trying to find a way via a junction.
PROF. MADHAVAN MUKUND: one junction.
PROF. G. VENKATESH: one junction.
PROF. MADHAVAN MUKUND: there is one-stop..
PROF. G. VENKATESH: one stop.
PROF. MADHAVAN MUKUND: So,..
PROF. G. VENKATESH: so, there are two objects here the station 1 is one object, station 2
is the other object
PROF. MADHAVAN MUKUND: and each has a list of trains that pass through. I have trains
which pass through me
PROF. G. VENKATESH: and I have
PROF. MADHAVAN MUKUND: other trains which pass through yours, you are station.
You have trains and we need to know whether these trains somehow intersect,
PROF. G. VENKATESH: which means that the trains have a common
PROF. MADHAVAN MUKUND: they have a common station on their route. So, I for every
train and my set and for every train.
PROF. G. VENKATESH: Can we think, nice concurrent way of doing it. They are
parallelly
PROF. MADHAVAN MUKUND: Basically, what do we want to do, we want to ask a train
to compare its stations with another train.
PROF. G. VENKATESH: We have stations and we start with stations.
PROF. MADHAVAN MUKUND: So, first so I have 1, I am station 1.
PROF. MADHAVAN MUKUND: So, if I look at my card for instance, I get a list of
PROF. G. VENKATESH: train objects, I know the train objects.
PROF. MADHAVAN MUKUND: So, list of trains 1 I will say.
PROF. G. VENKATESH: okay.
PROF. MADHAVAN MUKUND: Similarly,
PROF. G. VENKATESH: Which have to create, I mean there may not an object
PROF. MADHAVAN MUKUND: you have to create them, and so on. Similarly, railway
station 2 have
PROF. G. VENKATESH: will have a list of train on this. These are two objects, two station
objects have their own lists of train objects,
PROF. MADHAVAN MUKUND: correct.
PROF. G. VENKATESH: So, we have two objects.
PROF. MADHAVAN MUKUND: So, this is so, if we draw it as a, so it is some list of trains.
PROF. G. VENKATESH: trains.
PROF. MADHAVAN MUKUND: And this is a
PROF. G. VENKATESH: another list of trains,
PROF. MADHAVAN MUKUND: maybe a smaller list of trains,
PROF. G. VENKATESH: okay.
PROF. MADHAVAN MUKUND: So now what I will do is I will say it does not matter
which order. So, station 1 asks station 2 for its list of trains,
PROF. G. VENKATESH: that is the first step.
PROF. MADHAVAN MUKUND: So, you ask for
PROF. G. VENKATESH: station 1 object will request send a message to station 2 object
thing give me your list of trains?
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: This is ..
PROF. MADHAVAN MUKUND: Now this comes
PROF. G. VENKATESH: this guy sits here.
PROF. MADHAVAN MUKUND: So, it will have with tray, as usual, okay. So, you will
have this tray into which you put this
PROF. G. VENKATESH: puts the result.
PROF. MADHAVAN MUKUND: these 3 trains
PROF. G. VENKATESH: Okay. So, now both the lists are inside this
PROF. MADHAVAN MUKUND: So, now station 1 can start, the job
PROF. G. VENKATESH: It has both
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: the lists, both the list of objects.
PROF. MADHAVAN MUKUND: it has its own train objects and it has all the train objects.
So, station
PROF. G. VENKATESH: for an object.
PROF. MADHAVAN MUKUND: So, now, what it needs to do is we said for each of these it
has to compare with each of these.
PROF. G. VENKATESH: or does it have a compare.
PROF. MADHAVAN MUKUND: It has to check whether the list of stations for train in the
first train overlaps with the list of stations here wherever there is a common station that is a
possibility.
PROF. G. VENKATESH: So, this, this is each of these are object now each box is also an
object.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: So, this object and this object have to talk to each other.
PROF. MADHAVAN MUKUND:. And then this object has to talk to that also. And this
object
PROF. G. VENKATESH:
PROF. MADHAVAN MUKUND: So, what we can do is we can tell the station object to pass
this whole thing to this guy? So, let us give them some names. So, let us call this T1, T2, T3,
T4 and T5, and T6. So, there are 6 trains which belong to the first station. And let us call this
I do not know, U1, U2, U3. These 3 trains which belong to the second guy. So, now what this
station 1 is going to do is going to take this T1 object and is going to pass it U1, U2, U3.
Saying compare yourself with these three guys.
PROF. G. VENKATESH: All right.
PROF. MADHAVAN MUKUND: And then he is going to do the same thing.
PROF. G. VENKATESH: It can pass it at a time and he can get U1 this U1.
PROF. MADHAVAN MUKUND: you can do it 1. Or you can just give me 1 station actually.
PROF. G. VENKATESH: I do not think.
PROF. MADHAVAN MUKUND: But this is nice. Because then we just it is like earlier
like
PROF. G. VENKATESH: much more
PROF. MADHAVAN MUKUND: So, you can pass it to T1 and then let T1 do it.
Meanwhile, you call T2 and say T2, So, these are all independent jobs,
PROF. G. VENKATESH: okay, okay.
PROF. MADHAVAN MUKUND: So, what this will now do is it will come back.
PROF. G. VENKATESH: So, T1 what will do?
PROF. MADHAVAN MUKUND: So, T1 will first check it station list to the U N station list,
PROF. G. VENKATESH: okay.
PROF. MADHAVAN MUKUND: So, each train object has a list of stations. So, it will come
back with some J1
PROF. G. VENKATESH: For which again it will talk with U1
PROF. MADHAVAN MUKUND: T1 will talk to itself.
PROF. G. VENKATESH: U1 object is there like.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: So, T 1 as to consult one object and
PROF. MADHAVAN MUKUND: it has to ask you an object for stations and so on.
PROF. G. VENKATESH: So, T1 object will ask U1 object for its stations. And then it will
compare those stations with the coordinate stations.
PROF. MADHAVAN MUKUND: And you will get some lists of junctions..
PROF. G. VENKATESH: lists of junctions,
PROF. MADHAVAN MUKUND: And same with J2 and J3. So, it will produce 3 lists of
junctions. These may be empty, said that there no junctions.
PROF. G. VENKATESH: similarity T2 would be
PROF. MADHAVAN MUKUND: Yes, to lose anything. So, we will come out with some
JJ1, JJ2. So, this way, each
PROF. G. VENKATESH: you get every train basically produces a list of junctions.
PROF. MADHAVAN MUKUND: and then from this now, these will all go back to station 1
because station 1 has asked them to do this. So, station 1 will get 3 lists from the first guy, 3
lists from the second guy, 3 lists from a third guy. And whichever ones are not empty,
PROF. G. VENKATESH: It cancel one of them
PROF. MADHAVAN MUKUND: It tells the station 1 that for any non-empty list, it can say
for this train, say from T 4, I can connect on JJ something to U3, and then get 2 station
together.
PROF. G. VENKATESH: I see.
PROF. MADHAVAN MUKUND: but the thing is that this searching here.
PROF. G. VENKATESH: is parallel.
PROF. MADHAVAN MUKUND: is all done concurrently. So, T1 can process its neighbours
independent to T2, independent to T3. And then all the answers come back.
PROF. G. VENKATESH: So, station 1 took its list of trains. From station 2 it got the station
2's list of trains,
PROF. MADHAVAN MUKUND: like a standard remote procedure call.
PROF. G. VENKATESH: remote procedure call.
PROF. MADHAVAN MUKUND: So, it has to wait for that to come if, I cannot do anything
without that.
PROF. G. VENKATESH: after that everything is inside station 1. It took its list of trains,
stations that he got from other guy and he passed those objects to
PROF. MADHAVAN MUKUND: he takes thing to each of
PROF. G. VENKATESH: each of his trains and tells the train
PROF. MADHAVAN MUKUND: you figure out
PROF. G. VENKATESH: what are you figure out tell me
PROF. MADHAVAN MUKUND: figure out tell me if there is a good job.
PROF. G. VENKATESH: that guy will do a number of things he will take his stations
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: he will ask the objects
PROF. MADHAVAN MUKUND: for that guy station.
PROF. G. VENKATESH: for those guy stations, he will take those stations he will compare
the stations and find out the junctions
 common junctions.
PROF. MADHAVAN MUKUND: yeah.
PROF. G. VENKATESH: if there is any, is know a junction and then it will empty. So, you
will make such a list of possible junctions.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: And then he will send these lists of possible junctions back to the
parent.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: Parent will assemble all this
PROF. MADHAVAN MUKUND: information and it will have information of the type start
with some
PROF. G. VENKATESH: train.
PROF. MADHAVAN MUKUND: train.
PROF. G. VENKATESH: T1, let us say.
PROF. MADHAVAN MUKUND: transfer at some junction.
PROF. G. VENKATESH: go to Junction J1, go to U1.
PROF. MADHAVAN MUKUND: U1 and then you will reach station.
PROF. G. VENKATESH: reach station like that he will make a list.
PROF. MADHAVAN MUKUND: Yeah.
PROF. G. VENKATESH: So, this is a concurrent way of doing this.
PROF. MADHAVAN MUKUND: Yeah, since you are doing it one by one. You can speed
up things this way.
PROF. G. VENKATESH: Speed up things this way.
PROF. MADHAVAN MUKUND: Yeah.
