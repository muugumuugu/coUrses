Computational Thinking
Professor. Madhavan Mukund
Professor G. Venkatesh
Department of Computer Science
Chennai mathematical Institute
Indian Institute of Technology, Madras
Real time applications of concurrency and drawbacks of the same
Professor Madhavan Mukund: So, we saw some idea about how these objects interact
and could have some concurrent procedure calls for these scores and class teacher and
physics teacher and all that. So, I am wondering, I am sure that we have this other data
set like shopping bills. So, we have these customers and we have shops. So, again,
there are a lot of things happening, people are going same customer is going to shop,
shop is getting
Professor G. Venkatesh: Interesting difference, the difference is that, unlike their
where the class teacher and physics, chemistry, math, physics, chemistry maths
teacher could be under the class. Here, you cannot make one customer after another
customer.
Professor Madhavan Mukund: Customers are all separate from each other and the
shops are also they are all at the same level, they are all equal, in some sense, equals
Professor G. Venkatesh: shop also at the same.
Professor Madhavan Mukund: Because I cannot say that this shop will create another
shop and I can only go to that shop through this shop.
Professor G. Venkatesh: Or even the shop creates the customer, or the customer
creates the shop nothing.
Professor Madhavan Mukund: So, they are independent.
Professor G. Venkatesh: They all independent. So, we have many customers.
Professor Madhavan Mukund: We have many customers, we have many shops.
Professor G. Venkatesh: They are all objects all got A and then the customer keeps
going and buy, why does the customer keep buying from the shop? Because he has
some things to buy some means how something is happening.
Professor Madhavan Mukund: But obviously, you do not go to the shop every 5
minutes or something.
Professor G.Venkatesh: No, you do not do that.
Professor Madhavan Mukund: So, you wait for something to happen.
Professor G.Venkatesh: Typically, in house, people keep having requirements to get
me a packet of biscuits, or something else somebody sugar has run out like that.
Professor Madhavan Mukund: So maybe that
s how a systematic way of doing that.
So, maybe they have a list which they put up somewhere maybe they have a
something
Professor Madhavan Mukund: Stay stuck on a fridge with magnet.
Professor G.Venkatesh: Say maintain a book.
Professor Madhavan Mukund: Book. So, you are one person you open, you go to the
kitchen and you say there is no sugar or there is no biscuits so there is no something.
Professor G.Venkatesh: Normally milk or curd or something so you write down there.
Professor Madhavan Mukund: Say you write it down because you are lazy to go and
then when there is enough things on the list then somebody will go.
Professor G.Venkatesh: Somebody has go. Some poor fellow has to take it.
(Refer Slide Time: 02:19)
Professor Madhavan Mukund: So we have a list.
Professor G.Venkatesh: That is like, you know what that looks like that producer
whatever you said producer consumer something.
Professor Madhavan Mukund: So, exactly, we have a list here it where shopping list
inside this house.
Professor G.Venkatesh: House.
Professor Madhavan Mukund: That why we have this house nice house it has his
shopping list and so people are various people are adding things to this list.
Professor G.Venkatesh: Everybody keeps writing into that list.
Professor Madhavan Mukund: And when the list becomes long, then somebody
decides to.
Professor G.Venkatesh: Take the list.
Professor Madhavan Mukund: Take the list and go to a shop.
Professor G.Venkatesh: Goes to a shop.
Professor Madhavan Mukund: So, now I have a shop here.
Professor G.Venkatesh: So, when he said Srivatsan went to big bazaar or something
like that, the result of Srivatsan going to big bazaar was this process that happened
inside his house.
Professor Madhavan Mukund: Correct. So, this guy will come here and it will say give
me these items, whatever is on my list.
Professor G.Venkatesh: On the list. You may ask the shopkeeper if I give the list to
the shopkeeper, shopkeeper may do.
Professor Madhavan Mukund: So, let us assume it is one of this old style thing.
Professor G.Venkatesh: Kirana kirana stores. 
Professor Madhavan Mukund: Which not a department store where you pick it up on
the shelf, you give him a list, they will go back, they will have some they will have
some darkroom inside and then come back, and then we will give you everything.so
luckily.
Professor G.Venkatesh: Better way ask me.
Professor Madhavan Mukund: Now, the same thing that happened here is happening
here also. So, this guy asked for sugar because somebody ate it. Now, this guy is gone
and picked up a sugar from the shop. Now, the shop is lost one packet of sugar.
Professor G.Venkatesh: So, shop has to.
Professor Madhavan Mukund: The shopper also get it, has to get otherwise, eventually
somebody will come and there will be no sugar.
Professor G.Venkatesh: So, when can basically they will have somebody to purchase
another shop.
Professor Madhavan Mukund: They will have to go to some market or some
Professor G.Venkatesh: They will have to call the.
Professor Madhavan Mukund: Some supplier.
Professor G.Venkatesh: Whoever is making sugar you will have to call again.
Professor Madhavan Mukund: Deliver some. But again, he is not going to do it for
everyone.
Professor G.Venkatesh: He will not do it one by one. So, he will have a list.
Professor Madhavan Mukund: So, you will have a list. So, this will like reorder list.
Professor G.Venkatesh: Which he will I have seen actually in pharmacies and all we
go he has a little book. You would try to buy exact give me crocin. He goes to shelf
will see when he open up the box takes out the crocin.
Professor Madhavan Mukund: Only two strips are left.
Professor G.Venkatesh: Two strip are left. They would open a book.
Professor Madhavan Mukund: And they write it
Professor G.Venkatesh: And he write it down.
Professor Madhavan Mukund: So, basically these things now let us assume that when
you sell these things, then you write down here saying I sold these things. So, you
know that these things used to be in my shop, but now they are not there anymore. So,
now another guy might come from somewhere else.
Professor G.Venkatesh: Another customer.
Professor Madhavan Mukund: Another customer and he might produce another list
like this. So, now you will add these items also here and eventually when there are
same thing, lazy guy like this guy did not want to go and buy one thing at a time. So,
he only goes when the list is long enough. Reordering also, you will not reorder only
one item.
Professor G.Venkatesh: You will wait
Professor Madhavan Mukund: You will wait. So, eventually this will go out to some
supplier.
Professor G.Venkatesh: One or more, depending on items.
Professor Madhavan Mukund: Depending on the items and the supplier will
eventually give back that quantity of items, which have been.
Professor G.Venkatesh: Phenomenal work currency going on here. Every customer so
every house is generating items and putting it on list.
Professor Madhavan Mukund: So, these lists are being generated by some producers.
So, this is the second house here, another house draw it nicely, this another house.
Professor G.Venkatesh: So, many lists are getting generated.
Professor Madhavan Mukund: So, these lists are happening concurrently, because
different people are writing into it at a different point of time.
Professor G.Venkatesh: So, the writes are there people are putting requests into the list
then at some point.
Professor Madhavan Mukund: That list gets transferred to the shop by somebody
going.
Professor G.Venkatesh: Somebody takes that is a bill.
Professor Madhavan Mukund: That is a bill.
Professor G.Venkatesh: That is where the bill comes. All we know is the bill.
Professor Madhavan Mukund: The bill that we saw in the data set.
Professor G.Venkatesh: Without a date and time.
Professor Madhavan Mukund: Is actually the outcome of one such.
Professor G.Venkatesh: One such transaction. So, it is result of this process, some
people put some on a shopping list. This guy took that shopping list, went to the shop,
he made an order, he got where it result and then he took the bill and went out and that
was a bill we are seeing. So, each bill got generated by one process like that.
Professor Madhavan Mukund: Yes.
Professor G.Venkatesh: And that bill in turn generated.
Professor Madhavan Mukund: So, let us look at our bills just to remind ourselves that
they exist. So, these are our bills. So, each of these is the outcome of one such
interaction between.
Professor G.Venkatesh: So, in this case, the customer is Ahmed. So, Ahmed
presumably in his house had a list.
Professor Madhavan Mukund: And he went to the list
Professor G.Venkatesh: saw tomatoes, curd, cupcakes, carrots and all that they put on
it. He went to SV who is a shop. He bought all these things.
Professor Madhavan Mukund: And SV stores now.
Professor G.Venkatesh: SV stores recorded this bill.
Professor Madhavan Mukund: The bill is added to its reordered list.
Professor G.Venkatesh: Reorder list.
Professor Madhavan Mukund: Say I have just got given away so much of these things.
So, I am down by that much in my stocks. So, eventually, I must replenish.
Professor G.Venkatesh: The stock
Professor Madhavan Mukund: The stock otherwise customer will be unhappy.
Professor G.Venkatesh: So, we have so basically every shop is getting many
customers.
Professor Madhavan Mukund: Correct.
Professor G.Venkatesh: Now, they can service one customer at a time more than one
usually in the old kirana style only one at a time.
Professor Madhavan Mukund: One at a time.
Professor G.Venkatesh: So, the customer themselves will be in a queue.
Professor Madhavan Mukund: They will be in a queue.
Professor G.Venkatesh: Customer makes a request from a shop. So, they will be in a
queue. So, again again putting consumer model, shop is a producer, customer is the
consumer, consumer stands in queue and then the producer basically will serve the
customer and after serving the customer or while serving the customer will keep
entering into the list reorder lists. Somebody else in the shop is looking at the reorder
list.
Professor Madhavan Mukund: And deciding when to place an order.
Professor G.Venkatesh: And decide when place the order. He goes places order on
some supplier
s more than one supplier that supplier takes his own time and then
presumably he will bring it in a truck and he will have a place to put it the result.
Professor Madhavan Mukund: Correct.
Professor G.Venkatesh: So, there is a tray equivalent to tray there.
Professor Madhavan Mukund: There is a tray for supplies to come.
Professor G.Venkatesh: Supplies to come. So, the supplier will come and put the
result in put it in the godown something he will do. The shop will take the godown
items and he will pack it again in the shelf something he will do have after do inside.
Meanwhile more customers are coming. So, lot of parallelism lot of things going on
simultaneously concurrency like anything.
Professor Madhavan Mukund: Yes and now you could have problems.
Professor G.Venkatesh: More problems can have.
Professor Madhavan Mukund: So, this guy, because depending supposing.
Professor G.Venkatesh: We took care of problem tray and all that.
Professor Madhavan Mukund: But what if.
Professor G.Venkatesh: Atomicity, write, read something.
Professor Madhavan Mukund: Now, in terms of the shop
s own stocks. So, he has a
policy maybe he has a policy that when this reorder list becomes long enough he will
reorder the things but there is an unexpected is happen some festival day everybody
wants to buy something sugar.
Professor G.Venkatesh: Flowers.
Professor Madhavan Mukund: Peanuts something some particular thing which has to
be made that day. So, there is a big rush normally does not matter. Normally he knows
that this reorder list is when it fills up and if he fills it up, reorders it is fine. But today
all the customers.
Professor G.Venkatesh: Everybody got sugar and went away, because Diwali.
Professor Madhavan Mukund: And suddenly the next guy comes yes there is a
pending orders I mean eventually 20 bags of sugar are going to come but right now
there is nothing.
Professor G.Venkatesh: What is happen then?
Professor Madhavan Mukund: So, then what happens?
Professor G.Venkatesh: Customer comes with a list one of the items is sugar, shop
does not have sugar.
Professor Madhavan Mukund: So, what will the customer do, customer wants a sugar.
So, he knows.
Professor G.Venkatesh: Shop can say like wait I will my guys gone to shop they are
going to buy sugar.
Professor Madhavan Mukund: So, we can try and push the supplier to come early but
maybe it is like late evening and the supplier is definitely not going to come till
tomorrow. So, then you have I mean even the customer may be smart enough to know
that this is not going to happen.
Professor G.Venkatesh: Customer will typically say forget it and go to other shop. But
that shops problem will be there.
Professor Madhavan Mukund: Same problem will there. But the serious thing now
this guy has come to buy some 10 things, and the shopkeeper has.
Professor G.Venkatesh: 9 thing he has.
Professor Madhavan Mukund: 9 things he has.
Professor G.Venkatesh: Only sugar.
Professor Madhavan Mukund: Only sugar and you going to lose a customer for all the
Professor G.Venkatesh: What I sees is at least I have seen this in Bombay and all I am
sure here also Chennai also it might be happening. The shopkeeper never sends the
customer out he will.
Professor Madhavan Mukund: He will try to hold him. So, he will say I will get it for
you.
Professor G.Venkatesh: He go to another shop he said his boy even sent to another
shop.
Professor Madhavan Mukund: To pick up that same item.
Professor G.Venkatesh: Sugar.
Professor Madhavan Mukund: So, he will behave like a customer in some sense for
that shop and just.
Professor G.Venkatesh: Buy sugar.
Professor Madhavan Mukund: The missing items will buy, come back and then.
Professor G.Venkatesh: Put the whole thing together we know he will keep the
customer happy chit chat with him, something like that.
Professor Madhavan Mukund: Exactly, so filling this order of the customer filling I
mean, preparing the bill, which is remain essentially.
Professor G.Venkatesh: there is other thing you can do, the shop can say to the
customer, I have 9 items buy the 9 items, sugar will come shortly. When the sugar
comes I will give you, give me your number I will deliver it our house we can say.
Professor Madhavan Mukund: So, that depends whether the how urgent it is for the
customer, if the customers.
Professor G.Venkatesh: Going to make sweets.
Professor Madhavan Mukund: If the tea has.
Professor G.Venkatesh: His visitor, if he is got guests setting in house he got no sugar
in his house.
Professor Madhavan Mukund: So, the tea is boiling and
Professor G.Venkatesh: That is true.
Professor Madhavan Mukund: So, he may not be happy about this say.
Professor G.Venkatesh: He may not happy about giving the number and all that.
Professor Madhavan Mukund: But this, so one has to.
Professor G.Venkatesh: So, one of possible things come up because of concurrency.
Professor Madhavan Mukund: There are situations which you may anticipate like this.
There are some which you may not anticipate.
Professor G.Venkatesh: And there are solutions for it also in real life, it seems.
Professor Madhavan Mukund: So, those which come up in real life, people have
figured out they do happen, and then you wake make up kind of solution which fits
that. But you have to be careful that sometimes, two customers come and there is one
packet of sugar.
Professor G.Venkatesh: I cannot break it otherwise I can tear if I can.
Professor Madhavan Mukund: So, this guy is waiting, because so supposing this
happens. So, he has come for a sugar. Now, they are in a queue. So, he is waiting, and
that guy is said while you are waiting, I want I sent my boy to get the sugar and this
guy is come. So, he turns his attention to the next question, that guy does not want to
wait for this first guy sugar to come. So, this guy is asked for some tea, or coffee or
something and the last packet of coffee is been taken by the previous customer.
Professor G.Venkatesh: I see.
Professor Madhavan Mukund: So, now this guys is to wait for coffee or that guy could
say.
Professor G.Venkatesh: First guy is the tea is their coffee is their first guy is booked
the tea and he is keeping it he is holding on to it waiting for sugar. The second guy is
waiting only tea.
Professor Madhavan Mukund: Only for this.
Professor G.Venkatesh: After all, that the first guy might get frustrated go away.
Professor Madhavan Mukund: And this guy may also loses the second customer.
Professor G.Venkatesh: lose a second customer because he could actually serve tea to
second one.
Professor Madhavan Mukund: So, he might take it and say okay, you are missing on a
item.
Professor G.Venkatesh: Really, really interesting possibilities so.
Professor Madhavan Mukund: So a lot of such things you could imagine and think of
how you could find a suitable solution which people will be happy with, I mean,
ultimately for the shop we have solution we chooses one.
Professor G.Venkatesh: Algorithms or whatever it is this way of writing code for
writing it for concurrent situations it is far much challenging.
Professor Madhavan Mukund: it is very challenging actually, because of this.
Professor G.Venkatesh: Possible.
Professor Madhavan Mukund: Mainly because these things are happening at without
any predictable order between them. So, you do not know when the list is going to get
filled, you do not know when the customer is going to come asking for an item
compared to when you are going to reorder the item and it is going to be delivered.
So, then you have a mismatch here between what is available in the shop and what is
so in principle you have everything, but some of it is in transit, because the order has
not come back from the supplier. And at that point, if a lot of customers come which
you cannot predict, then you have difficulties. So, since you cannot control in some
sense also this.
Professor G.Venkatesh: Order.
Professor Madhavan Mukund: Order in which things happen, you have to have
contingencies for all.
Professor G.Venkatesh: Normally when I write when I write a procedure, in term step
and so on. I can check it I give it some data and I actually go through the steps. I can
validate, how do I validate some.
Professor Madhavan Mukund: So, here you will have to in some sense, imagine all the
possible ways in which one could happen before the other. So, it becomes a very like
the number of possibilities becomes very large.
Professor G.Venkatesh: Very large.
Professor Madhavan Mukund: Because I have say two customers just like this simple
example, I have two customers and some items and then some reorder then you have
to say okay both the customers come before I reorder, one customer comes in then this
reorder. So, there are so many different ways in which these concurrent things could
be sequenced. In addition to the fact that the actual list items have to be service and all
that so.
Professor G.Venkatesh: It is tough.
Professor Madhavan Mukund: It is very tough. It is very tough because we are I think
not good at also mentally.
Professor G.Venkatesh: Not good at doing.
Professor Madhavan Mukund: It is hard keep track. Even when we.
Professor G.Venkatesh: Multitasking.
Professor Madhavan Mukund: When we are doing two, three things at the same time,
we tend to lose, that is why, if you are not focusing on what we are doing, we tend to
make mistakes, because we forget to take one step. So, it is equally tough to design
these things of course, it will run, once you have designed it, you written the code it
will run, but have you taken care of all the situations in a acceptable way or will it
suddenly get stuck, and then.
Professor G.Venkatesh: then you get stuck, you don
t know about it.
Professor Madhavan Mukund: See because if you have not, if you not anticipated that
a situation could come in a shop customer comes to a shop and the item is not there.
Then at this point, your procedures just get stuck. If you have assumed that all the
items that are to be bought are there. It could also be that the customer has some
alternative.
He is asking for this type of soap and he willing to take another type of soap. So, that
is also an option he could be specific to a type of brand, which case a shopkeeper
could suggest I do not have this, but I have that will you take that instead. So, you
have to have this kind of things at the level of code. In real life we know how these
things handle.
Professor G.Venkatesh: Actually I have seen some very smart shopkeepers, when they
have many customers standing in queue in front of them, they try to service more than
one customer at the same time by.
Professor Madhavan Mukund: They do their own concurrent thing, especially in this
current Khirana store, because it takes some time to go and fetch the thing from the.
Professor G.Venkatesh: Yeah
Professor Madhavan Mukund: So, while start taking so the first guy is waiting for his
soap to come. Then we will ask secondary, what do you want of course, then
sometimes you get frustrated if you are standing there because you think that you are
being made to wait.
But generally the whole thing goes through much faster that way rather than finishing
one whole thing. Especially if somebody has a long list that is also a big problem. If
somebody has a long list, somebody is asking to buy 10 items and somebody got only
2 item.
Professor G.Venkatesh: 1 item or 2 items, then that person can actually come finish
and go buy the while this guy still. See this happens in the supermarket, which you
cannot I mean, kirana store guy can do it, supermarket if he get stuck behind stuck
behind a guy with a whole fully shopping basket.
Professor G.Venkatesh: You have finished.
Professor Madhavan Mukund: It can be really slow and then that same person will
usually have forgotten thing run back to go and get more things from inside while that
bill is being made so.
Professor G.Venkatesh: But you will have more than one checkout counter there.
Professor Madhavan Mukund: But usually, then you look and see that somebody has
joined that line. Now, should I wait for this guy and of course, there is a rule,
whenever you switch that other counter.
Professor G.Venkatesh: Whichever counter you move to will get slow. So, many
possibilities, this concurrency thing is really, really interesting.
Professor Madhavan Mukund: But the thing is that in real life, this is what happens
Professor G.Venkatesh: this what is happen.
Professor Madhavan Mukund: We deal with these things all the time and if we want to
somehow make them happen automatically or mechanically. So, if you take a kirana
store and you want to put it online, then you have to deal with these issues. You have
to write code, which handles all these multiple customers coming asking for. So, this
is the same problem that you will face now, if you are selling say flight tickets, I look
at the flight and it says there is a ticket, you look at a seat, you look at the flight and
you say there is seat.
Professor G.Venkatesh: Both of us try same time.
Professor Madhavan Mukund: both of us try to buy actually there is only one seat. So,
only one of us going to get it. But when we are looking at it, nobody is trying to buy
it, there is a seat. It does not tell you normally how many seats are there,
Professor G.Venkatesh: Even I work of this and concurrent what you call this I mean
this is the situation finally.
Professor Madhavan Mukund: So, we are in some sense, we are racing this thing. So,
whoever gets to that seat first is going to get the seat the other person going to be
disappointed. So, this is called a race race condition. So, that so this happens in.
Professor G.Venkatesh: But it may so happen that both of us go for the seat the guy
tries to block it. Both of us say okay, the seat is not coming. So, both of us get out. So,
that obvious never gets old.
Professor Madhavan Mukund: That is another situation so.
Professor G.Venkatesh: We both of us. I can start talking somehow we figure out
when you talk I keep quiet, and I talk you keep quiet sometimes both of us start
talking.
Professor Madhavan Mukund: Or supposing there is a package deal, Supposing there
selling something where I offer you a flight and a hotel. Now, it so happens that we
booked it together, I mean, separate bookings and there was only one hotel room and
only one flight seat.
Professor G.Venkatesh: I got the flight. You got the hotel.
Professor Madhavan Mukund: And I waiting for somebody to release a flight seat, you
are waiting for somebody to release the hotel room and we are both stuck. We are
waiting for each other, none of us are willing to give it up. So, this also,
Professor G.Venkatesh:
Professor Madhavan Mukund: This is deadlock I waiting for you, you are waiting for
Professor G.Venkatesh: Neither getting what we want.
Professor Madhavan Mukund: Neither of us were getting what we want, neither of us
are willing to give up what we have. So, we have to decide some, some policy to get
out of this. So, all these things come up in.
Professor G.Venkatesh: Concurrency
Professor Madhavan Mukund: Concurrency when you are trying to, see when we are
dealing in real life we make a decision which at that time, we might get into an
argument or whatever but we make a decision we proceed. But code is not like that
code has to be able to otherwise if code gets stuck, it gets stuck. Nobody is going to
come and unwind it.
Professor G.Venkatesh: Especially with concurrent three four guys maybe get stuck
like for example, you said one guy is flight and one guy is hotel they are mutually
stuck.
Professor Madhavan Mukund: So now.
Professor G.Venkatesh: if it is a single programme which got stuck, then I can kill this
programme and started again. But we are two people than I have to kill both of them
so I do not know who are all stuck.
Professor Madhavan Mukund: And then if you have then you have your earlier
problem that you get stuck everybody comes back you start again, everybody comes
back so nobody makes any progress. At least you would like one person to go through
with the hotel and a flight. So ideally, you should decide one of them should give up.
Professor G.Venkatesh: Somebody has to decide it is an arbiter somebody, some God
comes in suddenly decides, you are the lucky guy I give you both hotel and flight
today.
Professor Madhavan Mukund: Tell us the way.
Professor G.Venkatesh: Very very interesting. So, many complications.
