Computational Thinking
Professor. Madhavan Mukund
Department of Computer Science,
Chennai Mathematical Institute
Professor. G. Venkatesh
Department of Electrical Engineering,
Indian Institute of Technology, Madras
Local operations and max in single iteration
Part 1
Professor. Madhavan Mukund: So, last week we had gone through these cards and we had
extracted some information. For instance, we had tried to find out what was the average
marks, we had tried to find out what was the average marks among the girls and the boys. So,
what you suggest we do know?
Professor. G. Venkatesh: We could try something slightly different, how about trying to find
out which student is has got the best marks, best total marks.
Professor. Madhavan Mukund: So, for that, of course, we have to go through all the cards but
then how to we keep track of the best marks?
Professor. G. Venkatesh: As we go along, I guess we just keep aside the card that is the
highest. Maybe therefore
Professor. Madhavan Mukund: Oh, yeah, so we can just keep remembering who has the
highest card marks among the cards we have seen and this check against that.
Professor. G. Venkatesh: Check against that.
(Refer Slide Time: 1:00)
Professor. Madhavan Mukund: So, 240 is as far as we know the highest because we have not
seen anything.
Professor. G. Venkatesh: Correct.
Professor. Madhavan Mukund: So, we will keep it aside separately.
Professor. G. Venkatesh: So, we are keeping on this side, on the right side the card that we
have seen which has the highest total marks.
Professor. Madhavan Mukund: And now we will look at the next card it is 196 and since 196
is not the highest so far. We can move it aside we will now we do not need to look at it again.
Professor. G. Venkatesh: So, that side we are keeping the cards which we are discarding.
Professor. Madhavan Mukund: Yes. Now we come to 252 but since 252 is bigger than the
one we had before. This becomes the new highest so
Professor. Madhavan Mukund: We replace this this with 252.
Professor. Madhavan Mukund: Now we see 210, so 210 is smaller so we move it aside, 276 is
high
Professor. G. Venkatesh: Is greater, so we take 276 and replace it.
Professor. Madhavan Mukund: Now 181 is smaller, 240 is smaller, 173 is smaller, 247 is
smaller, 204 is smaller, 187 is smaller, 224 is smaller. I wonder if 276 is only
Professor. G. Venkatesh: Might be the best Deepka.
Professor. Madhavan Mukund: 244 is smaller, 221, 261,254, 219, 227, 209, 174, 188, we are
running out of cards 198
Professor. G. Venkatesh: 276, Deepka is looking good.
Professor. Madhavan Mukund: 210, 250 close, 252, 189, 224, 281. So, 281 is bigger than
276.
Professor. G. Venkatesh: So, Rahul replaces Deepka as a topper right now.
Professor. Madhavan Mukund: 227 and finally 216.
Professor. G. Venkatesh: So, we have the highest score.
Professor. Madhavan Mukund: So, we have gone through all the cards and we have
effectively kept aside the maximum one that we have seen so far.
Professor. G. Venkatesh: So, 281 is the highest.
Professor. Madhavan Mukund: 281 is the maximum.
Professor. G. Venkatesh: So, is there another way to do this? I mean, without taking out this
maximum card and keeping it on the side. Is there a way?
Professor. Madhavan Mukund: So, I think we are basically remembering something so, what
we need to do is like we did last time, maybe just use a variable like we were keeping the
count and the sum and we keep updating it. So, it is slightly different.
Instead of updating the count by adding something or adding to the sum, we are replacing,
right? We take the maximum which we have seen so far. We remember that and when we see
a new number bigger than that, we replace it by that. So, we are comparing with what we
have and then we do it. So, let us try that.
(Refer Slide Time: 3:26)
Professor. G. Venkatesh: So, let me.
Professor. Madhavan Mukund: So, we will write a name. So, let us call it max. So, max is a
number that quantity we want to keep track on.
Professor. G. Venkatesh: Max. Max. Max. So, then initially it is has to be set to some value,
right? What do we select?
Professor. Madhavan Mukund: So, we do not know. So, the way we did it was we just set it
to the first card that we saw. So, let us just do that.
Professor. G. Venkatesh: So, why do not waste the time to something.
Professor. Madhavan Mukund: We know it is marks, so we know that it cannot be below 0.
Professor. G. Venkatesh: So, 0 is a absolute minimum. So, let us say 0. Let us set it to 0.
Professor. G. Venkatesh: So, we have initialised. So, this is a variable max which we have
initialised to 0 and we have starting the iterator now.
Professor. Madhavan Mukund: Yes.
Professor. G. Venkatesh: So, as usual, the iterator we will take one card at a time and move it
to a different pile. So, we are taking the first card. Total is 174. So, 174 is greater than 0.
Professor. Madhavan Mukund: So, we will replace this by 174.
Professor. G. Venkatesh: Next we are seeing the second card 209.
Professor. Madhavan Mukund: Which is also bigger.
Professor. G. Venkatesh: 209 is bigger than 174. So, we replace 174 by 209.
Professor. Madhavan Mukund: Yes.
Professor. G. Venkatesh: And the third card has 227 on it. 227 is bigger than 209.
Professor. Madhavan Mukund: So, this becomes now 227,
Professor. G. Venkatesh: 227. Now we have 219 which is smaller than
Professor. Madhavan Mukund: smaller than 227. So, what we do? We will be just pass it up
without doing any update.
Professor. G. Venkatesh: So, this this has, this is a very interesting thing because it has it
looks like we are filtering the cards because these cards we did something. We did an update.
Like we did last time we added sum, we added everything. Here, we added some of only the
boys for example or something like that or count of only the boys.
Professor. Madhavan Mukund: Correct.
Professor. G. Venkatesh: Here, when we when we look at 227, we did an update but when we
saw 219, we are not making an update.
Professor. Madhavan Mukund: So, this is like a filtering in a sense but, but the but the
condition that we are checking is not, see in the filtering case, we were checking the same
condition right through, whether it is a boy, whether it is a girl. Because here we are checking
a condition which is changing. We are checking, checking against a number we are keep
keeping on changing. So, that is
Professor. G. Venkatesh: So, we are comparing with a variable rather than comparing with
the, with a constant.
Professor. Madhavan Mukund: Yes.
Professor. G. Venkatesh: So, that is how it is different. So, 219 we have looked at. 254 is,
Professor. Madhavan Mukund: this is a new one which is bigger.
Professor. G. Venkatesh: So, we update it. 261 is also bigger. We update it. 221 is smaller so
we skip it. 281 which we have already seen is bigger. 244.
Professor. Madhavan Mukund: is smaller
Professor. G. Venkatesh: is smaller. 224 is smaller, 187 is smaller, 204 is smaller, 247 is
smaller, 173 is smaller. We remember from the last iteration that
Professor. Madhavan Mukund: 281 is actually the biggest.
Professor. G. Venkatesh: So, 181 so, I guess we will just go through all the cards, 252, 210,
240, 196, 216, 227, 276. This was the, remember last time, was the card that had the high
marks for some time. 224, 189, 252, 250, 210, 198 and 188. So, you have gone through all
the cards. So, in the end, so the first pile is empty, second pile is hold the cards in it.
Professor. Madhavan Mukund: And the end we know that the max is 281.
Professor. G. Venkatesh: So, this is again an example of an iterator.
Professor. Madhavan Mukund: Yes.
Professor. G. Venkatesh: It is an iterator with a filter in it.
Professor. Madhavan Mukund: Yes.
Professor. G. Venkatesh: Except that the filter is comparing the variable with the value on the
card and then the variable
s value is being updated, in case the variable value is less than the
value on the card.
Professor. Madhavan Mukund: Correct.
Professor. G. Venkatesh: So the variable keeps track of the latest of the highest marks we
have seen so far. And by that when we have seen all the cards, it therefore has the value of
the highest marks.
Professor. Madhavan Mukund: Very good.
