Computational Thinking
Tutorial 2.7
Hello CT students. In this tutorial we are just going to talk about the initialization of variables.
(Refer Slide Time: 0:19)
So, every time we declare a variable, we also initialize it, we give it an initial value and this
value needs to be decided on the basis of what that variable is and what we expect that variable
to undergo during the algorithm. So, we have seen variables like Sum or Count, what we were
doing with these variables is after going through each card we change the count by 1 or if it is a
filtering situation then if the card meets a certain condition, we increment the count variable by
1. So, this way we have supposed to get the final number of cards when we look at the count
variable value at the end of it.
(Refer Slide Time: 1:14)
For this to work, Count should be initialized to 0, only then each time we add a card we are
adding 1 to this count and only then at the end of it we will get the total number of cards which
satisfy our particular condition. Same logic applies to Sum, Sum also needs to be initialized to 0
because the Sum that we are supposed to obtain at the end of the algorithm is what we get from
the cards.
So, only when we start from 0 can the Sum variable actually represent the Sum that has been
obtained through the cards. So, these variables would be initialized like this, these are numerical
variables. However, we could have a text variable such as Name. In case of name it is text, it is a
string as they would call it and it is not a number. So, we at the end of the algorithm we expect a
particular name to come out, it could be the name of the highest scorer or the name of the
customer who has purchased maximum something.
In all these cases it is not a number we are looking at. Therefore, in order to make sure it is text
we can initialize to None, which is a text but we know that None is not going to be a customer's
name nor is it going to be the name of a student. So, None is what we would initialize to names
in this situation. Now, let us discuss the situation of finding maximum or a minimum.
(Refer Slide Time: 3:03)
Now, let us imagine this is a particular range in the data, what I mean is let us say these are
chemistry scores then this minimum is the least chemistry score in that data and this maximum is
the maximum highest chemistry score in that data, and all the scores are falling within this range.
So, to give you an example, the actual data, the minimum was 43, and the maximum was 93. So,
if in order to find the maximum if I took a maximum variable and initialized it to say 94 that
would be very wrong because it will never get updated to 93 because it is always greater than
every score on the sheet, so this is wrong.
Likewise, if I initialize the minimum variable to say 35, this would also be wrong because it is
always going to be lesser than everything in the data. Thus, this is also a wrong initialization.
And what happens often is you would not know what is actual data range in the dataset.
(Refer Slide Time: 4:48)
So, suppose you did not know these values, all you know is there is this particular range within
which your data will fall. So, the maximization is best done lesser than the maximum, so you
keep it lesser than the possible range. For example, this range here is going to be 0 and 100. This
is the range suppose, in that case in order to make sure you get the maximum you would
initialize the maximum variable to this point, this would be your chosen initialization because
every value in this dataset is going to be greater than this.
Likewise, you could choose the minimum variable to be here which is 100 because you know
that every value in this data set is going to be lesser than 100, so it will be lesser than this
particular value, so your actual minimum will be formed. But often we would not, we cannot
know what is the least possible and max possible. So, we do not know what is the allowed range
for a certain variable. So, in that case what do you do? Well, if your variable is certainly positive,
so its upper bound could be something.
(Refer Slide Time: 6:09)
But you know it is positive, then the max should be initialized to 0 or some negative number, you
could even do minus 1, so definitely every value in the dataset is going to be greater than this.
And supposing you do not know the range again but you know it is some finite value, then for
minimization you should use some sort of a meaningful logic, ideally you should use the largest
number that the system provides to you but you could use a meaningful logic such as suppose it
is the smallest word in the paragraph dataset.
So, we know that a word cannot be very long, so let us say we take 1000 as our initialization for
the shortest word length, and obviously there is no word which has 1000 letters in it and
therefore when you perform the operation, you will always land at the actual smallest word in the
dataset. So, in this way you have to use your knowledge about the data and its range in order to
initialize your maximum variables and minimum variables properly. Thank you.
