Computational Thinking
Professor Madhavan Mukund
Department of Computer Science
Chennai Mathematical Institute.
Professor G Venkatesh
Department of Electrical Engineering
Indian Institute of Technology Madras
Introduction to Course
Professor G. Venkatesh: Hi, my name is Venkatesh.
Professor Madhavan Mukund: And my name is Madhavan.
Professor G. Venkatesh: Together we are going to introduce this course which is called
Computational Thinking to you which is the first starting step to learning programming
actually and the reason we are calling it Computational Thinking is because before we start
doing any programming work we required to organize our thinking in a very specific way.
So, that this thinking process is systematic and can be communicated to another person or to
computer or whatever it is for which thought process has to be organized in a very very
specific way and all that we will teach you in this course essentially is to help you to organize
your thought process like this.
Professor Madhavan Mukund: So, we must remember that computer is just a very precise
machine which can execute some commands it we tell it to like to add some numbers or to
divide some numbers or to move things around you know rearrange something. So, what we
are really doing when we instruct a computer through a program is to follow a specific
sequence of steps to achieve some goal.
So, this is nothing very special about computers, the same thing happens when we talk to
somebody else about how to do something, for instance if you have ever experienced cooking
show or cooked yourself then you would follow a recipe. So, a recipe for cooking is just a
sequence of steps, it tells you what are all the ingredients that you need, then it will tell you
how to process this, it will tell you chop something fine, it will tell you to put something into
a mixer and grind it into a powder.
And then it will tell you to heat something, put something, that will be a sequence, you add
something first, add something second and of course how much detail these instructions are
depend on what is the expected understanding of your level of expertise. So, if I think you are
an expert cook I would just say chop something fine. But if I think that you are cooking for
the first time then I might tell you that by fine I mean that each piece must be roughly say 2
millimeters by 2 millimeters or it should be 5 millimeters by 5 millimeters.
So, let us take an example. So, suppose I am trying to arrange a function in a hall and I want
to get this hall ready for the function. So, if this, if there is a team of people who do this
regularly, then I just have to tell them a function is going to start a 10 o
clock tomorrow there
will be 50 people, please get the hall ready.
And this will be enough but supposing this is a new team, a people who have never done this
before then I have to be much more elaborate, I will have to say may be that you should make
sure that the hall is cleaned half an hour before, if it is warm weather may be turn on the air
conditioner at 9:30, then if there is supposed to be 50 people how do you arrange the chairs? I
might have to say put the chairs in 10 rows or in 5 rows with 10 chairs per row but then keep
a gap in the middle, so you have 5 gap and 5.
So, depending on how much I expect the person who is going to understand and do the
instruction, execute the instruction, how much they can do without further explanation, I will
give a suitable level of instructions. So, this is what we do when we talk to computer, so we
tell it certain steps and those steps are based on our understanding of what the computer can
do easily like add, subtract you know flip left and right and so on. So, this is the language of
talking to a computer and this is programming. So, in this course we are not really going to
talk about specifically programming in any one language. We are going to discuss rather the
general steps that we use when we do computational things, which will eventually be done on
the computer.
Professor G. Venkatesh: So, as Madhavan explained the whole idea of doing programming is
to convert a given problem into a sequence of procedure which is a basically sequence of
steps and what we will find, well we do this course what we will find interesting is that, there
is a pattern for a problem, when you look at the problem the problem do not all look very
different, actually they all fall into certain patterns. And when I say patterns what it means
basically is that the sequence of steps for one problem can look very similar to the sequence
of steps that we use to solve another problem.
And so basically if we do one pattern if we find for a single problem, we find the pattern
which is what kind of steps that we need. Then one might be able to take this steps and apply
them to a completely different problem coming from a very different problem domain, and
this pattern can be simple for simple problems and can be extremely complex for complex
problem, so there can be a gradation in the complexity or the difficulty of the pattern, in some
sense.
So, just as an example, consider for example you know at home we dry clothes and so on. So,
we get the clothes from the (dryer) washing machine, so it is in a bucket or in a tub and we
have these clothes lines and we need to take out these clothes and hang them on the clothes
line. So if we go about it haphazardly you might take the clothes and hang them and then
after you start hanging them on the clothes line you will find there are gaps between the
clothes that you have hung there. And so you have to find the appropriate cloth that will go in
that gap.
So, to make it easier what you might say is that let me start do it in a more systematic way.
So, let me start in the clothes line from the left to the right. So, I take the biggest piece of
cloth that is there hang it on the left side put a clip then pick the next biggest one put it next to
it put a clip and go like that.
At the end when I have a small piece of space, I will find this most appropriate you know
cloth that can hang in that place and so I feel that clothes line and then move to the next
clothes line, so that can be one way of doing it. So, this is a pattern, this gives me a pattern so
the pattern basically says look for the biggest piece of cloth hang it on the left side of the
clothes line this is a pattern.
Now, if you look at another problem, for example, I have a bunch books that I have in a box
and I have three shelfs and I want to put these books on the shelf. Again I have to do
something, I have to pick something and put it on the shelf again I can do it haphazardly or I
could do it systematically. I can take the biggest book keep it on the left side of the first shelf
and then put the next biggest book next to it and so on and go like that.
And if you look at the pattern for the books, looks very similar to the pattern for the clothes
how you hang the clothes on the line. So, in a sense there is a, even though the problem
statements are very different, one is saying arrange books on a shelf, the other problem is
saying hang the clothes on a line, the way you approach this problem can look very, very
similar and a single pattern you might be able to write which does both. So, that is what we
are going to explore in this course, how do we find this kind of patterns which solves very
large class of problems coming from different domains.
Professor Madhavan Mukund: So, in order to illustrate these patterns and how we move from
simple problems to more complex problems, what we will do is we will work with some sets
of data. So, in our next lecture we will look at this data sets in detail and explain exactly what
we are going to do just to give a quick introduction we have these cards, so we have some
data about school marks, so we have cards representing the marks of students in a class. We
have some shopping data which talks about shopping bills and how customers spend on their
bills.
And then we have some data taken from a paragraph of text, where we talk about words and
how many letters there are in each word and what type of speech and all that. And using these
different there is simple pieces of data we will illustrate these ideas about looking for patterns
and computing quantities in a systematic way.
