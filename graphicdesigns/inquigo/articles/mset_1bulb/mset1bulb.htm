        

<!DOCTYPE HTML>
<html>

	<head>
        <meta charset="ISO-8859-1">
		<meta name="keywords" content="quilez, inigo, iÃ±igo, fractals, demoscene, computer graphics, mathematics, rendering, demo, 3D, realtime, shader, raytracing, shadertoy, glsl">
		<meta name="description" content="Tutorials and articles of Inigo Quilez on computer graphics, fractals, demoscene, shaders and more.">
		<meta name="author" content="Inigo Quilez">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		
		<meta property="og:title" content="Inigo Quilez" />
		<meta property="og:description" content="Articles on computer graphics, math and art">
		<meta property="og:type" content="article" />
		<meta property="og:image" content="https://iquilezles.org/logo.jpg" />
		<meta property="og:image:type" content="image/jpg" />
		<meta property="og:url" content="https://iquilezles.org" />
		
		<meta name="twitter:title" content="Inigo Quilez">
		<meta name="twitter:description" content="Articles on computer graphics, math and art">
		<meta name="twitter:image" content="https://iquilezles.org/logo.jpg">
		<meta name="twitter:card" content="summary_large_image">

		<link rel="canonical" href="https://iquilezles.org"/>
		<title>Inigo Quilez :: fractals, computer graphics, mathematics, shaders, demoscene and more</title>
		<link href="/style.css?v=11" rel="stylesheet">
		
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-M1E3CY9CCC"></script>
        <script>window.dataLayer=window.dataLayer||[];function gtag(){dataLayer.push(arguments);}gtag('js',new Date());gtag('config', 'G-M1E3CY9CCC');</script>

	</head>

	<body><div style="display:flex;flex-direction:column;min-height:100vh;">
		
		<header>
		
		<div>
		  <a class="menu" href="/index.html">Inigo Quilez</a>
		
		  &nbsp; :: &nbsp; <a class="menu" href="/www/index.htm">articles</a>&nbsp; :: &nbsp; <a class="menu" href="/www/articles/mset_1bulb/mset1bulb.htm">the main bulb of the Mandelbrot set - 2006</a>		</div>
		
		<!--<div style="font-size:0.75em;margin:0;padding:0;">-->
		<!--<div style="margin:0;padding:0;background-color:#00ff00;display:flex;justify-self:self-end;">-->
		<div style="padding:0;margin:0;border:0;display:flex;flex-flow:row wrap;justify-content:flex-end;">
			<a href="https://twitter.com/iquilezles"><img class="socialMediaIcon" src="/imgTwitter.png"/></a>
			<a href="https://www.youtube.com/channel/UCdmAhiG8HQDlz8uyekw4ENw"><img class="socialMediaIcon" src="/imgYoutube.png"/></a>
			<a href="https://www.shadertoy.com/user/iq/"><img class="socialMediaIcon" src="/imgShadertoy.png"/></a> 
            <a href="https://www.patreon.com/inigoquilez"><img class="socialMediaIcon" src="/imgPatreon.png"/></a>
			<a href="http://paypal.me/inigoquilez"><img class="socialMediaIcon" src="/imgPayPal.png"/></a> 
			<a href="https://www.tiktok.com/@inigoquilez"><img class="socialMediaIcon" src="/imgTikTok.png"/></a> 
		<!--<a href="https://space.bilibili.com/673661710"><img class="socialMediaIcon" src="/imgBiliBili.png"/></a>-->
		</div>
		
		</header>
		
        <div id="container" style="flex-grow:1;">


<h3>Intro</h3><hr>
The main bulb of the the generalized Mandelbrot <span class="formulaText">f<sub>c,k</sub> = z<sup>k</sup> + c</span> not only is the most visible piece of the Mandelbrot set, but it's also an interesting object of study.<br>

<center><img class="formula" src="gfx00.png"/><br><i>The Mandelbrot sets for k=2 and 3, with the main bulb highlighted</i></center><br>
<br>
<br>
<h3>Some Curves</h3><hr>
As for the classical Mandelbort set k=2, the boundary of the main hyperbolic component can be analytically found. The main hyperbolic component or period one hyperbolic component <img class="formula" valign="middle" src="gfx02.png"/> is the subset of <span class="formulaText">M<sub>k</sub></span> for which the orbit converges to a fixed point. This means, that for a sufficient large enough n<br>
<br>
<span class="formulaText">z<sub>n+1</sub> = f(z<sub>n</sub>) = z<sub>n</sub><sup>k</sup> + c</span><br> 
<br>
or by removing the subscript for clarity<br>
<br>
<span class="formulaText">c = z - z<sup>k</sup></span><br>
<br>
Because we want the orbit to converge in practice (ie, that the fixed point is attractive), we need to pay attention to the derivative of the iterated function (respect to the iterated variable):<br>
<br>
<span class="formulaText">f'(z) = k&sdot; z<sup>k-1</sup></span><br>
<br>
Actually, the fixed point theorem says that we need  it's modulus to be less or equal to one<br>
<br>
<span class="formulaText">|f'(z)| &le; 1</span><br>
<br>
Intuition suggests that the derivative should be less than one in the inside, and equal to one in the boundary. In fact this was demonstrated by Douady and Hubbard, that made a more complete description on the hyperbolic components (showing for example that all are connected and isomorphic to a disk).<br>
<br>
To track the boundary of the main hyperbolic component (also known as main cardioid in the M<sub>2</sub> set), we fix the derivative to have unit length<br>
<br>
<span class="formulaText">f'(z) = e<sup>i&omega;</sup></span><br>
<br>
so that<br>
<br>
<img class="formula" valign="middle" src="gfx10.png"/><br>
<br>
Replacing c=z-z<sup>k</sup> in the above, we get
<img class="formula" valign="middle" src="gfx11.png"/><br>
<br>
The subscript "1" means that this is the curve in the parameter space (c) for the hyperbolic component of period 1.<br>
<br>
From this result we see that the curve c(w) is not closed at least if the derivative travels in a circle between 0 and 2&pi;. We know the curve must bound a connected
set, so we conclude that the derivative must wrap k-1 times while the parameter loops only once into the complete boundary:<br>
<br>
<img class="formula" valign="middle" src="gfx13.png"/><br>
<br>
For example, for k=2 we get the well known result for the classical Mandelbrot set:<br>
<br>
<img class="formula" valign="middle" src="gfx14.png"/><br>
<br>
and for k=2 we get:<br>
<br>
<img class="formula" valign="middle" src="gfx15.png"/><br>
<br>
These are the graphical representation of some of the curves on the family in white, over the corresponding M set:<br>
<br>
<center><img class="formula" src="gfx16.jpg"/><br><img class="formula" src="gfx17.png"/></center><br>
It's important to note that<br>
<br>
<img class="formula" src="gfx18.png"/><br>
and therefore<br>
<br>
<img class="formula" src="gfx19.png"/><br>
<br>
What means that the curves converge into the unit circle.
<br>
<br>
<br>
<br>
<h3>Internal bound</h3><hr>
For speeding up rendering of the classical Mandelbrot set, a common optimization is to directly detect as internal points those belonging to the main cardioid <img class="formula" valign="bottom" src="gfx20.png"/> and the period 2 bulb  <img class="formula" valign="bottom" src="gfx21.png"/> . These can be easily done checking if either<br>
<br>
<img class="formula" src="gfx22.png"/><br>
<br>
or<br>
<br>
<img class="formula" src="gfx23.png"/><br>
<br>
are negative. Some formulas has been also derived for the boundary of the period 3 hyperbolic components, but they involve complex hyperbolic trigonometric functions, are probably the area involved
does not worth the cost of evaluating the function.<br>
<br>
For the case of a polynomial of degree 3 or more, things become even worse, so another solution should be found if possible for speeding up rendering as much as possible.<br>
<br>
From the description of the curves <img class="formula" valign="bottom" src="gfx24.png"/> we can at least try to calculate the bigger circle that can inscribed in it. It's simple to check that
the center of symmetry of the curve is 0 except for k=2. Hence we can use the minimum modulus of <img class="formula" valign="bottom" src="gfx24.png"/> as upper bound for the optimization disc.<br>
<br>
<img class="formula" src="gfx25.png"/><br>
The function <img class="formula" valign="bottom" src="gfx26.png"/> is bounded by -1 and +1, (what can be checked by showing that it's equivalent to cos(t(k-1)) for example), so we can safely bound the complete expression to
<br>
<img class="formula" src="gfx27.png"/><br>
From here we get that<br>
<br>
<img class="formula" src="gfx28.png"/><br>
<br>
We will call this minimum radius of safety. Note how <img class="formula" valign="middle" src="gfx29.png"/><br>
<br>
<br>
We can now draw this safety circles together with the <img class="formula" valign="middle" src="gfx24.png"/> curves. Notice that the bigger k the better the disk does on saving rendering or pixel counting time.<br>
<br>
<center><img class="formula" src="gfx30.jpg"/><br><img class="formula" src="gfx31.png"/></center><br>
<br>
<br>
<br>
<br>
<h3>External bound</h3><hr>
The oldest algorithm ever used for rendering the classic Mandelbrot set is the escape method. Based on the fact that any orbit with a point outside the disk of radius max{|c|, 2} escapes to infinity
with no "back" stepping anymore, points can be detected to belong to the set as long as the orbit never exceeds this distance from the origin.<br>
<br>
The value 2 is not arbitrary, although most people don't know its origin. We will try to find the bailout for k other than max{|c|,2}, of the form <img class="formula" valign="middle" src="gfx32.png"/>.<br>
<br>
Assume that <span class="formulaText">|z<sub>n</sub>|</span> is already bigger than |c|. Escape to infinity will occur then if<br>
<br>
<img class="formula"src="gfx34.png"/><br>
<br>
Removing the subscripts for clarity, and by using the anti-triangle inequality <span class="formulaText">|a+b| &ge; | |a|-|b| |</span> we get<br>
<br>
<img class="formula"src="gfx36.png"/><br>
<br>
Since we assumed |z| > |c|, we get<br>
<br>
<img class="formula"src="gfx37.png"/><br>
<br>
So, in general we have<br>
<br>
<img class="formula"src="gfx38.png"/><br>
<br>
Of course this generalizes to the case k=2. Note how the escape radius gets smaller as k increases. Actually,<br>
<br>
<img class="formula" src="gfx39.png"/><br>
<br>
<br>
Now that we have the escape radius, we can set an upper bound to the complete set. If <span class="formulaText">|c| &ge; Q<sub>k</sub></span> then <span class="formulaText">B<sub>k</sub> = |c|</span> is obviously a bounding
radius: let's say we start iterating for a point of c: <span class="formulaText">0, c, c<sup>k</sup>+c, ...</span>. For the second iteration we have<br>
<br>
<img class="formula" src="gfx43.png"/><br>
<br>
So, the set is completely contained in the disc or radius <span class="formulaText">Q<sub>k</sub></span><br>
<br>
<br>
<center><img class="formula" src="gfx45.jpg"/><br><i>Circles with radius <span class="formulaText">R<sub>k</sub></span> and <span class="formulaText">Q<sub>k</sub></span> for k = 2, 4, 10 and 36</i></center><br>
<br>
<br>
As a last observation, since we have proved that both <span class="formulaText">R<sub>k</sub></span> and <span class="formulaText">Q<sub>k</sub></span> tend to 1 as n grows, which are the inner and outer bounding circles of the set, it
is clear than in the limit the area of the fractal section reduces to zero and all that is left is a simple circle of radious 1.<br>
<br>
This is a realtime rendered implementation of the formulas above (move the mouse over the image to reveal the UI, then press the play button). If you want to see the source code, click in the title bar in the viewer of follow this link: <a class="regular" href="https://www.shadertoy.com/watch/MltXz">https://www.shadertoy.com/watch/MltXz</a>:<br><br>
<div class="iframeCenter" style="max-width:800px;"><div>
<iframe frameborder="0" src="https://www.shadertoy.com/embed/MltXz2?gui=true&t=10&paused=true&muted=false" allowfullscreen></iframe>
</div></div>
<!-- -------------------------------------------------------------------------------------------- -->
<br>
<br>
<br>




	
    

    </div> <!-- container -->
	<footer><a href="http://www.iquilezles.org">inigo quilez</a> - learning computer graphics since 1994</footer>
    </div></body>
</html>