(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    360558,       7747]
NotebookOptionsPosition[    354385,       7570]
NotebookOutlinePosition[    354837,       7587]
CellTagsIndexPosition[    354794,       7584]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Real Analysis Lecture #4", "Title",
 CellChangeTimes->{{3.427730603343124*^9, 3.427730605479782*^9}, {
  3.427730714028932*^9, 3.427730720065254*^9}, {3.427808083869459*^9, 
  3.4278080858220654`*^9}, {3.4280698891351757`*^9, 3.42806989179487*^9}, {
  3.4280774021953278`*^9, 3.428077405109408*^9}, {3.428077577180361*^9, 
  3.428077578658965*^9}, {3.4280815540751963`*^9, 3.428081558486135*^9}, {
  3.461921109658327*^9, 3.461921114136002*^9}, {3.556013958642387*^9, 
  3.556013989414096*^9}, {3.619514916777742*^9, 3.619514921343596*^9}, {
  3.650963620151376*^9, 3.6509636231347103`*^9}, {3.682175047883789*^9, 
  3.682175051153262*^9}}],

Cell[CellGroupData[{

Cell["\<\
The Ping-Pong Ball Conundrum (credit to Edward Burger and Michael Starbird \
from \[OpenCurlyDoubleQuote]The Heart of Mathematics\[CloseCurlyDoubleQuote])\
\
\>", "Section",
 CellChangeTimes->{{3.682175075249743*^9, 3.682175127422516*^9}, {
  3.68220478462041*^9, 3.682204793643022*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "t_", "]"}], ":=", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{"-", "t"}], ")"}]}]}], ";", 
  RowBox[{
   RowBox[{"g1", "[", "t_", "]"}], ":=", 
   RowBox[{"-", "t"}]}], ";", 
  RowBox[{
   RowBox[{"r1", "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f1", "[", "t", "]"}], ",", 
     RowBox[{"g1", "[", "t", "]"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"r2", "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"f1", "[", 
       RowBox[{"-", "t"}], "]"}]}], ",", 
     RowBox[{"g1", "[", 
      RowBox[{"-", "t"}], "]"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", 
   RowBox[{"10", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "/", "10"}], "-", 
      RowBox[{"Floor", "[", 
       RowBox[{"x", "/", "10"}], "]"}]}], ")"}]}]}], ";", 
  RowBox[{
   RowBox[{"j", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"h", "[", 
      RowBox[{"-", "x"}], "]"}]}], "+", "10"}]}], ";", 
  RowBox[{
   RowBox[{"BallMaker", "[", 
    RowBox[{"NumStart_", ",", "r_", ",", "j_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Black", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", ".5"}], "i"}], "+", 
               RowBox[{"T", "/", "6"}]}], "]"}], ",", ".3"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"i", ",", 
              RowBox[{"r", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", ".5"}], "*", 
                 RowBox[{"j", "[", "i", "]"}]}], "+", 
                RowBox[{"T", "/", "6"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "NumStart", ",", 
              RowBox[{"NumStart", "+", "9"}]}], "}"}]}], "]"}], "]"}]}], 
        "]"}], "]"}]}], "}"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"SingleBallMaker", "[", 
    RowBox[{"NumStart_", ",", "r_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Black", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"T", "/", "6"}], "]"}], ",", ".3"}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{"NumStart", ",", 
           RowBox[{"r", "[", 
            RowBox[{"T", "/", "6"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";", 
  RowBox[{"InfinityBarrel", "=", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsvQd0XNl95gl1t0LLVrekTlIHdTfVkc2cAQaABAkSIEGAGczIOeecc845
FgoFFAqVUUAVMhg7KFvjHW8Yj+eMd2bO7njP7Hp9Zkaz/vb73yJtWbZkjS2p
uzWocy5e4dWrl+r+/t/3v/e+994MTzkf/YSHh0fGV/jnfFjO0fT0sLwLX+c/
l5Iz4mKSoyL9kzOjYqLSD4Q/yZnXvuDh8V85fYoFwEbZKBtlo2yUjbJRNspG
2SgbZaNslI2yUTbKRtkoG2WjbJSNslE2ykbZKBvl1yyLi4seDQ0NHu3t7Rtl
o2yU37PymPPQ0FCPjdfGa+P1+/na4HzjtfH6/X9tcL7x2nj9/r82OP+9eX3h
Uy4br8/wa4Pz3+nr02bx81Y2Xr+h1wbn/6zXp83BRtmIC7/Wa4Pzv3l92nV0
o2zEht/a638wzjfq0Wf/9Wlz/3v52/0ec/6p/u5PPvmkx9NPP83yVY+vcPql
L3/Z40tf+vITX/zil7701JNPfemJJ574Mhf78gebNz/td+LEHwT4n/rm6QD/
b5086bfphK/v5mNHfXb7eB/Zf+TwoUOHvA4c9/LcG5Sflx3S1toY2d7aFNfR
0pDR1lRX2FxfVVZfU17XWFsppb6loaalvrqkr6I4e6ymsrinvrq8v6WhqrOl
qbqroa6iu66mbKChtnxApi1NtR2tLQ0dba0Nbc2N1R38vJ3LtbQ21zXws8a2
lsYaVVobq9pbm6taWhorOtqbi7u72rK7utpTu7o6Uru7OhJ7ujujykqLQg56
7T955LDXUe6zt/eRg97HjnnvO+57dKvfieNvnTrp95q//6kXfY8d+8N33nn7
i3I+n3rqKY8vPvVFjy9+8Ys8N1/y+MpXvuLxZZ6nLzzxxKf9O//esf97xPlv
9ff7xje+6fHyy694PP/881/5xje+8fzTT3/lZe8jh98ID7215db1K97Xrl4K
vHA+6BZL+Em/Y9m5ORmlI0M99V2tdb2NVYXG7rbquerijE9KcxL+VW151p/W
VeX/WV1Fzp9ph9v/jdOh/7frK9Z/d3fJ/H+sL5n+r9Ul218uzBv/y5x9+mdL
LstfLy2YsTBnYjFi3qGH3azDzNQwpxOY1g3CZpqA3TIJu3USFqMWpulhTkcx
N2uAa94Mm2UK05NDamoxTcJmncKsXY/5eSNmZ6c4NcExZ4bVqofJpIPNbsC8
08pi53wL5vh+YdGBeZcNdocZzoVZWO1Gvrdw3iyXs3EdVqyuurC2vojlFSe/
Z/rr5ZW5ny0vz/3V4pL9P62uOv9ibd31HxYWbH9uNOp+2N3den9wsHtteKjH
OTTY5ejv65wZHu7t1elG61KSYzOCz/pHXA25eOnGjRD/sNs3D0WEh76/ZcsH
3/7aM1/7xvPPP/fVb730rSe+/e2XVXz4LdeL3wv2P4ec/8Z/A9He9957z4Pa
+oebNm16Zfu2re9nZ6Yez05PvJkQH5UXEXa9tam2QKcdaXeOj3b9eKCn7t/3
d1b+vxMjzf9ZN1T73+wznVheMGDBZcSiawZLi+TEMQ2HjdzNDGNG101GJzHS
VY6R7jIsOGfIgUExu+A0wukwwGoex+R4p5tfix6zNgPmyNQCOV1ZcmBtxYVZ
qwHmGS35nSHTBn7PxHWYuO1ZOMnpIll08H8HGZyft5BlfrbshMViwOjIABkm
5+ZpmFjssyaYZkag07QrdoVbi20GFusMubZjkduzz9pgtprU//MuB2bnZmHj
vDnXHJe38Hs2OJwOzrPAYjfDPmflMjY132wzwT5vxyyLyWJUnxlN49wHDedZ
4Vqaw/LagooZKn7MGrkc94/xam5uhnHFgqVlO1xOE9ZWbXDOG382oev7T1NT
g/9aPzX8k8nJwXXjzLg5Iz1+JPR2SGtifGRmbk765eSkWJ933t604523v/vm
1q1bnn333Xd/XQ5/r9n/HHH+331u6Y09nnrySfV+//79Xz7u6/v67t279oeE
XPHt6elOqG+oq6+oLBusrCrXsy7ecbrm/uW8c/bfW6zT/9kw0QlNbzl0492Y
1vejrz0Ho/1VZJh11jJKzezCrHkARl0z7KY+1k0DdXCKbE6RdSNcLnJHHXby
/7lZHZYWjNAMNkE32op56vLq6hzWlmdxZ22OHNvIM9mkti453Vyvk4FF0VQy
fXfViXt3l+GkbkoMWHRZcefOAu7fW+E8K5a5vJQllrt3F7FCPZVlDXodVlfm
+d5CXszuGDBrVlzbObXapjHrMJKnebgWyDF5dcyTKWq0/G+xis7Pkl3ux8Kc
4nd2zk7uybbDCr1egxn6BzvZFtaFU7NlmvHCrJZzLsyr700bGcdmrWpbMxKn
XHZ6B3oKxiIbPcHcvF3FkiXut3gH8Razj2KP2TrN/ZxijKCHmZmAgd+fnBxA
f18dhkc7MT4xgDFND0ZGOzA62o7BgWZ0d9b89WB/019oRrv+557upg/jE8JX
U5JjbPn5me3V1eXpYaE3rm7f9sEp36M+72/dsuWrX+BLcoYnnnjyn1rvPvPM
fw44/7XO3TNfe8bj688++8SOHTueCQ8L3RYcHBTIRDN5TDM6TKZnqTs/XV5f
+ou5xdn/b4n+0sm6tkBNcS7OYple08H/pT6LnjnIyIx+EH0d5Zgg50bqXmd9
DnrbSskudWdmCIaJFlip43O2EWrpFOstdcgxQ01uh9k4QubIiot1eHYaLsaA
OcaAWesEbNTt0aEuDPeLdo/yuzOKZeFbuHdyHaLhi2Rzzj7D/42cTz0n64vk
WHi1mzX8noExh1ooPlr8PLcj219YsJIbM/XczNhjUppuMnK7Nj2sZNBKHyBe
fFbxZVNT8eezSpvtSo+t9BJT+hEyPK3+t82a1XIm8yQmJnphNAvLJuh0Q2RP
9Fk03ArtxBCmyaKVzM/OMz7MM/asLmJ+kT6ezC/QWzgXec4ZQzQj7Uq7TYxb
Nh6n+H/5LSQGmek/jCY9GTeoIvHIzG1LTmEy6zFJz9PbWUm+ezE6NoDB4W5y
3ouBwQ50dNajvbMBrW3VaGyuQFNLFVrba9HUXIm6+lJUVReitrYQTfUlaG6q
+H8qy/P/LD0l5ke1VcVj54NP5zPnCj1zOmDr17/+7HMvvvjik9Je8GvWx880
759Rzv/R8/TCCy984bub3nw+KjJ8X2paUnhzc33L6OjAnRnj1L9ev7f+X5fW
1zC/TH4XnJhlsTrnYKNuTNO7zpLpqelxd52ZHFF1do71zGieYv0ep664qH1m
aMa6WY/HqX0zZGWc3EzTP5IV0zCmJ5oxMVILq3EAdpsWRqPbk5qme+mpx8nk
rMp7hT0XmV2k/5yjXrvItRSrSZjXMX82wsiYMmefVJpuY85tNZIdxo0l6rZr
Try7BSvLc8qbmwxa9f1F8r60YFefz1IbzTNj0Gu7qfc62O3TZJeMMz8Xzi08
TqNxkqzolV+3KY/Oz8i7XTFsVczPOd1FYoGBOm3k8harUfl8A/kVHR0b6cAM
GZwxTZM3DT83KC2W/81cp/jxeXIsfn6Wxbno5tu15FJe38ZtmoRf8u3gcRkY
J/T6IRVjXYwBMrVxnyWu2LivinMuK/FkbKRVLT+lH6WO9zGuDCrOh4Z7FefD
Iz3o6W0l601oa69DS2st2jsaUN9QgeqaEtTUlqKishBl5fkoK8tBdk4ycnKS
kJeXgvT0aGRlxiE/PxX5eak/Yz7wHxvrK5ajo0L7b9++nht09szR17/znVdf
eeWVX+T1c8H8Z4zzX3k+Xn/99S9dOB+8s7a2PKW/v91oMWv/d5t18r9I28/U
tBZaHesddck2Pw/H4hL5XoDdOQ8rvecMddrCuiN1z+GaVxpjZn0SrZLcUbyk
6Ax9u6qbwrqL04cf36fuO5ROuRZMrHMa+uFeaIfrMdJbwdy7jTm2eHa9Kouy
jHVS5c+KN7I7x1xdcnLJ2efJ3sqiDatLVpinB8irAbr+CthmBpmTT/LzSVgN
g3BYxeu7dV18/AJzWmlHE31fVt+3487KnNJyu5U8mrT0IP3MCQzkepJlnJxz
e8IN827RaGFeGBeGxF9P85wJw6Kf4mOEMavoP7maNujI+pQqjJ3U1ykVF2Vq
5rImyww/Ez12a7v8P8uYo7w345uBscrOfTaI3+a+ibZLDi+efnJaBz3Xb2Me
Id5c4o3yUjaj2r78L9uY4fZk/QbGWubjKs5MTg6R7X6M0quLbx8Y7CLnoud9
atrd04KenlZy3qA47+xqUjpeXpGP2royVdy856OgMAt5+Rks6cjNS0NObiqy
slOQkZmMxJRYxCVEIjUjHrn8PCcvHeWVhf+xvLxwPSMztfbcubOnt3zwwctP
PvnUL/r9J35JPf5UWf8Mcf73zoGcv4Nent+8dOGsX01VYYtW0/NT48zYz8S3
Tendcd1o1CkfqfI86oH1bxh3weyww2gnT8wNZ6hLM9Km5GI95GcOTu2KeQfr
o03lpao9ymZUbU8Lyy4uN8flHZiivx4e6YVmvI+eV9qqtWS0HXpNuZpKG5rk
m9L2tbhIVphTmoULarbk4ovM1aXNTTy55Nyr1Ppl5vB2+gLxB/P2Ceq5jmxO
qDY5J33D3Kye36Gfd9mwRp4XmQOIblvoG5YW5L1OtbcL9/Nzknsbpa1KxRYT
fYK0vUuburShi5bbbUbFvLTJCevCuXZ8QOXY2vFB6OlvZnguZSqeWXieYZma
nmCMc/Ms35F5wr6J6zHb3G12co7Movtq3jQZ1ihPb+F5kPho4T7IObYzhs5J
OwB9lZUewqne26j/7jYAKQ6eH6t4DtFys0FtS7zXBPNw7Xg/p4MqPxga7sLA
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
UxmHOkG/NPWo701yaifXZ/4bP05eZSysxDRpU1OabFTt6KLPEhcMjCfiiZRm
i4arPnG3R5JYKsu5lpxqfKwas6D6PawqPiyvurjfC2pfJ6fGVP4/Qc6Faek3
1yq++xTvouNdPc3Ku/f2t6ClrUb1q0kfm/j3+sZSVNcJ0/nku1CV6roiVHMq
nJeUSZu7tLMnI78gXXGelpmI5NQ4XD4fgMjwy/TucT+Xoycr756QHOvO0cl7
RNRt+vYQsn6eefp55CRfhXm88pMXX3zxWdbtrzwqnxrrv2POf+UxvfH6G1+q
KMr4XxsrMzHSXY6psWaMkXPNSAvGR9vR012H7u4G/ra97vZ20STWR6ln80v0
5mTYwBxcbyVnLpe7/5xT8eyi5a6VZU5Zd1T/ubtvzUD9nmJeLlou/l3em+wW
1d8mbXDSNmdVumdxe1zyt74+R/3txvSE9KmNqdxc2tel73hReXaz4ttu0Sq9
Fi13azQ5M42ptjbJv916LazOqnY3lZsrP855q9Q1lwmLszqsumawsmTlcjbF
95LTiHtrZHnFjgd3F/DhgxXcW3eqtjgZO3OH+fo9Gf+6TMbXl3D33ho5dylt
FY8uubdLjRFYYD68SD7N5HlS+RWHagef/dv35FPazDTaYaW34qXnXO52CzlH
i2tL9FHzZNP6N15cYqJ8zyJ6L+tiPJEYoMbiSI4g81zu/rjFlSUsrCwyhjiV
xss2ZSy9+I/llTnVViA+XvpRZUyTeHbRcBkLN6z6Xgbo4TvJdzMGmc/1D7bS
s9eR+0b0D3Rw2kRdlzFytfTvlWhoKlfc19SJrpeoHL2wOIM6noysnCROU1nS
kUndln7zpIRbCCO3iSnRStNTyHkyvXsiY0B8sptx8e5RsWEIpWe/deOc4jw5
7grs2uK/OrBv104PN+N/yPK0h1vbf+esf0Y4Vxciennu82qoyv7r9vo86Ibq
yHkLNMMt0JJxraYTA/wte3qboZF+X+ZpEusdLqu771z4JcvO1VXm5ML1Eox2
h2Jdxs1Mm+jJzdL3ZmOdtCtNN0ubnIzfds6q/jWZGqWdXfSbmj5NH2tSY0Vn
HnlcM+uf+GAZYzqh2uBkjJyMn3FwuqjGmNuZG5vILP9/xKwwem9tjvo8qzh2
2iZwh/M+vOtkmccd+vdVl5FTC3l14MGdeTzkZ/f5/uE9J7/LeXx/f82Oe6tW
NX2wPos75Px7H63g44dLXM6Fh/epgcvynSV3vi5j15dmsbq2QG1cwSqZl+vO
7I9yEuFcxgBLm7ocp8o5yJ/or7Aq+itFOJe+9cmpcej049AzXxL9V+OL5Bqa
ZZca37ogucGcu49M3kv/hLRpLK7Mq3Z68RDSzibbXFRlAXcfrGPtzqoaBy9x
VcbVi97Lfqyucx30KVNTGmg0A2rM2yC93JimX7WvDwy1q/EyfQOtzMnr0cf6
0fuoDAy2o7uvlXw3orW9Gg3NpeS7jNMK1CvWyxTr5ZXkXLScnOcVpDI3T1F6
Lv5d/o+PD0XYzWDqdqRqm5OcPC45Wum5ePfkjCREx0ciMvoWbt28hJvX3JzH
RYXApilCQtSVJA832/Kc8p9n/XHO/o+x/ht5fQY4l2NUA4qiI28nlRXEoael
UHn2qfE2aMdaMaXrxfhYl2qDkz6VCeZokpPLdRBz9KqLrGOutVU419fhunMH
S3fvwb64BPOcE86VlUfj4li/Zezr3By1fEG1u5tsVtWHLjml1WGjthvU2C5p
d5vQjSmfqJ/WwEDPKn1N0s62siL5sg7LSybVly3j31bIm5M6u0i+V5Ys9Nc2
NQ7GRS0WRu+TW2FybdmGdfK9tiQ8z2KN33XZxrHo0GFlXk+PPoPVJTOXteHu
qk1xf5/flziw4uL6HeLhJxkjjPyuUcWQD+/OYVmuf2PusMRtipcXnyD98dJP
r9rjZFy86tu3K1+i2t2omzJmVdrape/cqPrP3WPjpA1dxTfpe7O7+9Cm9FrF
u/j3x7m05DdyLZqD+jy36FCxwWxzt7erNnrx5o/a8FTbnFyTYp9RfeTCvvSh
CfMyJklihfiNhaV5NVZevi9jh50uGYM4iTF6dC21W0c9104MKE8nbXGi5SNj
3YrrftGBvkaWZjLexin572h0e3T69gayLX3qj/17TW0R9TwHpWV51G7m5bnJ
5D1FsZ6Vk8hpEvmOwOkzvoiMuUHPnkCvTv1OiEBKRgKyCzLJu/SxxSMmPoL5
/BVcCwmkpgcjIvQiuuviMNCWp//CE089x+r9Ass3WL7m8d+n67+R1++Q81/G
uBQ1iCgx5rajpiQJQ53lmNG2kfN2TGg6oJ/sw7imW/WjSF4uOaS09brrj9uz
L9+7g+X798j5PSzdf8DpOhZY5unVXavLajq/TD1jPFi7f5f1ivrD+eI5F5cX
HvWTW9X1FFK33fkg6xXL9PSY8o12+xSmp3oxpWmgZ2/DnE0Lu1Wrxq45H12r
YqEvF29u0g/CMNFFBg1YFU1fNCstdzmkMGeXcfLTg9DTp1ilb25mWLWtSWyQ
8XHz1nHMmTVquSUyO08PMGsaxaxxCHYZI8vPZL136d8XHHp+rqOfn1Gefpkx
YInfW16Qtj+9aruTPr4Z/YgaczczM6bGnOinGDPHmd8Ot/P89iqGTBZ3ji5F
2t+kX0urG6WHGlJFabtpWrWdK83m+VJa/ehaUxd5fzzGRTy4ncVonXnUtyZ9
c0bl/ZVfmLe42zvl2lTyra6hYWxYXHaPO5Z2uAWyLm3/MiZOxsdotP0YJt+i
53397arIeFcZH9fP+tE30ELGqekDbdR1cs48r4n5ekNLpeJcXctSU6Ta4UrL
spGSGo3ikizm52SW7KZnJdKzJyEtPR6p/D+NHj06NoJ8RyEpLZY8hyGK2h0V
c5uePYJ+PRTRceFkPxK36NuvCufXg5TXz0y8gvGu7H/DHP0DVu9XWF70+OWs
/6o+t3/26zPAuTrGt9566w+rS7N/WleeBu1ALYyTnZgcayPnneS8n3WsV/n1
YXo33dSY6q9VWr7mIsOL6pqVRXK9+uGHuPPJR+r98t27KidfvruOFZbF1RUu
v6zGuUtfrlXqlVzDIXnrgvQBy7jOCTUmTC/XSpABg2FM9TXJNWtGwxAMU32Y
meyCXtdJ/ab2GUbJ/iA5mlA8jWsZk8aoMQNN0A43k/UOMt9HRodg5He1I22Y
oT+ZZgwY7K6FQddDZke5bBP02k7yrVFj3Wcmu9X3TIwr+vFOaIYaMdxThdGe
agx2VbBUYpzzNAMN6v1QdxWkL7KjoQCS97TW5aKlJgc1JSmoKklGZXEKGqtz
0NpQjLrKTNSUZ6CmMhtlnJ+XFYvC7HjkZ8ahinW/va0Kba3V1MJaxYr0bwwO
ddAnd2CMmmowTrhjgYxdYc6sZcyYYiy02vVkmfHErFXn0SbXzzHHdsm4Aml/
XHQX6+y0upeFfU78AmOQQ9rZLdR4x99clyrtHMsrEoMd1P151a8mublWN6C8
urTHSfv64LC0sfdT13vQw33tUXl6O0sb57Wiq7cebczNm9pq6dUrlLZXVOeh
jH5d9DuJ/BaWMD/Pz0CG9J096jeXkpwWr0qaGvMap0oMPXp4FDmPC0M0dT0y
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
bMPx/Zvw7T94Ets3vQjvQ3ucrPMhLOdYjnq48/S3WOR+FNL2/ove/R9qj/sn
vX7HnP+8Z5d2hyc2v/fOtaCDm1ERyXyRWjpeQS/MXFpL1o2NN8j5TUxRj6dr
r5DVYEyUkfHiMxgrC8YkffN42VlMVgZx/mlqOtkvFA04iW7+ngPUNi3rk5Y5
+US527OPsfTlBqEj4wwKwnxRHX2cOfkp1mM/VYbzz7Le+KjSlnhQaXdvmo/K
w3uZ8zfF7lN1eb4zAlPczwnm5tP07fryIOpvEHNs7g99u551U9qmtaxv0ian
/peclznlcIYwfRqutgvU7UC+5+dlzImp8xPkdZA5bitjS13sIcYj1lHGmxHm
B+7cW1g5otq5rfWBaCHXNdHeqE8KgLYlHhWpl5EXdpzfPcIifVfC/HbUx3oh
7co+es6DKI70RSe9SR9z6t6Mw6pNayBbYpinaqsQbR+kD9fxnLbE7lI+oJ+f
a4sZA3leehkLG9LOoiWN5y07gHp5gr7oBFoyGT95LidKTtMzMDYwHx8suYKB
oovozj1LvhhXE4+hPHQPhoqCMcCY25fjp9oTelIPqrxhlF5oiLo9QDZ7Mny4
PeYSPJ/d5HSQcWMoV9j2QnfmQaXlvWl7uX/8nZKYp0e8z3hD7Wcd6OX5aWb+
UhHpiS7uSzvjS1PiAWr5YeaAB1ATu5ee7ojbt5P3JsbvguvbkBWyBXnkN/f6
zkcxYA9Kw3cxd9yKwvC9qhSE70PRo/fZXDb75j7yvhMZZD8m+AOEnvkA0ee2
I/bCLtw8vR3H972O3e++jHff3iSch7HI+DjJ06WfTdreZezM4/70r3p8vjn/
Rc8ux/PMN5974cXKjNsPOlPpn8mYpuwif6ezGCtnzlt9BRMVwvhVMn2RrAbR
e1OT6ZHHK5iPFwVAwxxvgmwJ35OSo9PLD+edUn1DujLWfeqJpvgsPd5lxovL
5JX1Mpv1L19YZ16e6s9cL4j1iD6dnLclH0dzvLstq52sSb9ZW6K0GR+mHlHj
0w5Tk4/C2R1Dz3kOBuYPM4w/evoGE/2GXuIO67kwLx5eT38rnE+Xim77KR8r
7XFT1KMBxqNp6tZcYxC1z5v+wgdl0T7MDfci5zZ1OYL/R3mjJsGP9Yy5drSn
2n7l7e1q33rJasZl1rfbPsgNPYGw4COsY56IP3eAubl4US/EnNmGq95v0nvu
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
c5tMDzXDg5vgn1u1xoWPsYfO/JhJ5oe5Lt6g/7c02aEcPTdmxmvb8HM7fjbr
sT7XKSNd8DltJTLQXibD3TUy1FUtE4MtiJmN0m2ulP7OWuikBvzcJOaGEsSo
Cuk0V8sQ/ENvV5P095hkaBAxc6wPf/Mg4mYb4mq/9OP77u7m3JsunTfa3FIj
zc210tvbIX2DPdLd2ylN0L7mNvZTbFUObe80K58Ojw6p159BnKA+4v0JYHJq
ZkrjwTziK2fZLawYc3GYu+d8DOZVXn54po8Z9TKH8pOffiwfA+//+t/8S/lX
/+ZfyL/4ix/LEeIx4wF9OufGsT/gms6Fg25DnCee2WuePafnoO/GJgcRD3qk
C55qGOeWHp1474Ge7wBPtJzn20vhw1Wvl+Zp7t3o+5qpuTjqd85KZQ/Iu8Dy
A3D344x72heSXM9De8A+uK1zU++ms/drqsQlRElEZLBERoVISIifRIT6SmiQ
h8SEe0hBVupf/sEffJe17tlWP8vFsafUZ2vdv7A9Lb8CnH96j5rWwX3lK7/x
26nJMQPV0OymhkLpNJVKd1uldHfWS29fK7DegOutE1zdq3Ha0Opzxhw+4HcL
OGYObQf43uUBnXfA9ZXTfcU4Pd/G9qrO++L6OXO0r+ccc41M56GCr7imxmti
1TKvsxhmZ4dkFLzHPtILqtOBgdEu7UXZ21kF3m6RGeB1Cn57qL9JuoCnppoC
PA6/gTjQ214pHS2lMtJHfNVrX/UxxK9BYHCwq0pGEM9Gemv1drCjQkZxfwi3
/e2sb6mUke4q6TUXy3h/LfAOnHaWy3AX697w/TTkSW8rvqumXOluKZSG8idS
X5EpprpcMTfm4TsskmG8X2dLCXBdgMcKpbUhX6qKMqQ494FUlz6VxppcaUJc
LS7MkLxnD6S0OFNKirKkugr8VZApxcW5OHKkiOtKuU+lvDxfSnCtFxVmSUVl
sVTWlEt1XYVUVhkzDro766Qd30FLC+eVVWo+qw7et7XNJA2IBT19HdBa/dpb
fQo+bBDxeXR6GJprEjp8DTyN719nIM/o7FX2+OTMvJ19Y94818dfvDzWNbJd
5s05C53zXoHtnT2c3y3Obl8C9jnTaRmeYkoOjziLGb5igTN7pvHYpPrA4dFe
8Hm39hQcxufp6DZJFT5vbWMVPHqR5trZ65U8TqyTy9m7nTjWvs3nPdsfPbkL
r/5A56IT3+T5B4/vShqek3w7EVyeAG9OPo+QqOhQxXlkVLCEh/kD514SG+kr
GdDuN29cmbEy6uJe5+Je18swF/eHVj+/p+WfEs5f18F982tf+9ofVJZk/6Qa
12orrslB8NFgL3R7P/twd0hPr0nnbDAWU6Pz/DMPx97M7L++fbCj89A4Z4Ez
Fyyaq91T/c3ZPZzhwBnAjPfMv3FOOnN5rMle0tkCozprk/0l9ff1cD5jk67l
dbbVSD/u94MHuzpqpLe7Tro7KqWvC1jsrZaetjLpaC2SipLHwE6G1FY8kaba
Z1JeeE/K8+9KbkaiPHsUK9n3oyT7bog8uxcmOffD5cntQMlMC5as9FB5nAKf
luwljxI95WG8u9yPdZVH8a6SiccyE10k77an5Ka6SU6yi9wPt5Z7Idfladg1
eRJ9Q7LjbSUzzkbuhV3B/12WFL+LEuV2QaI9LkmU+2UJd/lAIpzflWD7tySY
/ZFt35Qolzcl3uOHEu/+jiR5vCXpgRfkfuCbkhl5SbIiL0tOzHV5jPd7EHJJ
HoVclrsBF+Vh6FV5FHZdbvldlkTvS3In6IbcDrgu90NtJCPKRh6G3ZCsGAfJ
jrGXjBg7eRrvLHmpXvIUf1M+/s7cO0FSiL+9LCNayp7ESnlWipTn3JGq/HQp
z7svFYWIU5UFUgMuLUUcqa7Ml/r6UmmD5uCstM6uFmi6BsXn5MyIdIODmVcb
HuvVuWlT0FhjE924b9L5ah1djTgQW6CnBnSWognxBueut0U6u5t0Lnp7J/s6
m+DNG8RkNriccYu5dWp2HoWIdUUlBt6zOOscGGY+/XZakubZ0sDpd6HTectZ
LPToj3E8AsennXN5yu0kSWA/yHj48vhIiYF2Dw8PlJBAb4mOCJCM+zES6O/+
ysrY0/I6F+eDw9rKqJf5vFzc53n0X/rfl4zzz9a78nN/83vf+95bBc/u/891
4KMO8M8gsDQEjPdAt/f2NoPTzeBVztlgPWqf+i2dz8v1MQvzajNa8zDL+XrT
o8oVcwuT6tdY6zihx6D6/P4BzsKGnoW2HoNv7h9olb6+Ju3x34wY095aJq1N
xWLG0d5cIo1VOZLzKFGe3A2X9KRAuRvvKzGB9hLicU0CnC9KqMv7Euv9nsR4
XgC+3gZ23pbbPhfkQcC7khn6rmSHvS35kW9LWfRb0njrstSnfCA1Se9KeewP
pTT2TckOfEOq4/9MGlPfFHP6+9Lz6Jp0P7go/Y8uydDTKzKadVlmC21ktuCm
TOVay2DGZRnJtpaFYkeZzb8u87gdybyO512VyWc3ZSDjirTfv4bfcwHv+a40
3bogprT3pPXO+9KEn5tT38Z7vCtzhddkJv+aLBTekPUqe7FUXJPNWifZb/KQ
/WYfPOYsG9WuOJxkvshWNus8ZL3aDa9zlInsm7JS6iCWSjynykk2q51lvdJJ
tqrdZbPSFe9pK8uljng/X1kpd5NlHPPFrjg8cd9bVqr8ZbbIQ8aeOWu/vOFn
HmK6YysNdxykIslOiuOtJSP4otz1xneIeJMXZydFSY5SiDiXn+Ipz5K85dkt
X8m5EyhZd8IQI0PkSVqU3L8dJemp4fIoPU6ePEyWzIzbkp2ZLjnP7klW1gPJ
0t7rj4x8edZ9XRtjn/bqOmMNrbKmRKpwlFcVg79zgPE8PfJxn3MbXs9m4fwl
5tuJdc5FpU9/rdvT79+Bnr8tDx6ma06Os1OJdfr0ZHB7cmq8JCRGS0xMmERD
x8dFB8ud1DBJTY7877761d8ssfr8PS3cj/66Lu4LqZf5FeL8da79ay4uTgFN
tQV/2d5UIn0dVfC+zTI20i4DwCBj8+Aw/OcYc3DdOvNnFH6ZP7NmhrOzuvta
ZHCkE7HbrLOuW8HBnYjVTU3QjXXQl6VZOkuIcz8yH8TLw9RgeQC8Por3kQzw
59MYZ3CZneRE20kueCgH/FQQaytl8faSHXpZskI/kNywdyUn9D3JDn5bHvv/
GY7vS5r7d6UAGO576iTdj+1x2Ej/UxuZKXSWrYYAWavykI0aT9mo9ZbNGnfZ
a/LBte8u27VuwI+LrAAbU7kfyEGLp5y0+cghbvebPWW33lV2G9xkr9EdP3vJ
TqOLbNe74bUOst/iLfumADnAsQXsbdZ5yUadJ/7PQ/ZaAmW7EdiqdAemHIBP
O1kqtZM1YM9S6SHTeQ4ymesolioXfe+9Jlf8Ti85bgvQ33fY4iNnHcFybOZ7
u+vv2G30xvt7yWFbqOw2+eFxX9mq9ZQDxIIDkz9uveUUrzlo9pUj/LzXxP/3
kO0GX9lt4ev95KA1RI67YuTQHI7XhOL3GbdbTcGyXh8qO6Zo2WuNkI0Gf9lu
DpatlhCx1AfKdLGT7Jr88Hf54TZQDjtC5KA9FK9hjy0fWcH3OlnAnn/22luy
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
A8d1tSV4hpUKN+0/O19ko7VwrzqN2rtj7Udj7EWlxt9m/3VghbVkL3qjNed2
pHzuB41P3AerDuZ+8zNixwQ93xSoOOd+lwM8zhr3rVo/xflGLfvKBGhufd8U
rrVx1Oj7zSGaj9+s8dZe0dpXr9YXt6yN81ctxrW1WXzP7Ol+Rh5vi1QdxzzB
AevtwOmsl2G9K+tx2bNLeR58TS+ua2u6fyXE4Hfut+d+G/afNgVo3/vVKnga
7gmAh18jPoFz1sCwfwzXzefKHNSfj+VeA5fb4bCGL7up62qzRcT5e9Kn/Sau
S1+2NY6rMs2aOMTZ5XpPaFV7mYXWp/5nXdx0ubNM4D1nqj2lF/rO/OSqNNx/
X+rS3pfy5Leh3S9K9R07cbO7fGr1s7no6TgirIy56Fdx/NDqr89i+jt59C8Z
56/X1L6ZHu9fx5rUMfZtqA7W3jC7XSmy247zCMyyr8Sp+u5U/JykveG4fnY2
kKI1EqyX+Gj8Cbj8oe5VZZ3sLjQ590Dsmdn/FdoA19ZEsbfsdFK3p4LL78oO
cK65AFOC5ubJ6XM10dKV7YfYyl6AfjIHLb5QTi531T1owznU4TiHj6/LyFPO
PrHW64/rPgvwHIvlXpqDs9Swp7Gr7jlfrXST5TLWUTlLF3DOPi4jOGYK7ZWn
V6D7NmocwIWe6rk/7gsFH/sAs366P411V+s17ud1M26yV++oubZD8r7JUx8/
Bu75WubqDoBz1sUdNbtpnxddW4NuZE2d8Xncz/vZILawhp44h/7nXnbWuj/v
CNI1uK3za56YeNEXpXqee9XYs3mPe39NRj9IrsVTDxxyDZo92qGfj9i/gT2s
oVktFdwbE6xefK7YX3U4+2/sNAKPtewxFYjfEa49dxg7dlgHDy1PTl+rDtT1
ktW6MPCmr/akO+uNV4w/72NuJk7rXbkv7RCafrPBT/ewUGuwZyVz6ez5eML8
AvesmIKV25lzIM53mC9sZd9OxGN4dK6fW3R/iis0hJfifA5ei/taWNs+xz0r
edBh5a7w5/Y4j5dlvsxW5oquynDm24jh16TryTXpxPXRzVwce8OW2+v+1Ini
6+AxO5miFuB+9AruR3eCT3SRvlw7aEhrqU17B9odnH6Luv19KUm6LM433uHa
2qd7y0RbfYF9nr9EnL9eU/uW1Ve++p3W4lsHK4jh48xV1YXqftJ9eHLm2XUt
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
H+2QAmCfeG+AfWuM2YnfRF9+h7xi7sgoLymF3s8O3CZh574jCTd+Am7fouvW
oi7/TIJv+/23v/zrr5Zu+NfrWZgr7u16lj8pV9yXhPMvzP34ta9/453GrEf/
pSX+iNRF70efvGysYeEcVOZ6LbuluSDN4OCpqocyWXZH93meGX62GcfGigNk
MP82+u8NqY27ib6EvppzA/3ssjQkXpTWtCtSj36T+fiAVMVdkFfJV6UtC30z
45q0oU+3Zd9C370vfSXou1k3pTLhslQnod/m3JPm7Ds4dkfq0u9IbeoNaci4
Lq15d6Wt8L50Fz/Adbdxr2vSnndL+sofSm9FoLQXARclAdIGW9KYdUkaMy9g
e0WvaS95JB3FD6Wj6KG0FT2QnorH0lf5SBpzr0sV+mhz3iVpLwTmyu5KP35b
X+VDGagJlL6qpzJcHyIj9S+w/0z6a4JlpDFKJtpiZLwlWsbbk8U8XCeWiU6x
T3eLY7pH3LP94pkdEPtUt8yMtYt5rE1s2LfhPcdMv8zZh9GGxDLZIjMjlWIZ
rxXHVJNYJxtkdrxRZidbxWbuFss0Ww/2+2Rmul/sdpNYZgZlarxNpsaaxDTa
IKP9VdLfViDdTbnS11Elc54ZcTqmxemcEYdzVmYtuGZ2QianJ2QG+1PmURmf
GJThkX4xmUZkdLhdWqoTcI9MGR0okZH+UhkbKJbxgUIZ7siWnqZUGe7Kk7Ge
QrQCGe0pkcn+EpkeKJWpwTL89gqZGqqUif5yfa+/PV+GO/NlpCNXxjtzZKg5
VfqbkqXrVby0VYRLbf5zqSkIk6qcIClNfyCFSQGSE31DsqKvS8qLy5L64pKk
haOFnZes8LNop6Uw+pwURJ6WjOd+kvL0qMQ/PCgJDw9J3N3dkvrYR2Lu+kj4
9d2S8shHMgJ9JeXhAcl85ieJOCf46h6JuOYloed+LHG3tkvc7Z0SexOYf+gl
2bADrH1eFuolFdD5JSGcJ7NZkgI2ScTlH0vKHa5Zw+t7W6AJ3pX4J2f+x998
4xu1G4zcMm/Xs3w2V9zb9SyfzxX3O330Lxnnn80J962vfe3r7xREXfrvJWG+
UgFb2p55RZrSL0p96nmpTTov1YnYpl6SJmCxEXhrzLot2S/wf0dfk5biMBns
rJCJwUYZasuRwe4KGRnplsH+ZultSpNB9Jn+1gzpbkhG/0uVwfZs6W5MkbZX
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
mq/0pfoo9rvAw13EdNxW9Ccf6U9hbWQv6U3mljjfK/VRezSfex387poX26Sf
9VehcwaB9d4M6gRvfIc90kL+h/1ogPavg30oDdkKfL8DnLNu6ruSF7gFWN8u
mY+9JO62l9y44PfxOs6Zz/331WH698D527Fzzq3/h/s3z8U1J1+Qoud7gXVf
aYiH7U09L13pF9CYo/ccfK0LMlV6A8/tIp77eXHXPxZH7R1gnbVagPlq1sYE
TwDXZub7B8dTxzOn9yz9+WLW/7okPXG7YSuuas0mW9Vd5fnpYrZrWv94lv5/
wTmtETABXmAtIOZdN+UwRuyrtVWawrykH31hFM98NGW/jOAZDsGG9wLn5H4L
dL69+Bz6ODF/Brg6DV0M3xv9YiaHGh08Dvy4wLt28OYs+NYJrewuPSZTmeCC
qI3Kz8S2o8hHMespJ26h5UvhzxfCNuQQ57DzgT8CznfBTuzDvdAKfHHdUdgG
+NK4pxM2wYLPMGUw1r5Ha78Qxyb47tQXs7A7FtZRzPfVuk0dEe/qPuMDnsoT
Wntd87gXn1J/nXnibfDXZwoNXW0uwf/EmITWIb4s1lLWQjypdSJYs3ECumGW
dqSIdRf8tX6p1kcvoD9+SmuoMQ8+Y3CspzCQfFBjIhpnY3094Jq1roazWOeM
3H4a+D8ObAHLwHoHfO1GxtOD9ktNiJeM4bvwPNbb7YddGM9jLQbmYT+H8w7B
5zV87WZcVw9Nztgc+bwdvj9x3J7EGkjELz47g7g+AAwflL4UA8+sw8LGmiyD
zKEPfcYaa8RxL+x+JzQetXpL9FattTiQBv5H3+hhrBbnUaO/IsbD4YNH7ZSq
kE34XGgpPIeBnGPSnw19AZyz5kNLvNEaYnaDz3eqbs8NfE/S7v1ca60VPNki
eU+3S1aglyTc2SYXjnn98zrOczYY69a+KCfk2zpMv3Ns7UvEOeP7jPP/feDN
ky3NSWekCDa5PBx6Kcmwt13QWcR4PzA+lH0Rvvk12NHTysOsx8C6G6yr5NT6
5/dUp1uh6Zmn387YF/ibtYAYX5sBzhmH70vaL9N47ai5j/NZX+mmTMJHnYQP
N8Pa28A3Y+zE+DR43QHbQY5WjoeeZD21zmj644fB5T4ygefMsSfG27ujvRTj
1iLWFjoPf5Y1hKEvWF+bOjnrALj8oMzAF3azfhm418Z4NviVNYjd4Ntp4Lw7
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
7hxGXD8g/r7CGqr6ofQGjVYNjrPDs/RXLU90cveKBOkw2ZeepMdnueP1SR9C
1tU7rnH3TZg9uBkqLRVn0PrprX3ZF2d8IHDugxwduMfr23PDT5oYYf3iO/aY
/AsxvevSDpssZF0sSnx9oSxMe4gXSgKV+84jvnKWZCbfAx+z7+2HOLtd+fMa
+PY88Mp6Ob3budvsVVOEvWiKdDxkGsLs89ZY6VfnS/3kAcNeOPts1MY8b4zE
ueGjXjrPj7HM7fb42tvg4j7CNb++UumvfS2LpT7ylhi8ucP6rr6tHh+xRt4+
B+wxD2n++C3ru8UeOvDHGVdp6SPkX8OPF5HPk8dz/zJ3OLFftgpuTizNAjdD
WUE4J4K02+FV6x7VDMn55UNL3T1r+PhZ1t4XcB7OFodqPp+9yHF6MUm7wx1Q
4MaIbdTCjNGvnfstgfe5qoP4vnjtbGFtnjyc3pL9WdSkBEhnTl839vo4G0sP
PO5/5CwetXzc6ci6OX0sGZfHgdlh3BvNn+I1SUcOIy1rtPpvPLNWGnZJGzCD
XIy5uWbUSiIU+9knG8T/OpQbuLlDzUs4l/4V583Dm4jdacjzbrriTAhSTvaI
dXPgu/O6h3Vc51zqduDcy2o/xdtLXvJ8pN6VMb0P597dG652L506GuD8pq/V
frbTKs9tdzQyJ99ETo68/OQ7lvn+L4D1bcA54/lW++xY/P/xkzd+9vD73/9+
o4ujcaf29ZSLo32lHyR94n6r9vVbxnPinHMyPz934kDbo8xY4bzjuq8NgEc/
zuZu2VgbA3fnDukp5OVT5c7uO82b4mx9fudd8fb1ln3g6QcV01k/ZQ1OHhN1
rLfvkt8Heyu8XnPVCep7qAZXzn1dScoH7t8Kse6saGu/EohrxZwLHO42eFMG
8iLOCXI3NXLzrmvIs676yjOKPTR6RXVdett6cJ3YV+vFuU0eqx2k4On0WhPO
i/2cGF7sr97aVK6b9DKr5UHA9k7FWnLpxRLq2YIUywcyPe3LtmjtT3xaz5mV
EM2nkqsvgKtzFpW5NzHMGtxGLTBfSc8IT31uKt/T+m+8Y9NF3IWI2FsXpc8z
X5gt8ER+Dg55y936r79jU3k+Np7tbaPZPuLyTWd/ajkHf2LD+NwSzgzHD57z
rTHKyxerWGMPxcfx4gXyi6UmgP41iO3UlXCv4iT3tZUEq3e2UhmumiK1fern
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
OXpukPbwsifUm2p5OHcmeoGze5lmYJi7WEZzOFfhre8xnvekOCxejxjeglhC
7t6l+TXcaxm+wHkQ8G0zVef3mwbEGOrgWtIiTENikKkBZy88ZzO5Z31NxltH
TPqbXibrXRdw7jJXfxFgnkuI+a/34jm1cI982x9p4biH5aV9f4AW7o/E+e/z
g+Tjnj4WE1UxVPhz0y3eDp4CbA1qbtQtzRH7GQul0WZFNfVoeevO4b1brQKP
p59X3VH5eq1VHd17b1x7c7/4XRcPAcvg7rgPbii2+0v7NkAvD2CbXL4fXKvz
iq9ycs6osRbXl4SzGF/rBpdvvXjYNF30NsV4fVNe8jDXXvQwxW97mfqPvMXf
K9591nTgfWEfd7E43Exn00+VXjLUutIXlnVsaw59CnGWc6vjyJlZd5/NsbTv
nG1hLYF9d3q3ECP0YpNXRF0guDu9Vqlhd1jezODUmmVR7R1xq+CINGDr0r7i
Hs/1lE6GuGI9jrGfv499t5lc5O04g8bTD5nxjCOI4eCP4LDpL/7U9FMLW+Kn
GVfW68jHl0qoNyXGDgMr5Ou+ZgIxdiLL04r1yM0Zy1lrH83y1bw6+2Ws+21X
Bsg3ip4Vy4ix7OORu0g7T5yr1mdXb441v0XOndNLNc9uZpETsKbP+XjOC0zl
4HP214Dz0Qye1cAG/RZxTnOOhTr2ZXnVu8FRLB8vavnpD8PnRh+LKfy+8RwX
MIdYSf+/q3zfOGcapFya985yRYR4I2vs9GSezOPl1L5TxuVB5AxDGQ7tPCYn
70mm7sMhTetNnPeNl7zE2afxeL3JXtK7dyf7CO/M45suHUI88zGNn3qaTmpl
Mzl7yngebNrwO8o/OWhqkE/UIt43p0bjc4epuuAwBefsJvusn8l+xxOXj8l5
D7H8LbtJfCPU2Lw9vtrD+e/Swj3p5/zIt/3/1Tv/gXD+uFbGf+9xn/fy8j7f
mHrqP/alh5v2pCDxGfXA8BrQJ2IIsYYe2wvA0GJplHTGnFdZRxxnfk6/5036
BVZESdMwmhOsXfLsz90EPls/Pag4XvvhAdXductyIDVAOO+6aldObvlIeJo2
5OMteI3bweObP3lWOTvnWK4jRy9797DJ+oWHOX/qoMlDbsR4XvHeQVP4xk9N
K84H9tboEzeH2EzvZPbQ6LM4nHzIjCTvF+4n0g+YMeB8NOWQanULBT7Av6ew
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
5lTwdZLWq0+37ZOnA5znlYrzNkX3qS12U9eDw1v2KtaZV5tmL1Eb5ySmaX5t
Ga+1CH9/0nQAOM+Fnw6MN0KzQ2eyDq7/DnjmbpL4avPEUZkjPbdy5O75bCk9
c0COHz5InDMG93pfONbCNcd9u//jTo3M99bC/UA4/74ZycdOHDvW62gr/388
DcdltP2QjLbgc7Ywj1gky33FstbHmeTsKVWkvPHMTd8pz6iRGT6m8zLoq7O+
/YswY/AntHcUbTbxPd20F1jeDz0ej7Vfa2VW4C8twPYudhl8zZrTFdhR5tkW
8RusmrLVr1+App+jz1W1T5w3EqTj4xSp+TBTWnF03tgvtlLDZ++5+LaMQ+9T
JzxnvxZbiubVXrCHA3zfZfi91KMPLUnA+y7F+Sc8h4HPR8T5QLKxXxS6/V+w
JnykWPPirHPj/HLmosnT9Gs/1ZrWZO0zyVp15opfOFmXw/hZlsauWTf/VHU2
uK4vQTbNu4GXNMU/7c998PFy217dK38Ptmete6/4b/5E7RHjBc/sCZoHfEmd
a2WPesbXod1hIx6w3g+fhTqAGHrqAM7xOcm3D/BY7fmM92pwt9Ebkn0wP+M+
XE+q5sk5h451tcyp0/68YBzBzvq6A2pjOLeFdWy0NYyl0RYxHqf7fZ05amPY
w+eR3dDgzH/9LFqg/5v9nl8ohxv+uHK6N1vz4c9xmTXuun8MvvE9e7b624+2
Y3D6eM2Z52kt7H18VvZ01Z7NfanK6euwkaztYHye8xnYx3nJxHwZ/L6WfcB0
gtbW8Ln3sDiHaYU9JnpSdU/qlPaXSMBl+JD2AvB4Jvx06Pc+1sYckClzMfzy
TPjlmcB4KjR7pvjrs4HzZF22ilxpL8uVivO5cv18idSWfSSZaal/to3znb5w
0TijRoZ94Vgj83pfuP1x39MX7gfG+eu1MuxTdXL37t3XG29f+B+bb58Wc+Vx
8dQWS7g+R2ZNxTJvypMVC3BuLZIHnInG/tmefK1V/pyzP0beh59+RPvpfx48
qHMzWOPAmhry+iP8FrMt+2HzE8Hf8Mlb923H4RifS9Y1i++cOp2YnoEdYOxt
HthmD4kZ6IrJxmTo873Sd22/NH6YJHffT5P6jxKB72RpO7dH2s5Tx++VKPvh
cLZGP3s5pGrNKHG8bkrEa7+nfvADy27gfLf66Mx9sRadeTbinPEwztX808lj
ut/063CW5rxZF6N914F7YoZxN/Ig+fol+Jl15cQLc0rEFvehPLaCU9jbgtrT
nq574pkHY27snnm/2p7Flve0/m0TOmOte5f4b7wFHbNb96fRJhDXrKehXqd/
/Jj9a9nPErxKvD9nrYzuI0vH9wxfFT4K/xfrTj+HfXoFX4RcTtvEfXPc3/K5
9pQu0B6uzAew7zz33zDPTU2ge03wWuzPwZo0+tdPHPg+gZct7pM37YMvbsTM
7/Umar0r60q5Z+XnwyWa82eO7wXzdKx98bDWBd8P4+/QEHwc/fN71jRweiq4
I1fPqUdOxttzte6HtdW0B5/gvdyHZuC+tE1rusbsqNvX+1LVNjDOxt7t69Ys
3Xe+0JOtOTP67XyNe9BA92yGDmCPmTn4CfTNx1uNNQOOZy6N+F7mfAdbkSzZ
Dsls7wEZbsuCVs8watnr8qUf2G65liX1V/Ll7uUCuXGhSErPHZQbF09Ia82t
f8jJzv7jbZyzFu71Ghn2hdupkfluX7gfEue/ra/MiTfeePNye83t/77yyimp
LjspXVVnpK/qOGzYEeA9T6ZaCzSvvmTOxW9xUOOi7P/BWvavNLd2FHg/rTE5
jcuFD+sMW513Bzs927wPeIY/2kHM7td959zLRj3OXNp0ixFrI9aZR54D3vk4
b9mb4r21X6LVCRK4Gy+9V/bL3ZP7peJkqtR+AF4/tV8qcb32dLy0nN0nI41p
+trUk1vwUzmL9Cl4kb75dONPgO8EedD7rvLjg97d2gOW8xs2O99Srmb+mL7g
n7JnTCxfc1Ls3Upe/xej7I2epjWvGnOj78p8HGNMA9ToCTivU3Uv6itPour4
F9v6+7EtQTZM8ca+WPjq90y7ZaNrn6wC6/fgQ2xCX2yC093X3pSl9n3K4+wP
Sb5mHpt6/ZGd+0WStNaVNexP8brPub/VacTl7uHzbvUT7ymao2cs8Dm0OrUH
e68zJsjLXwaydR670Zcu1ei7MVig9fGaSyOPwidmrpz1Ldyb89CarLEL9tTd
6DH8a9ZObVnTNPa5Dv39qb9A/mj0uNa4/yx6SPtWMhfA98/XYNyd+9DI0bSl
G9Tj1CXwo6nln+Ixj9kbh3tWmGtnvb63QG0X56Nt9jF+m677WMjP9Om5/2yL
Ne867zhT43CTOM/oyzMndx/PJcZXgfvl7X3nxPd0Vy7wngIe53ylEvXL1+yH
ZNFarPPTQg05YrmdIp0306X1Rro0lGVLZekBuXv9iNwpPSY3r53EOi1ll07L
zSsfyJ0r5/93cOV3+8KxRoZ94Vgjw75wJ7bxlhr3G2rhfkCc/0q/CeD8nKmp
7j9vrrgmTRWXpb3mY+ltvSb27mqxNN8UV2upOOo/FGf1IYk1swc09HwPzgff
MXnJvo/g7i+HTxl9wCJGv23252QdPOvjuH9kDnaW8fVR+OzrrE/i/iLq+NZk
+PD7dU/oTFOS7mch9ica90HHvisDN/dpPUywYp+Y4ZtXnkqUG8eS5M5JrBP7
5c6xvVJxYp/cPbFXhuqStCaTON/o3g0Oy9IcGjGwgN9/qX2XxuDJs1vmvcrn
jLM/6Hlb8+HELOs4/2z6pO5J/cVQvuaiP/fu17wa5y1wH8rnxLPP0O+KERdt
CjCF1+B+LfZc/cSdoLUijG8x70Wssp6ddXLM7bH3Betx74PbN027gJ+94rjy
hu6te9i3W/vMPOE+GMbd+uOxgG87982map0rMf4c//+pxuXovwPnwOMWjux9
zvfxGK/DeXMvNXafprGDr8MFWoPzqfalyVab8spDTZCB9wl9wv0i3IdmpU+Q
qXzM2iHGA9gTbkN/uzR8T9Q+2eorE+fM4/8R4xiRAvULjFrdYry/dM2jGzgv
Up+PfZxWzZyNlK570Bhre8o8PRZz6S/4XK2RzYc9YV+qQt13xnjbsjlFe7Rv
EufgdeZ9eXkBvsMC3tdUe4LOP34VPCQPXcas5DUr+7zm6bzE8Tb46O15EmaN
VXM29Hm+eGuzZKD+gJjuZEnzzWypLs2U6ht5Un2zRBorT0pNxQdSVXFBqiqv
yN3yy3Ln5iUpu3ZWblz5SMo+PiV3Sy//L3G/rIVjjQxr4QJxv9ovKj/u2zPP
fyWn9gPh/PUZTK/3m3j/7Mljjzprb0lL9Q3pbqmUrubrYumqEoe1XTzObvF7
LeK3N4q7/YL42s+LteqIRNuOy2L/+7JkPSRPA2dkxVwAbX8IfpORB2HfmC18
zwsdwHBrvMx14jtuiNdc+jKx35Ejo43JWuvGHs2cwcDFPPpEfYL4brwtvlu7
JUb/qHy/tF6Il2rw+J3306XydAowHy9VXGdS5UrJfhkoZ1wsQ7YsibLWuUee
waflnnPOJl3pStAc1iNroq6HvfvlhS0e2pY9pd7Vfm7s40AbxNlBvxjKk5+z
f6LGz9O1h7Pu/4iw53Ha9j7ObMXMKzc1f4L2evzSn6S1Zy9d+4z+6z5jz/gL
7m/hfKaBFOXQLeCbeX3G3TexljvfFXfZG7LUsQs436Nxu0d4f9pTwh6vvv4L
F+vaof0dCbov7hn+L3H0GHaAPvp95tUdGcbcBtbouVON+DcxHsjV3P4XrOHT
Pu/bWOf+OvAoa/KIK3Ive0awFob16NTZ6ncwd91r7Fe5x97I+D4fOQtUf2+A
538aOSw/g138KevuAkZdO/ecs9bmFfeasr+d+us5urfQwHmGMduYNW/MDw4U
GtrdV6D7zp97mGtP1X0um30p2idiFb405y3cg1/NGN49nGvs1zzXna7zfpkb
J+6J/+XeXJnFbcNN2eLjfPLKTOm4ni4tZZnAc750VJVIa9VBaa46JPXlxcB1
gdRBxzbWfSitTVekof4a1k2pq7sttbW3pbKyTG7fviq3rn8sZVc/klulZ+XW
pQ/k7o3SfxP3yxqZnZnn/5h+UT+O++Fx/noO/ZtZax9/dGbd3HQXOL8OjN+V
ntZKMXdUSX9Pg7isbeKydcqAA0dzhThMN8TeeU0sTR+Jq/NjGTR9LDHrVQl0
fiSBttMS7TgtQ61HJdp8CBqoELYzV8JVKRKpTRHPzd0yj++e89Nm2nMlWpso
I/XAdVO8zmaYbU0HtyfLGG4L7uw3v5si9uvEc6JUnE6Vm8dT5NaJFKkGvu+c
SJC7p9Pko4I9Yr+VoLU83Ge+1LZHZ6Dd60mE3dgrwZpd+D/7gacE5Spjdkuq
zmJ62r9HXrkStNcp53B9FcrWmYXs7fgF8M39X8SI7vkazNB60U+h07/yMy/F
2QvJmi9nbJ77VMmbL537v8H5l/4cYwYb+0gzDuBK0R4390zU87uAMeb93hP/
rbdkDRzPvbKM0ZPHybeP8f6YR39s2w8cJyl/v1A+z9R41zP15VPUh35oz1Df
4Wv2fIMtoi/O3P3n2rMu1agtYP7cl6PxAo2nO7I0F0+dzLmxz5w5uq+G/vkT
xvSdudovgrFv6mjOP2EPbPLrGvDK+kb2efpae0YVG/vS/AU6R137S6j+J84P
aAzvoe4Hz1X9/dx3aLsPFOfb5WlvdvZp51wW5tmM/hAHZLIlXef1TLRmy1hL
loy25Eughj2c8sXFGYa3obXvFoJ/cB3nnKvpsPQ3HJGe2oPSWXNE2uvel9b6
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
bq7rMuS8Lq6OC9Jbj8fj+vBgjUR8NTLkr5GRYB3Oh3oZDuJ86S0TN+x9xF8l
g86b4IM7wHClhL21OC9a8Jg2XCZ/1EssYpaxmFViQ30yPGSVoWifBAMmGfR3
iw/nmNdrFru9U1weHJ0m6cdlC7Rnj6VNenpbpbunSdq76qSjqwG4No4dXcB7
ew2u10p7R6PiWtc2zqtrDL+8Dvq9tq5cqqpuSjlwfuvmZbl+7bxcPX9Krp07
KTcufvj3b7311pdxv75f1O80I/X3hPPXa2V0BtPevXtv2Lpa/k1D+RVprb0p
3fDPTfgezPg+iHUb+LyfnG4hxlsU6zZzHVY1LjfIgK1J3P0NuI/+fDOw3obV
Kn5XJ3i+G/e3wAa0wg63yaCLvN8hIW8H8G6WqN+ktiDq7wDXV8pIuAu3t8qw
v16GPFWyMNIhwf5S8ZlOS7DvIxkPVMlkuElGB+tk2FsjCxN9MjfulIXJAZmf
sEmg/4q4u8+Ix/SRuHGuutuPSajvYwlazkug95z4zThHcV4OOcokYiuVkPUa
zs87ErHfkiDOvflgtayNNMvGeJsshMtlzl8qy8GbshKpkIXB2zLhvCbjtosy
5bgkk/YLMm37SGYc52Qaa6L/tMw5z8mo+YQMm45LBDw20oPLPcdkuBvH7pMy
DF4LtB0TZ8NRWfKXyZynTJaC5RLsvSxNZSViugOf5i5sVD3sGnxKX8uH4MHT
4oOdG2x7X7wtR2Ww/YREzWfF3/6BDHZ9KNG+yzLUdxHrgozay2TUcUNi1ksy
7sDntHwowe73JWo9JyN87wOlMua9ub1uyUSgXCbx/ycGb8g0PuN0tEZmRhpl
fKhWJodqZDpWJ1PD9TI72oTvukXmx5tkJtYgc2PNuNwqy9Pd+N67ZW7CJLM4
RoDXIW+1zE1bZXHWKTPjfTI72S8zUzYZH7HI1FifTI304rF2mRjBbcDwUKhH
RodtMjbqkIkxl4wMOySCcyIUwPkRtgDb/RIK9Ukkahef3yIeTw+42yRut0mc
zm7pt3Uoxu243NcPLgcf9fa1icncLN3wO3tw7hLvLW01Bqe31ymem5prge9K
9cNram/hMvU7NHvVdY291dbdwX23DZzDP79545LcUM1+Ejg/IU2Vt/79W2/9
5PNtnLNGZqdfFGcnsl/U7zQ78QfC+U4s7tfVyryPh5y9ffXjP+sAxlurb4Aj
q6SnvVosO/45uNwN39xla1ccRwZ7FNP23jrguxWrEfa5wcC8nfjuEq+jXTEe
8Ztx7ALG2yVEfA904n7oe1ujYt4LXz+A+0PeTlxvgi03yWikG1zQLDF/szze
CMnCWLdEHdck5i6VIdcNCdmuysgAOMB2E+dUnUzG+nHu4PyAfYiBP8LOWxJ1
3QJ+S4HtD2XEc1tGvXdwLJMRnNuToXqZjDbLKPhlItQos7FOnMc9sjhhwe2d
WO0yO9IlK1M4h4cbZDpULYsjLbJE7OM4F2uR2aFGWRhulOXRBhxr8LgqmYve
lflolSwOVcvCEK5HKmVltFZWR+tkbRxrok7WJ+pxrJXNqQZZn2zC8/k6dbIy
3ihrU62yGGuUmXCVzANnc9Fa/F/cD6zN438sjDTITLROFvGclclWmY81yfxo
G95XO27Da403473h+Xhvc3yfI016eQprFo+bGcHjpnqAS5PMT/bIwrRZlmYt
sr5ol+VZK45OWZzpk4UZm8xN9cvqggdYdcvi/ICsLg3K2jIWjvPTDmDXIYtz
uH/ei6MPOB6QuVm/TE+48FyXLMz5ZWkhKFPjbpmZHpCJcRfwapWxEYeMDPXL
KNZw1AaOdkoMuB4GhsdGPDIa8wDbNmC8T0JBC/AOHo86JIrHRYdcEgzZxAus
e7294hnoVZzbHV3idJvF4e4Rm6NbedxsacWxRTpwDlus7cB8kzRTo2M1NFOn
35XWtjopv1u6jfPbels18M5FHqde3znSNy9nvL3sgpReOCU3L56W6ttl//aN
N9/krKV/1uzEHxjnv7ZWButMeemVX/S2VEprDXCO78ICv4b4Zrx9wN6+jV9g
0Q39HbBIEJop4OkGb7cD53gM+HvA3qZxukF3t7E84HNvt4TB2UHgOOzrhI4j
psnr4HdXu64gHheFDosOkv9bgXOzjILXRwPt4BOrTA+1ySjwOxZsgtavlQh8
toinGr5bNa434PE9MgwtN+SDNsR13hYbbMDjG4H3O7ALpTI+WAu+ajBwDY6Z
AafMgVumwTHzEw7wkVPmJrlcMjNmB3fZcDvOeeB/NtYlq7MOWZv3yPIMsDDl
kCWsdZz/64teWcXtG4sDev/qnBu3u2UT1zeXvLjdi6NPNlf8cm8lIBsLvM2P
6wHZWgvL/dUwrg/K5nJA1/qiT19H18KAbBBfC7gNz1nHWpn3AZse8KENWHMC
c8DZrA+3D+J2PzDmkXmspTngccYns8DfLHA2PemRqQm3zOG2pfkAjsDkpFem
oIMW5gKyvBjW4wxumwQ2yauz0z48LoDHDeI2L25zy/io23ievtYgnu+TiYkB
vX1qwoPHuRTb87NBPM4PjsZr4bnE8EjMKaMjTsX3ULhPj8T0UNQJDseKuSUS
dsigzyLhIDh8sBeXe4B1m4TDdgngNuJ8MGAVLx7jAq8bHN4uDlePWG3Q7NYO
g8fB3909zdDsjVhNqtNr628qpze1QrMD403NNcrXxLH65fTHgfWauh1+r9S4
XFX1Lam8WyZ36Z8D54y1V1w7J2eOH/nLOCOnttNH5vXZiTs1MjuzE7/bR+b3
ifPXZzC9PpvlgzvXry3a2u9KZ8NN6eushQ9M/d0ibvjbXkeLrqC3R0L+XvHh
+w34ehXLfheXSS/7nJ14HPHcC7yalMdHI7DhQ3bwtFmGBs3wu2AnfN2q3Yeg
C4aD+L1hN4aDvbAB1PI90Iz9eE6vjEfA7eFOGYfPFvNDpwfA18F2xXIE/lvI
A18OtoB8PjSI273w/wJt8PG68Rq9Mgb8jwQ7YS9aZSzQJOOwExNh8NoY+b9f
JoYs+tiJYQsWMD9q19tnx2zAf59M4P9PxczgQitug/bEfXPjDpkZtelxadqF
5ZaFqe0juQz2YhZ2wrAdDpkeM56zAEzyeXyvs2PgwmnYhAU/7Ab9je3n0f/A
7bQzM+N4DWBwcYY49uN2n675KS8wTiyDP4HfWeBtZtwj0+PEMe6bArcCd7NT
XsUdsTkJzE7p0QkMumR6Cvgbw33jA8DlgOJ6btqvt89Mwz7MhYBf4p2v6QOG
+Rif4nscr6P34bVn9TnA+oQfHM3Phu8FdmcG/5uvM4PXm5sx8D49GcRtAdgE
4B3nw/gIbcmAcnUMPD02MgAb4JGhYbdiOhy06n1DYadEIgaXDw72ix9c7vaY
lMsdOOfszi7l6x2dTg4nd/Myj2bl9CZDqzdX4EhOr5W2zgbFNnm8rr4c9xk4
J3/X1t0Exm9vx+DKpRo4r6oskwrg/PbNi3Lt8gdSd/sK96n919/B+es1MtVx
356p9nofmV/pF8WVkZHxQ+J8J4e+UyvD3N6HhXnZjv7W28B5qfS2l2uczdPf
BF0N39rRptwd8JCXgXN8v17w+iCuc/mcXYpz3h9wMwYHDgdvR8DRo4ydAMNh
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
uPLR6RNDs+b3/7+RJnzHWPNdGTqr4b6dM9OytM8uMf8SOH/qAa97j8hPR87K
Z+Fjutgj8rmvCI/jfLYCeYTvnr265ttgY3sLtNfPYnem3HcU4/XY96dA52YO
lr8n0RrOS3xPxhqStAf0eH2yeG/tFsuVXdJ54R2xXH1Pui7ukg8K3pODae/J
ydxdUnZ0r9w+FS9XjyXI7TNp0n49U2o+zhLz3cNibzgtjpbz4jOVSri/QsKO
agnBJgxBHwy5qyXqLJehgRpohAaZCHdiMafXJeM4jofaZTTQorG51RkHtLhT
8bcBHiYXbyyBZ1ejcn8tiuu4vBzGMSj3V3yyteqXx/fC8mQzKo82hnB5GI+L
yP11PH41sl3H7sVjqfU9eC08Z31IX28Dr7WO17oHfG9tjsu99RG5vzGG46jc
2+AaAzZHsEZlfdVYq8tDyt3ke2J8ZQk+vXI4uH2b36nbGZ/THBxj6/BjmB9h
zpM1SqNan9AD/dSlK+xuljBsp98KrHZdl4FurM5r4u++Jr6Oj8VWd1pM5SUy
0HRcgq3HJdBs6OUBcF6kMV/G2w9ItA7nEHTzMH7HeVMRcMu+QpxNnCEbNvZ2
ypPVvgNYecDlAfiDB+WRu1jWcL6tWgvwmELcl4PrOPccRbJizcfrcG5KAfCd
LOH6ePyvVAnVJ+E+nFuci+09JVsDZ3BeFcpSL2ekZuo8NcU5+4hbixTjc9YS
WbYfAb8flHkL+Bw+6rQpHzYGGr85R0It+eKty9T+ce6qFOA9Q2x3mV87IUeK
8/51nBGDexH37X1qv2vP9l/B+dmzZ+P+9m//9p+C8+9i/bfl1jgP/cquXbs6
oq3H/v0sdPtkK3tjZ8sGfgfOkyevs+fbE89BaHbwtKtIPhk8Ab3+EbT6IVw+
bPTp1d5+B3QW+rOBQ/LYXSTLJs62ZK9u2NveXJ1LfZ+/NX4H9nyebknSuSuh
ivdkGLZ6gnPPGxKB/b3a85V7vscaE3VfdsWZVDl/MEHuvJ8sHR8nAv/7tLdz
zftvyQS0wlT9T2Si9i0ZqX5Dxmp3yXTDu9p3dro5QYar9on/znvivLFHnNd3
SaQmXvdwO2/vFzfn493JlEBDvvjqcvEb58hAXbYEmgol0nZYQm3HJNB+Svxt
H4qv9SyOXB9JqPucDFsuSlh7aJVKpPeyhHouSQjXI72XZNh6RYas1yRkxn3W
WxLovS2+7jLxdl2TSN9t8feUibP9irg7r0jAXCaDsEuDPdeMfCZuGzRdkyBu
D+L5/m5c774qAV24zBhI2wXxtn4gnubTMtB8RjwNJ8UNP9XfdAKcdAj4OyyD
9UfweQ7hc4ErwZu6GgtlpDlfxrhaoGPb8nR/OudZcv7dAnhwHhw4SxsN/3Ue
XDrbni4zHeBVHGP4fZ4OHNReUez/+wy/+VNPgfb05uzNF7D3nwSO6PyUh66D
ss75ppYs6LpMeRk8DlvPGV04r4Dh+84D8gC8wB5SnA2y0pctmzjHNux5smbD
+cc+7px1yFk+piyZ6c4GT2fLZCf33e/D43He+U7Ko8AFvX8NHLJsge/ZlQ4d
kCwT0ADT3bjdfUKme/H5YFfWnEdluZ9cXqA2gLo92pIhkZYsibYegE+eDrvF
lSYenAu2ygKxVJ34j8UHCv9V3Ldj7a/vU2uIM3q2n4r7R+TUfk84/7556NxX
c2nXrj3NU7ayfzfflYffPVVnVd+zHpD7wPkD2kt7FnB+CL73AXkEjqcf/nnk
tHwaZM8gzjxO0h7bz7wluO+g4pz9oDnbcsXE58J+c748focN3LbQlar4nwXO
pxqTZahqtwxV79b5qkO18cD4LuX30boEYD9N/BXxUnMmRUqP7JeGc2nSej5R
zJf3ia10j9iv75V7nAPXu197r21Z4nW2+CPOJrKnaD/1+5YkmW95T3vQzre8
o3MJObtow8SejCl4L1nyVfSEzutmD1T2ZOKcBPZcedjPHo7JOt9sy8K57amy
akrVXlQb7AOlfdM4byJFFtvBMV2c8YzXNnNOUpasm9iTNVcWO9NkqiVbPLcS
JVybLRHYmf6rP4H92aW9MqdbwHmt7G/Ny8naA5e9r3WeBfyo+bYk7Q3LuaOc
e8QeaquwncumJHnAHm6c523eq0f2XTfmouXq+9zqz5Snjizt3czPxX6uTzlz
xZalz/2E8xP9RXgOvi+di1KoveBo1zkj815/DrCI14JO5jydz4JH5WfDR3T+
FrUcbfsLH307A/NPcNyy5eA6+0kVauz2Eez+q9AJ3FcAPcg4byGOB/Wc4fnx
gLMc2OsPOvC+Lmg/e76s9RfqXJV5fOYFc67M4buY7QFG23A+uQ7Li+Fr8DOB
f3z3i+ZcnXU+1ZEK3Z8K/Z8uc+DxFcdBaPUMYPywbLiPyoqtSOahKafNeTIG
uxbCuRZtYUw+D1o9SZevNl37uNuqCtgj4P/4ydvv/CzO8M9f36f2+rxz7lP7
bb2cv6W3W1tb4/7mb/7mh8D5b4q57+xbu/gHb759p7/+7L9e6T0AfZUjc13s
dV+g85IewTd/iHOE8zGfAr/PBtjP/Yi8Cp7EOowFnx18/chdiN8M9twPe4DH
ks8fOUqAiQydl7nQlaJ++gp+s4UuntPs+5oInZ4gMfA3+6WM1O7GeZ4kY/W4
3gD8V74t440J4N8EqT61V3tAtpznrIb9YrpIbf+OOG/ukofQHKudu4BBYNjC
eQns556g8xFeuLNx3ifLek+iLHfukfXu9+RRfwLO6VSdX3TfgmU/IH88eV6+
CBXpejEATLiS5ctQgXwRyNGexS89qTgWArN4nj1T5wmzpxrnILE3MueLGfNS
CozZo/48+SJ8ENeNXufswf4AuN+wn4bGvABdUywjDfvxPcDWwH5sWtgzOU/7
LbJvLucVbFiSZc0cj++8WPszPrAmaX/8B5yriO+YsRD2R/48YMwo5Xt8qT3k
MrU/rPEek4x5x9uzz5572H81Xd/vU/aMd+ZoL+eX3gLt6fbCx/7IecrHxDdn
Ej/Qmbn8HYuhxZKB84PyVaRYvmDf9gB8NnwvrwbZ7/uInge68LrPfceA6yL1
+14OMoZzDJ+Fl+n78Xwp1nOGeH8MbG9x7gtwfx+a8b6rBLodtgwcvNIHO2ci
jnNwfqbr7M9ZaI0vp+/KY/iTa31ZsmTO3J6PGi/jsOf070daM2UBnL/mLJHZ
3kxZhh+/gcurOC7CTs7BZx+HNhiGhh2Gdg81ZUH/JIu/Lg2+OnNtBdJ3J1fM
dVf/tz94U3vIkM+ZU3u9xytj7d+dd058fd+882/4/M033/yR2+2O+6u/+qsf
Guff3be2E3PnnOar1VeP/skGfBfifLYrV1bgR62BJx/h+17tzQA+U6DNDuE3
LYYuOyGfht6XT8Ow57DtrwJHod+P4ncuwm3v47cEN7gLtOf3Sne6zsacw/e/
CG4nr3O+2khdEvzzdyVS+R74/F3gPBF8lyLLXdnK85yfGqshr++V8aYUaT27
X24e3i2NH+yT3quJ0nvpXXFc3yOum3vxPzJkueM9YHiP9klnb2dyF7E/27xL
ljoStN/iYvt74GX2RE7SmeKcJ/7EAc7GZ/yTqfM64/erSJF8HiyQzwbB8aF8
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
5p6l71XX/gPj/LfVuTNW2LS3svTc46lTcsdfpLUI95jL9mYA69maQ38OXfWa
tjrBXbZ7tR7uW+i37y4e0X6Wr88clOfct8n8+QzjL9BgE3kaL3oBn4g7itbU
34dfHjZqZ+6Sz6EfbkND3XKnwdfmbbyeIbddWdDuOboLkTgfh0afaN8h8Y5t
wPhOudDPWNznivk7eO4KtMCyF5rB+zm0ezr4fBewlQydnqz1ciu+HeBUvAd8
7w/w2CfgUeLuHrQDdeR3zJWfKVNcfwP8GvkpI678TuPTRk6KWpc8+CaRCl8Y
3LmQr/h/xng6ONmImZHbM1SvM7b95VS+xthexnLV1jyD33BnhP55qtx1/Qz2
bafi+EWMnJ6m16kR1mCb1oHzp7BfxCB3ntNOvYA2XoNOYWz8mwX6FnjPcwVa
0/PtQoHudf1uifH3LLzfbM2TfAl8fzmTZ1yfycf/Vaz71pkDpFZnbp5/80vu
UCX3Qju8AU43GGuZLNMdxfycaFO+XqzSncaMqX/LGtilKn3em2mjjlVjcbPk
drzWHHHOOhpic4/y+7t5HAvk9BLwQxV4Gc/heTPPeBrszuIReXGmWe6EKqEt
i9TvZl7tJmtzI/g8GQuA/t8A96/zs4Dduw8f8w78wJs4d88P7YbuL1VMP2Ad
0sxe6PUS4LxUtfwt+IdXwTOX8diLo+ByR55MQrPPDBRIwmaScE++TPQflOzM
tH8/yaiDe5f0V+vaGWvn/pXfOdb+IVh/QJx/bLZMc3pG5sgl39H/7R58aOL8
fhDYDBZr/dpqpBD6MldrIt/Clv4cmGYPyy+gd787f0h+cR6+OjQX4yzMpbO+
ifqNO7NZR/Uizr3oudCpJnBRqcaaV4K54HXgHLeRw+9Ax94Btz7E3787mqNY
v+nOAp9nykXuWDany6wF30U3a2RT5GLfdsW59sJBD9xzg9N9u+EHfKF5NPIn
a1vXgfMV/w7cvx3cmaH72W+NZOA6MW/saKavy5g1cfANfc75fGCH2MhVbmPN
l+4knmatTNpmjJq56Wzdo/jlFPNiaRqPY9yRPMsaFPI4NTLjXav+7crzb3BO
P4Ove9mO9+yBZhn6TFbga7wCb24ksvFZGbEA1uOshbbjPe7C/5Oqu85fqA8P
exAv0h2KG/Es1Qu/PL8PNsekfG3wOXgX7//beda3Zutzua/4DXGuPM74w179
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
TmwnthzHsU9O4kRRZBWrMpLlyE6kyJF1bMeyHNmWZfu4SKIkipJe7u++7+18
GMyisQCg+J1zz8zOzpZ53/vf///ed999Eh8Sx2lOB73Z22hGO0rMaMsR01+9
11Qc3myKDm4yx+5fZSoPrTfhY6sFn+tM+Pi91ueLXhsVDA+WbRC9vkZwvkU5
PVG9zoxwbqL47bTc/9HyVdorbrgc3K4xg+UbhDeWqH8Yrlwl71lt3tm5Q/dm
XQxv1N6xnKX6ZMta80wb+1RlDjWuNG/nbNXQOjPbINwhcw7/0VWyUviIfnMr
TLc87xSd0VW61fSUbTZx0YCxs+IfKvdo77vW4q2ms2q/iVU/rDXp4KS94oCJ
C266hfNCoieaysRvVDxuQtS8Vh4xraJp22sOm6H204Kz06a5/JBpq5b4o/qw
aa86ZDrrjph4/VETET/D3pLOOurmj5gOwWG09pDW0FM/31bOPpT7Taxyr+mv
2WfiZdvNQM0e01WxU7hst4nJ152lO/R1dPJAhcSr5ZvEf24Qv7fVjIjhJ3Vv
Wrn4zZot4jsFe/XbhIdl/OXzdhau1H58mbq1up8PDoWD8aEj4l+JtYYq15ue
s2tNvHiF4Hqj4jDTLPiuWCt/h7+1WnV2sn6d4HyzYJzc2VbR4MLVIc5G2Si4
Xm2xK/F4X9lywfo6wf96Myv3bLJ5lejCrWZKtPuk/BwaMS3+gs/TW7Hd9Nbu
NW0V+01j+UOmqfYJ09JYaBrqZFybzprGxlLT1ExtfKlivKrqtMU6zwXnqfGh
f7p3+fLf8rJ71PLVx7g9atdzJsOtjPPguej4Kz6P26NKv7iyu+++u6Wvu+Mj
rN0M9hGnRXV/EXmX7u4W3Z8wJLHb9OSA5mbIxapRRyk6tbX2lCl5fI85/uAW
8/jeDRKjrzU1h1ab0geXmtAxv39M3Q7TWbRK1+TG67YL7uU1wfRQ2WozePZe
kxR+HhUsJ4Q7RmQujVat195xPWdWaK+4ceGNdM1K82z7FvO04Py8YJv91OB8
psH2nHkmXGCe5lxV+sSLXWxdaZ7v5ByYLeZc0wpzIbTBPMnZL/SMD603T7dz
ZucW+R3iF9oKtE/8rMSGMy0FElNsMlPEgvWClwrRnzKvM7q3TPyU/C8DolPi
olfYN9YrmqLjtPiQkgITObnK1B1dZWqPrlFcjQuP0YvefoZ1iqXB0iXyfI2Z
Eb06E9psJhpWig9bJWOx3MQKF4k/XGFG5D3T9Sv0/IrnYjvMuRb5zPTJlf9d
e17Xr9Vzs9TPyWc517LBzMjr6KRpYt6mbfL7Vil/putk7ORzjFZtFh+32kRP
LdWzbtKCbT5jRrA6JRjOiG7GJ4zXwe/gXXxzhfB1PTF0gdZSDZSvVB/Qr49r
BevbxLesEfyC7c06djPiYyeb18vvEY6X/xOOHq5cKV9vlPdtMM/GOef0fvNk
O3nd3aIXtonv2m4iguvaM4+YqtJHTXPDKdPKnulwhQmHK01zc5nim71zLS3l
+ry27oypri5SjKtVnjYNNSXmp1541z8Lzjkv8VrqY1yfqGupj7lVcO55V47R
853RQs6xrvD08Z+nHmNY107YjyTxXH+76QHrPa26ZpJJdpt3XEzN5Y4n0/3y
vMfWsQxIzBctN11txSba8ITuyaor3GvqT+0wzSc2mZBY+NRm0/D4GtH0W2Su
r9U9lyOV7BkXE0wPV1gbqRTdKPhHu7OOp9pQOIdesc+0b5J5vVrie9F39bZ3
3KRgZKruXj0fAl5/ivOWBQ9Py/vYk805T+dFJ3J+z7Oc/dS+Ts8M+LGebdpz
4rnYBt13Th+lt0c3iYGdteJTCgRLgkf52VnBmX1NdETbZsUU2HoyvM2khMtG
KlfL3N4pfmq98NZ2jWHBEXtOpxqFN/k/5fGpjvvMU9F9wmFbzGxrgZ75e0F8
04Ww9SHj4summ+DZleKblukZGG9vXyt4Xiufb6X2jTjfYnvsnBfO5JxZHi+w
r1783JT+7EbdL5uqERzWbhCNtFIwLv5JMAzXd4mm6RKfO9FM3SNYX691UWnx
YxnxDzbO3iZjv8bX4gXyv26XWHqbcPxS8XEb5PMtN32iuciz8bsz4hfT9fiY
ArHVYvJ5ZYzIqYHtdMNm/dvdpevMgIxPT9VOEy7bYxrOHDB15Y9JTH3ShFor
Tbit2kTaa9XCbTUmFK42IcF2g2j05mbbfyaknH5WcF4ier3Y1IpeR7eXlx7X
fZT/4md+8mt33nlnvj1q7lxUt0ctWB9zw+cfz3e9gTifry4u2C+uUKz20CMP
PZ0YiX/L1lXGtN6J9VH2H/X2tpo+ajqG2s3MRL/mkXQtSNd6o/J6ROLNmHC8
6HuJIzOJNpMaDUlcyf6yWpMYqDeD1MB315te4uLKh0x7yR7hP+FC0cz9Z4XX
yzeLFeh5S/SLgMsHhU8SNej4FYqfZJ1octHtT3HuYmiTYE/mc/1KPctltknm
VsO9go3lFs8RwWjLSj2X9WLranm+Snn9mcha807B8zORVeZd3ZvNT/TtMC/0
bTfv7FilZ4A8GVolvmCz2CY9S4BHzvKblbl7Hr/RztfbVRM8FV4nGkB4kDxD
Hb6AOmG0qXyWihX6fKJ+teJ3tnWLedfQEfPC2HHz9tgD8j24fon8jOBTfNP5
Fvary8/Wyv8vv5fz5J6J0KN+i/aH4Wy6Z+V/fzayTnzLWv2scP1MI+fS3av7
4i+IH6LHxKTgPCWamXM00qKbx6rXaGw8RpwkvjNauEI01krR42tVR6fFJ2Qa
Ngimed9azYOMig4ZqhD/UC2/R/TAucj98p71or9XClbXCs5XiDaT79cUyL0R
X9a0Xfvwp+sLVKeQP0/U7zRDtbtNHzWqtQdNR/1jpqn6cVNXc0JwW2zCkSoT
jTWYuGjGWBc1sfW6Z70tUic4rxMur9Y96vSaAueNTexnLTIVpRKjk18XPud7
GDgvO3tU9Oa4SSYTX/Tsepqrj3nBs73a5zsX9VX3as933SSc5zsv2fWLq9pz
332p8zOJf6J2c8SvmQTraHZycqO6Lznir+tEFOcDgn32I7O2avdkdGquF35P
jcfMZIY9F+Sp+syF2RHz5PkRMzXeYaZGxQ+wl7RPYoK2ItPNXu6qB0y8QuLQ
sp0yj0QrV+42/WUFogm3aHyerN8uXL9KsCZYlLh8qm6pzPHVwmMbtC8Uc/xc
00o96wWcgNcLzSsljl8jnL5ecf50GF5cL3y9WR+f53yQri3mR3u2ao93zvnh
LC++z7ncFzsKzDtE1z/dBj+Kz4huMxeJB9q3ak9i/AkYha9nmujhQm/6AuVF
YpAn23YKj4uviO0zz/U9qlxOn+tp8Um8b0b+92c60BD0txH+lriWvCQ5iGci
El+IX3k7Zxp0FtizpCPrtff5U63r5bOvkOfr1L/hSy6IH9H/Q/7eZOMm5Vh6
5pIXGaqQx+qNMpbrtQal/eQyzZcn5f9MNWxSLINtMJ6s36R5bs6jTqDhxZKi
+afb7jPPdh0QfIPzAuHknWa4bq8ZIndQtkXzB701+8xI62NmtP2Y6W+jD0ip
iXVUmbj4+O6uRtMlFu9qEmvR3A/8QWzYSc8Zeoyyb13wHW6rFW0uWr2pXPEN
jpuaykwDfeTqS0zlmUcF60e1z1xNrWh34fT6Wnm97IT5keee/v6JE8c/4WXP
S8zt1U59jNujllsfs8i7fXGeLxfn+sW585LLN23a1PfcO578yqDD+YjFOhp+
yN+vDI+PsA90qF3XhsE6PQjg/IFArQdmcW/XhlOi95OJuGC/U3R+h0knImZ2
esBMTVBzFTeJEXpF1JqhrjIz3n3GjMaLzEDkuBmKHDVjUbHIYdPfcL/poX9K
zXaTkZiOPv7Ek0+GdgiXCd8Kdz4l/I62Ji93QeY/ObmnQqIl65eIzl+pMf3T
mrvbqGewnhO+f6fEihclZj8fgicFt2G0eIHm/M6HN+r5XuQB0jUrtCcTub8p
4edp/l4YrNueMsS4xKaZho3in1ZqzPqkxPuTLRLzt3JGxXpbR9C0RbS08LDg
HC7HjxAbTBOHyN9M1SxTv4JWmK6XWAS9HhafJf8rvgx8T8nrFzt2CLY3yv+x
Ws+ZnUEfVK0SXHKW9ErVE0PlqzSf2V9qz6rrFw4eFM0dPb3K9J6Fy8nRwffU
OW7R3F2iTvyp6OuR2l1iu81g9S7TXbHb9NbuN+PhI6a/+YgZ6ig0o3KvRroq
TF+HxNASS0ebTpnRgZDc+7CuFfSJ9Q+0KU/09UckBoyYbnDda+ttetinTt1/
V0iw3SDcLvhm33Mr+C5TjR4SrIdCVfK8Yg7nDfXFpuTYA4LpY8rntbVwerGp
rjhlmurLzMx0+m+XLVtGDs7VxwR7tQ95tj4m2Kv9Nd2jFrxuEs6vdHZD6cKF
C0PTU6nfZY2Heic1xbjdh8Q6Lpw+Jnw9Sn3KWLD/SMSvye7Q57aPRGRO27s6
MLu2FNX60ol0t9aDjI/C/VG1jPiA6RR7xJtMeqTRJEfqTWak1mSGKkTznxb8
nzAjsSdMIn7MZPqKzGj0CTMeKzTj8VIz1l5kxtseN5nwQ8I9ByQu3GMmmuDT
3SYpXJUUfTkh3DUT2iWPcOo2wU2Beb5rj3DnTpNkPUf47UILfmCrxAgbzEx4
pznXJngiBq9eIZjbLN9fo9o4Uyv8K1qZ2CEh8S/rBxONdl2pr3SN8um50AbR
IMvMYOk98jcl7qgl3yacKT4jLfp8sn6ZxAUSU8vjRMMa9R8TEps8I5rhKYnZ
01VL9e89Bdc3rRFcF6i/mqpfJTjfI/+HaGb5/Zla8F+gZ2Ck6vh/hIdrtooe
Z//hdtHVu4Wrd5l+iY3g4o7iLSZ2ZqsZqN1jeqvFf9Y+aLpFV8frHzYNxQ+Y
8uPC0S3HTG/rCdMrvDwkeB7sqjZDvfUmMRY24+PtYjInqC9KSIw3SG+PVl1H
ZJ8LMd6gcEE/c0GMvXTkeOJwd7xZeTsqxn6WCBgP11qtLgbOybO1ttr+cYrz
FnBerhr+bMlj5vGD222OXTgcjPO8qvykicjvqamp/LyXvz4meF5ikXdpfUww
B3fD/WNyr9cZ51xXqosL7l0j16hnN4jVdEbbf020u+67Gvb3Pg0MWD7na3AO
p7NfUWsxhKMTY3bPFbG7rens8utAon4dp63htFog6vO95XreTz3LiFhiNGr5
Pmk5f3yUvZ2sXYfNZIrHGpPoKzaJ7lNmpLvIpAT7mZEqk5T4PzMeERM/MRYy
FyebzZPpRpMZrDQzo1Um3V8q/qHYjMXl5zqPm7HOkybRKdwjemG07YhJia9I
dRwzY6FHTDJ8yExGj5npzqMm2f64me4qNBn5maT4j5HGA+Zc+8PmQuSAudB+
QLhwh5lp3Su+YL9oX9EXjfcJznepfxmrvc90lYgmrt2ieBsuF76X73Gu1IRg
b6pZtEg9umC78PFW4fqtZrZtr5lsvk/riSda7hcdsFdrBsfqdpiJ0B6Tkq8n
WvebZPNeM9a0zyRbHzKJlgfNcJP8fdE7qfbH5LOI/4ufNmkZn2RXkUn3nNHP
n+wVnSSW7Cs3qT7xmb0VZqSvyowPN0r81Cr3LCIaK2wmkuyXYY2+Wsa/Te6z
/V4mgybrMglqf1M9JjPRb9JiifFuW4Mj9zIxxn7Ydt3T0k1/KeHtOHvpRKN3
0EO0o0H7woFtYnD6SsHj9H/ltTbldPrKlAvOybGTg6sxzT7Wea2pscwcfmiX
eeLw/bY/dN0Zn9NLFOfdsdbvPXTwwY972b0rN6U+xl1vMM6vde9a5bFjT7zj
+Xde+D61GdQ6o9sHNe8eUT4fGbL7I+Ft9pXCz4p79ir2t9p6j2SP1l3D4eP+
vsth9pahBXg/c8Lvi0IMMDLUpvtZhvqzmoAatdEh9mJTf95ikqOtiudE3xkz
Dm77yszYQIVJDsl8HBQbqhM/EBK/0CJYD4t+bDIDXTXyOpqAetkmk5Dn44MN
8jP1Yg0SJ9SboZ4qM9xdafo7z5pBsYGOEvleo3yvzowPyO8crNevk/Jz6IuZ
ZMjMJJrNzHjYXMjEzLmUWLLdpHsrxY+cNWMx+f+6JO6Qx7420baxEtEd5Wai
v9JMDtWaqeF6wZ38zc5ik5LHzGCTaJUmc26syUzzvUH5n/urzZhgMCXvTw9X
m8nROpOR740P2c85kZCfGcPkf0oITuX/yYyHxBeGzVS63UxlOtQmM1HRsN1m
erJbYqNu0U9xMZszmciw37TbTE72mukpetL0ymvsY+kxk/LeTJpeFayd9gqe
e01mcsBMTNo9L/SrAe8jcv8G+iPaN6y/3+5lQYt30UNMOJv6dzR5Z1ericaa
tQck+2ej0UaNxdujTfoafaWiHfV2r2pbrfJ4qzzC8fR9bobPW6s0Xqcmprjw
UeVvsE2evUGwX08+rqrIdESa/smvjwnuXQnG5q5/zOtaH+Oum4jz3L1rwXqZ
irVr1/ZefHrmK0MDUVvrPBRTPsdHjyou7R4GsA3/WovNcXjC1/MYWNfXqTsX
zk/DBQn7XjV9X6fWl5OvtzXcET8GwJdEVA8O9tNvollxOSpchA3DR/3CSwOV
auOCifFhcC6clKCGrdUM9zXoa+mxNsF4yH5ffAf6IDnMHhXWBOzzjLyH/GBK
vpeR1yfGItpfyvaYCqulR6l5bTcT4/ScIr6ImWmJPWaE63h9Ji2xiOjZqVSH
mRUfMJPulPfI++T1c5NdZmYibqYzccEkdfZNZlZemxZcTQvWpgR3k4LDSfm5
6YmYfE9enyB/yfflZ+Xx3LRgMQVWu+T5gJmd7jfT033m3MyQfF+eT/bJ+wcE
t9Qz9Wutw8zUoJmZHRYc9+v+cWoeJjL92kuKHjTTM8Py3kHd8zKhe1V7VaNx
/7RmVu4tOnxYa2fjc2sw9ICkZww5Gc3RiC6Hv3v7IqarJ2xigvWYYJt8G/WV
nfGQ9n3lNR7BPRzf4fd/Ra+D8XCb6Pa2Go3VW+HzULXiuzXMY5XNuVMD11Cq
vaCpk0Hb11YXmzrR76dOPvF/PKvZXW9Xt3eF2Dy4d+V1j825bgLOrxajUxdE
fVBDvDPyPnoJae8f5fIOvz9Ip/YVG9G6a4tvxedA2N9L3qE4R8NZTW97GPF1
KhHXPmiZVJeut1vO79LeEPyc7SNh8c7edNdXIkHftlH2isvXwnsjwo1D3WeE
q8sE65WK99GBGvEB1fJIrxZ60bSo9XfXm554jT7iJ0aoa9c+UexZZw+6xAqC
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
Tz4ODnf1MjzWsVZefdpEwtU/aKgr++qG9es+JvPzPb6B8yCXk3+jNuZJL5tn
D/aCQ7MH19OuFJvfzjh3MXpe7e7ZcWGfLuOE9vnJ5cuW/sbpk4f/nLMRte8J
HAHH+9rP9Q7XHN2YXVNj7gR5JaPxpcUwvAi2bdxKfsrOf4uTqK2fERwSs2a0
zyu4rTGJ3rMmNVhhkv1lZrz/rD7yWnK4TvPgU6lOu5YuRt4dfMLt5NbAOX0n
wGlmLGL5f6xNc++KeTAsvD4pWJ/iUftOxWw/Gt7He1jj532JTvUl5OPA+Vxu
YdTmFfl8fFbWrzQ2ScT181qs9s7ZhOB9yse+PtecW9+cT0iBUfUL/hiCd82Z
21xc0Oh3MS14d2ub7v0TrIclLabBdzrZPRffa82Tvh7X3AIxCTHYsB/LK8eP
RDUmp0cN+TrOcQD3aPh+rXWz6+aatx1o17Ma3Bpbl9a82dg87ufdwDJ5OXid
dfKYfq/F7wndobF5CJyzbyVUqfUvPRLPR1rr/mH/A3v+4M4776SHxH/1jXOV
gn3g2GsOl5N/ozaG/Wkt3qV5dqfZc2vab0ecc11pfS2o3YN5d8aDcWF8GCfG
i3H72bvuWvirjx168HMdrdWv0LdReyiAY3TlRL9yBrhP6jyKqa6086pnjts1
/vZzcqrhff6boP5CcR7TPlC8nvH5lfOVJsHvaKNJiVZPCaePdRea4a5TinXq
Z9IjNYLPdjOd7lS8ky8Hx8Ts8DFcjzanr5TqeM2dW5yzFpcWX5BU3xLVPnNT
4l8mk3HFs+bhx63/wcA669EzElNMpe06gmJce1DZPtQJ7Tmb1eoZvyf1pPq0
Pv28Gn/L+Ewk7Xr2RIDjLU7ta/rI+KRsrsxy+sActzvsz9DvgvNZ6NPq49zG
6z3K/YrZYbv3iHwJpn4aLuc5vI0Rm4zamJ3vDZMP9XN/dv3c1seQk3drMLrO
Rq+r/jabe5/b52jxHovb3tOai4vzdbOupcPx9Kpub68VfNfovtPmxlLTIlZR
duqbJSXH/+rEscN/vP+B+39/0aK3fVDm4X/zzWHc6XVy7OxNIy5nLQ2OGvey
+1bYx0GtSG4N3Oui2bluIs5z19dc3t3tX9MeM56tGWJ8GCfGCw3E+P2it2DB
r6xbu/q9u3Zs+d2D+/d8obTk+Fe7Ohu/C3fbdZ1eu16bsvwx5ueI5tbN/bVz
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

      "], {{0, 346}, {250, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSizeRaw->{250, 346},
    PlotRange->{{0, 250}, {0, 346}}]}], ";", 
  RowBox[{"InfinityBarrelLabeled", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Inset", "[", 
       RowBox[{"InfinityBarrel", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "3.2"}]}], "}"}], ",", "Center", ",", "5"}], "]"}], 
      ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Infinity Barrel\>\"", ",", "25"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"0", "\[LessEqual]", "T", "<", "30"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"BallMaker", "[", 
         RowBox[{"1", ",", "r1", ",", "j", ",", "T"}], "]"}], ",", 
        RowBox[{"SingleBallMaker", "[", 
         RowBox[{"1", ",", "r2", ",", 
          RowBox[{"T", "-", "20"}]}], "]"}], ",", "InfinityBarrelLabeled", 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "5"}]}], "]"}], ",", 
      RowBox[{"30", "\[LessEqual]", "T", "<", "45"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"BallMaker", "[", 
         RowBox[{"11", ",", "r1", ",", "j", ",", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"T", "-", "30"}], ")"}]}]}], "]"}], ",", 
        RowBox[{"SingleBallMaker", "[", 
         RowBox[{"2", ",", "r2", ",", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"T", "-", "40"}], ")"}]}]}], "]"}], ",", 
        "InfinityBarrelLabeled", ",", 
        RowBox[{"PlotRange", "\[Rule]", "5"}]}], "]"}], ",", 
      RowBox[{"45", "\[LessEqual]", "T", "<", "52.5"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"BallMaker", "[", 
         RowBox[{"21", ",", "r1", ",", "j", ",", 
          RowBox[{"4", 
           RowBox[{"(", 
            RowBox[{"T", "-", "45"}], ")"}]}]}], "]"}], ",", 
        RowBox[{"SingleBallMaker", "[", 
         RowBox[{"3", ",", "r2", ",", 
          RowBox[{"4", 
           RowBox[{"(", 
            RowBox[{"T", "-", "50"}], ")"}]}]}], "]"}], ",", 
        "InfinityBarrelLabeled", ",", 
        RowBox[{"PlotRange", "\[Rule]", "5"}]}], "]"}], ",", 
      RowBox[{"52.5", "\[LessEqual]", "T", "<", "56.25"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"BallMaker", "[", 
         RowBox[{"31", ",", "r1", ",", "j", ",", 
          RowBox[{"8", 
           RowBox[{"(", 
            RowBox[{"T", "-", "52.5"}], ")"}]}]}], "]"}], ",", 
        RowBox[{"SingleBallMaker", "[", 
         RowBox[{"4", ",", "r2", ",", 
          RowBox[{"8", 
           RowBox[{"(", 
            RowBox[{"T", "-", "53.75"}], ")"}]}]}], "]"}], ",", 
        "InfinityBarrelLabeled", ",", 
        RowBox[{"PlotRange", "\[Rule]", "5"}]}], "]"}], ",", 
      RowBox[{"56.25", "\[LessEqual]", "T", "<", "58.125"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"BallMaker", "[", 
         RowBox[{"41", ",", "r1", ",", "j", ",", 
          RowBox[{"16", 
           RowBox[{"(", 
            RowBox[{"T", "-", "56.25"}], ")"}]}]}], "]"}], ",", 
        RowBox[{"SingleBallMaker", "[", 
         RowBox[{"5", ",", "r2", ",", 
          RowBox[{"16", 
           RowBox[{"(", 
            RowBox[{"T", "-", "56.875"}], ")"}]}]}], "]"}], ",", 
        "InfinityBarrelLabeled", ",", 
        RowBox[{"PlotRange", "\[Rule]", "5"}]}], "]"}], ",", 
      RowBox[{"58.125", "\[LessEqual]", "T", "<", "59.0625"}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"BallMaker", "[", 
         RowBox[{"51", ",", "r1", ",", "j", ",", 
          RowBox[{"32", 
           RowBox[{"(", 
            RowBox[{"T", "-", "58.125"}], ")"}]}]}], "]"}], ",", 
        RowBox[{"SingleBallMaker", "[", 
         RowBox[{"6", ",", "r2", ",", 
          RowBox[{"32", 
           RowBox[{"(", 
            RowBox[{"T", "-", "58.4375"}], ")"}]}]}], "]"}], ",", 
        "InfinityBarrelLabeled", ",", 
        RowBox[{"PlotRange", "\[Rule]", "5"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "60"}], "}"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682175145391308*^9, 3.682175239819725*^9}, {
   3.682175347081382*^9, 3.6821755138177013`*^9}, {3.682175586433135*^9, 
   3.682175635695777*^9}, {3.682175924318471*^9, 3.682175928443151*^9}, 
   3.6821789329716454`*^9, {3.6821794023114862`*^9, 3.682179404932078*^9}, {
   3.68217978630449*^9, 3.682179800764846*^9}, {3.682179928259561*^9, 
   3.682179942823873*^9}, {3.6821799905619907`*^9, 3.6821800187410803`*^9}, {
   3.682180095597177*^9, 3.6821800961490393`*^9}, {3.68218243196144*^9, 
   3.682182484338909*^9}, {3.682183767134281*^9, 3.682183837254032*^9}, {
   3.68218387329878*^9, 3.682183902904978*^9}, {3.6822045054358273`*^9, 
   3.682204518255868*^9}, {3.682204624540169*^9, 3.682204624899877*^9}, {
   3.6822047013301783`*^9, 3.682204730465568*^9}}]
}, Closed]],

Cell["\<\
A Look at Your Graded Problems for Today: 1.2 #12 and 1.3 #8, 12\
\>", "Section",
 CellChangeTimes->{{3.682175075249743*^9, 3.682175127422516*^9}, {
  3.6822022390587053`*^9, 3.682202245544796*^9}, {3.682204805283758*^9, 
  3.682204806698505*^9}, {3.682238723156639*^9, 3.682238742113636*^9}, {
  3.682240702322274*^9, 3.6822407408784246`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Polished (Elegant) Proof that ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 " exists"
}], "Section",
 CellChangeTimes->{{3.682175075249743*^9, 3.682175127422516*^9}, {
  3.6822022390587053`*^9, 3.682202245544796*^9}, {3.682204805283758*^9, 
  3.682204806698505*^9}, {3.682238723156639*^9, 3.682238742113636*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"{", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"\[DoubleStruckCapitalR]", ":", 
       RowBox[{"0", "<", 
        RowBox[{"x", " ", "and", " ", 
         SuperscriptBox["x", "2"]}], "<", "2"}]}]}], "}"}]}], 
   TraditionalForm]]],
 ".  Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[Element]", "A"}], TraditionalForm]]],
 " so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[NotEqual]", "\[EmptySet]"}], TraditionalForm]]],
 " and that 2 is an upper bound of ",
 StyleBox["A",
  FontSlant->"Italic"],
 ", for if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", "A"}], TraditionalForm]]],
 " satisfies ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "2"}], TraditionalForm]]],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], ">", "4"}], TraditionalForm]]],
 ", a contradiction to the definition of ",
 StyleBox["A",
  FontSlant->"Italic"],
 ".  Therefore, by the Completeness Axiom, ",
 StyleBox["A",
  FontSlant->"Italic"],
 " has a (real number) supremum.  Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{"sup", "(", "A", ")"}]}], TraditionalForm]]],
 " and note, for future reference, that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "\[LessEqual]", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  We claim that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], "=", "2"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.682202257126893*^9, 3.682202321373705*^9}, {
  3.682202473635282*^9, 3.682202577868452*^9}, {3.6822384398245497`*^9, 
  3.6822384429968777`*^9}, {3.6822384824781513`*^9, 3.682238494440194*^9}}],

Cell[TextData[{
 "To prove this, suppose to the contrary that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "2"}], TraditionalForm]]],
 ".  Then either ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], ">", "2"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], "<", "2"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.682202581045459*^9, 3.6822026133545017`*^9}}],

Cell[TextData[{
 StyleBox["Case 1:",
  FontWeight->"Bold"],
 " If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], "<", "2"}], TraditionalForm]]],
 " so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "-", 
     SuperscriptBox["\[Beta]", "2"]}], ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", then we can choose a number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]", ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " satisfying ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]", "<", 
    RowBox[{"min", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox[
        RowBox[{"2", "-", 
         SuperscriptBox["\[Beta]", "2"]}], "5"]}], "}"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  Note then that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Delta]", "2"], "<", "\[Delta]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}], "2"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "+", 
       RowBox[{"2", "\[Beta]", " ", "\[Delta]"}], "+", 
       SuperscriptBox["\[Delta]", "2"]}], "<", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "+", 
       RowBox[{"4", "\[Delta]"}], "+", "\[Delta]"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], "+", 
        RowBox[{"5", "\[Delta]"}]}], "<", 
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], "+", 
        RowBox[{"5", "\[CenterDot]", 
         FractionBox[
          RowBox[{"2", "-", 
           SuperscriptBox["\[Beta]", "2"]}], "5"]}]}]}], "=", "2"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  This implies that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Beta]", "<", 
     RowBox[{"\[Beta]", "+", "\[Delta]"}]}], "\[Element]", "A"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", contradicting the fact that \[Beta] is an upper bound of ",
 StyleBox["A",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.682202624019085*^9, 3.682202639457885*^9}, {
   3.682238452738721*^9, 3.682238456524145*^9}, {3.682238522252749*^9, 
   3.6822387176666813`*^9}, 3.682238885197873*^9}],

Cell[TextData[{
 StyleBox["Case 2:",
  FontWeight->"Bold"],
 " If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], ">", "2"}], TraditionalForm]]],
 " so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "-", "2"}], ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", then we can choose a number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]", ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " satisfying ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]", "<", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Beta]", "2"], "-", "2"}], "4"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  Note then that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}], "2"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       RowBox[{"2", "\[Beta]", " ", "\[Delta]"}], "+", 
       SuperscriptBox["\[Delta]", "2"]}], ">", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       RowBox[{"4", "\[Delta]"}]}], ">", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       RowBox[{"4", "\[CenterDot]", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", "2"}], "4"]}]}]}], "=", 
     "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  This implies that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "-", "\[Delta]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is an upper bound of ",
 StyleBox["A,",
  FontSlant->"Italic"],
 " contradicting the fact that no number smaller than \[Beta] is an upper \
bound of ",
 StyleBox["A",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.682202624019085*^9, 3.682202639457885*^9}, {
  3.682238452738721*^9, 3.682238456524145*^9}, {3.682238522252749*^9, 
  3.6822387176666813`*^9}, {3.682238748971528*^9, 3.682238754374461*^9}, {
  3.682238793742111*^9, 3.68223891830727*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["A Crazy Function", "Section",
 CellChangeTimes->{{3.427813772825472*^9, 3.4278137902198143`*^9}, {
  3.428068973483646*^9, 3.428068976167549*^9}, {3.428077530068678*^9, 
  3.4280775323622007`*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"1", 
           RowBox[{
            RowBox[{"if", " ", "x"}], "\[Element]", 
            "\[DoubleStruckCapitalQ]"}]},
          {"0", 
           RowBox[{
            RowBox[{
             RowBox[{"if", " ", "x"}], "\[Element]", 
             RowBox[{
             "\[DoubleStruckCapitalR]", "\[Backslash]", 
              "\[DoubleStruckCapitalQ]"}]}], "=", 
            RowBox[{
            "\[ScriptCapitalC]", "(", "\[DoubleStruckCapitalQ]", ")"}]}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], TraditionalForm]]],
 ".  What can you say about this function?  Can you draw its graph?  Does \
this function have a limit anywhere?  Is it ever continuous?  Can you \
differentiate it?  What would/should ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     SubsuperscriptBox["\[Integral]", 
      RowBox[{" ", "0"}], 
      RowBox[{" ", "1"}]],
     FontSize->16], 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 " be?  Do these questions even make sense?"
}], "Text",
 CellChangeTimes->{{3.4280775723884583`*^9, 3.428077572602222*^9}, {
  3.428077613038137*^9, 3.428077785227064*^9}, {3.428077834822419*^9, 
  3.428077864099258*^9}, {3.429972408040975*^9, 3.429972408836257*^9}, {
  3.6822407486117373`*^9, 3.6822407937168913`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["An Even Crazier Function", "Section",
 CellChangeTimes->{{3.427813772825472*^9, 3.4278137902198143`*^9}, {
  3.428068973483646*^9, 3.428068976167549*^9}, {3.428077530068678*^9, 
  3.4280775323622007`*^9}, {3.428081561286056*^9, 3.428081564885765*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"x", 
           RowBox[{
            RowBox[{"if", " ", "x"}], "\[Element]", 
            "\[DoubleStruckCapitalQ]"}]},
          {
           RowBox[{"-", "x"}], 
           RowBox[{
            RowBox[{"if", " ", "x"}], "\[Element]", 
            RowBox[{
            "\[DoubleStruckCapitalR]", " ", "\\", " ", 
             "\[DoubleStruckCapitalQ]"}]}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], TraditionalForm]]],
 ".  Is ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " continuous anywhere?  Do you think you can prove your claim?"
}], "Text",
 CellChangeTimes->{{3.4281664864706783`*^9, 3.428166575075749*^9}, {
  3.428168294397716*^9, 3.428168302235278*^9}, {3.682240803002561*^9, 
  3.6822408349151907`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["More on Norms", "Section",
 CellChangeTimes->{{3.430138407653472*^9, 3.43013841474796*^9}, {
  3.430138813046205*^9, 3.430138814865828*^9}}],

Cell[TextData[{
 "For a vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["x", "3"], ",", "\[Ellipsis]", ",", 
       SubscriptBox["x", "n"]}], ")"}], "\[Element]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}]}], TraditionalForm]]],
 ", the ",
 StyleBox["p-norm",
  FontSlant->"Italic"],
 " of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "x", "\[RightDoubleBracketingBar]"}], "p"],
     "=", 
    RowBox[{
     RadicalBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[LeftBracketingBar]", 
         SubscriptBox["x", "1"], "\[RightBracketingBar]"}], "p"], "+", 
       SuperscriptBox[
        RowBox[{"\[LeftBracketingBar]", 
         SubscriptBox["x", "2"], "\[RightBracketingBar]"}], "p"], "+", 
       SuperscriptBox[
        RowBox[{"\[LeftBracketingBar]", 
         SubscriptBox["x", "3"], "\[RightBracketingBar]"}], "p"], "+", 
       RowBox[{"\[CenterDot]", "\[CenterDot]", "\[CenterDot]", 
        RowBox[{"+", 
         SuperscriptBox[
          RowBox[{"\[LeftBracketingBar]", 
           SubscriptBox["x", "n"], "\[RightBracketingBar]"}], "p"]}]}]}], 
      "p"], "=", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[LeftBracketingBar]", 
          SubscriptBox["x", "1"], "\[RightBracketingBar]"}], "p"], "+", 
        SuperscriptBox[
         RowBox[{"\[LeftBracketingBar]", 
          SubscriptBox["x", "2"], "\[RightBracketingBar]"}], "p"], "+", 
        SuperscriptBox[
         RowBox[{"\[LeftBracketingBar]", 
          SubscriptBox["x", "3"], "\[RightBracketingBar]"}], "p"], "+", 
        RowBox[{"\[CenterDot]", "\[CenterDot]", "\[CenterDot]", 
         RowBox[{"+", 
          SuperscriptBox[
           RowBox[{"\[LeftBracketingBar]", 
            SubscriptBox["x", "n"], "\[RightBracketingBar]"}], "p"]}]}]}], 
       ")"}], 
      RowBox[{"1", "/", "p"}]]}]}], TraditionalForm]]],
 ".  It should be clear that the longer a given vector is, the larger the \
number ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{
    "\[LeftDoubleBracketingBar]", "x", "\[RightDoubleBracketingBar]"}], "p"], 
   TraditionalForm]]],
 " will be, but this number will not equal the ordinary Euclidean length of \
the vector unless ",
 StyleBox["p",
  FontSlant->"Italic"],
 " = 2.  What follows is an interesting animation that shows how the sets ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Element]", 
      RowBox[{
       SuperscriptBox["\[DoubleStruckCapitalR]", "2"], " ", ":", " ", 
       SubscriptBox[
        RowBox[{
        "\[LeftDoubleBracketingBar]", "x", "\[RightDoubleBracketingBar]"}], 
        "p"]}]}], "=", "1"}], "}"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Element]", 
      RowBox[{
       SuperscriptBox["\[DoubleStruckCapitalR]", "2"], " ", ":", " ", 
       SubscriptBox[
        RowBox[{
        "\[LeftDoubleBracketingBar]", "x", "\[RightDoubleBracketingBar]"}], 
        "p"]}]}], "=", "2"}], "}"}], TraditionalForm]]],
 " change as ",
 StyleBox["p",
  FontSlant->"Italic"],
 " changes. "
}], "Text",
 CellChangeTimes->{{3.430138721021879*^9, 3.4301387715079317`*^9}, {
  3.4301388243653507`*^9, 3.430139052201953*^9}, {3.430139083253448*^9, 
  3.430139105671924*^9}, {3.430139284480936*^9, 3.4301393006396017`*^9}, {
  3.430139560973647*^9, 3.4301396883478203`*^9}, {3.430139747251837*^9, 
  3.4301397860228243`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "x", "]"}], "^", "p"}], "+", 
           RowBox[{
            RowBox[{"Abs", "[", "y", "]"}], "^", "p"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "p"}], ")"}]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "x", "]"}], "^", "p"}], "+", 
           RowBox[{
            RowBox[{"Abs", "[", "y", "]"}], "^", "p"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "p"}], ")"}]}], "\[Equal]", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"p", ",", ".5", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.430139054115889*^9, 3.430139080243134*^9}, {
  3.430139110948298*^9, 3.430139165456141*^9}, {3.4301392181797647`*^9, 
  3.430139250192718*^9}, {3.430139305322832*^9, 3.430139324136196*^9}, {
  3.430139387601117*^9, 3.430139390504177*^9}, {3.430139507102475*^9, 
  3.430139539084641*^9}, {3.430139700238743*^9, 3.430139733630312*^9}, {
  3.430139772197541*^9, 3.430139808029395*^9}}],

Cell[TextData[{
 "The case when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "1"}], TraditionalForm]]],
 " is highlighted with the next line."
}], "Text",
 CellChangeTimes->{{3.430139893726678*^9, 3.430139917041971*^9}}],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "x", "]"}], "+", 
       RowBox[{"Abs", "[", "y", "]"}]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "x", "]"}], "+", 
       RowBox[{"Abs", "[", "y", "]"}]}], "\[Equal]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.430139054115889*^9, 3.430139080243134*^9}, {
  3.430139110948298*^9, 3.430139165456141*^9}, {3.4301392181797647`*^9, 
  3.430139250192718*^9}, {3.430139305322832*^9, 3.430139324136196*^9}, {
  3.430139387601117*^9, 3.430139390504177*^9}, {3.430139507102475*^9, 
  3.430139539084641*^9}, {3.430139700238743*^9, 3.430139733630312*^9}, {
  3.430139772197541*^9, 3.430139808029395*^9}, {3.4301398480803757`*^9, 
  3.430139873924099*^9}}],

Cell[TextData[{
 "The norm ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "x", "\[RightDoubleBracketingBar]"}], 
     "\[Infinity]"], "=", 
    RowBox[{"max", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[LeftBracketingBar]", 
        SubscriptBox["x", "1"], "\[RightBracketingBar]"}], ",", 
       RowBox[{"\[LeftBracketingBar]", 
        SubscriptBox["x", "2"], "\[RightBracketingBar]"}], ",", 
       RowBox[{"\[LeftBracketingBar]", 
        SubscriptBox["x", "3"], "\[RightBracketingBar]"}], ",", "\[Ellipsis]",
        ",", 
       RowBox[{"\[LeftBracketingBar]", 
        SubscriptBox["x", "n"], "\[RightBracketingBar]"}]}], "}"}]}]}], 
   TraditionalForm]]],
 ".  Note how these sets are the corresponding limits of the sets in the \
animation above as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "\[Rule]", "\[Infinity]"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.430139975576311*^9, 3.430139998826453*^9}, {
  3.4301400314139347`*^9, 3.430140156859193*^9}}],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"Abs", "[", "x", "]"}], ",", 
        RowBox[{"Abs", "[", "y", "]"}]}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"Abs", "[", "x", "]"}], ",", 
        RowBox[{"Abs", "[", "y", "]"}]}], "]"}], "\[Equal]", "2"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.430139054115889*^9, 3.430139080243134*^9}, {
  3.430139110948298*^9, 3.430139165456141*^9}, {3.4301392181797647`*^9, 
  3.430139250192718*^9}, {3.430139305322832*^9, 3.430139324136196*^9}, {
  3.430139387601117*^9, 3.430139390504177*^9}, {3.430139507102475*^9, 
  3.430139539084641*^9}, {3.430139700238743*^9, 3.430139733630312*^9}, {
  3.430139772197541*^9, 3.430139808029395*^9}, {3.4301398480803757`*^9, 
  3.430139873924099*^9}, {3.430139938494194*^9, 3.430139955135064*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Subtle Properties of Open and Closed Intervals", "Section",
 CellChangeTimes->{{3.428081345842251*^9, 3.428081352301402*^9}}],

Cell[TextData[{
 "We know that sets of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}], "=", 
    RowBox[{"{", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"\[DoubleStruckCapitalR]", " ", ":", " ", 
       RowBox[{"a", "<", "x", "<", "b"}]}]}], "}"}]}], TraditionalForm]]],
 " are called open intervals.  They are described as the set of numbers \
between ",
 StyleBox["a ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["b",
  FontSlant->"Italic"],
 ", not including the endpoints ",
 StyleBox["a",
  FontSlant->"Italic"],
 " and ",
 StyleBox["b",
  FontSlant->"Italic"],
 ".  Here's a fundamental subtle property of open intervals that you may not \
have thought about before:"
}], "Text",
 CellChangeTimes->{{3.429970776631591*^9, 3.429970858457807*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Given an arbitrary ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}]}], TraditionalForm]], "None"],
 ", there exists an open interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"c", ",", "d"}], ")"}], TraditionalForm]], "None"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"(", 
     RowBox[{"c", ",", "d"}], ")"}], "\[Subset]", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}]}], TraditionalForm]], "None"],
 " (that is to say, there exist real numbers ",
 StyleBox["c",
  FontSlant->"Italic"],
 " and ",
 StyleBox["d ",
  FontSlant->"Italic"],
 "such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "<", "c", "<", "x", "<", "d", "<", "b"}], TraditionalForm]], 
  "None"],
 ").  In particular, ",
 StyleBox["c",
  FontSlant->"Italic"],
 " and ",
 StyleBox["d",
  FontSlant->"Italic"],
 " can be chosen to be equidistant from ",
 StyleBox["x",
  FontSlant->"Italic"],
 " if we so desire.  In this case, this property is often stated as:  given \
an arbitrary ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}]}], TraditionalForm]], "None"],
 ", there exists a number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", ">", "0"}], TraditionalForm]], "None"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "-", "\[Epsilon]"}], ",", 
      RowBox[{"x", "+", "\[Epsilon]"}]}], ")"}], "\[Subset]", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}]}], TraditionalForm]], "None"],
 ".  "
}], "Subsection",
 CellChangeTimes->{{3.4299708661644773`*^9, 3.429971139700742*^9}}],

Cell[TextData[{
 "We know that sets of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{"a", ",", "b"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"x", "\[Element]", 
      RowBox[{"\[DoubleStruckCapitalR]", " ", ":", " ", 
       RowBox[{"a", "\[LessEqual]", "x", "\[LessEqual]", "b"}]}]}], "}"}]}], 
   TraditionalForm]]],
 " are called closed intervals.  Here are a couple subtle properties of \
closed intervals."
}], "Text",
 CellChangeTimes->{{3.429971159077002*^9, 3.429971207024088*^9}}]
}, Open  ]],

Cell[TextData[{
 "Given an arbitrary ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"\[DoubleStruckCapitalR]", "\\", " ", 
     RowBox[{"[", 
      RowBox[{"a", ",", "b"}], "]"}]}]}], TraditionalForm]], "None"],
 ", there exists an open interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"c", ",", "d"}], ")"}], TraditionalForm]], "None"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"(", 
     RowBox[{"c", ",", "d"}], ")"}], "\[Subset]", 
    RowBox[{"\[DoubleStruckCapitalR]", "\\", " ", 
     RowBox[{"[", 
      RowBox[{"a", ",", "b"}], "]"}]}]}], TraditionalForm]], "None"],
 " (that is to say, there exist real numbers ",
 StyleBox["c",
  FontSlant->"Italic"],
 " and ",
 StyleBox["d ",
  FontSlant->"Italic"],
 "such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "<", "x", "<", "d", "<", "a", "<", "b"}], TraditionalForm]], 
  "None"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "<", "b", "<", "c", "<", "x", "<", "d"}], TraditionalForm]], 
  "None"],
 ").  In particular, ",
 StyleBox["c",
  FontSlant->"Italic"],
 " and ",
 StyleBox["d",
  FontSlant->"Italic"],
 " can be chosen to be equidistant from ",
 StyleBox["x",
  FontSlant->"Italic"],
 " if we so desire.  In this case, this property is often stated as:  given \
an arbitrary ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"\[DoubleStruckCapitalR]", "\\", " ", 
     RowBox[{"[", 
      RowBox[{"a", ",", "b"}], "]"}]}]}], TraditionalForm]], "None"],
 ", there exists a number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", ">", "0"}], TraditionalForm]], "None"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "-", "\[Epsilon]"}], ",", 
      RowBox[{"x", "+", "\[Epsilon]"}]}], ")"}], "\[Subset]", 
    RowBox[{"\[DoubleStruckCapitalR]", "\\", " ", 
     RowBox[{"[", 
      RowBox[{"a", ",", "b"}], "]"}]}]}], TraditionalForm]], "None"],
 ".  "
}], "Subsection",
 CellChangeTimes->{{3.4299708661644773`*^9, 3.429971139700742*^9}, {
  3.4299712169806004`*^9, 3.4299712408539543`*^9}, {3.429971338558927*^9, 
  3.429971400027341*^9}}],

Cell[TextData[{
 "Given an arbitrary sequence ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubscriptBox["x", "n"], "}"}], TraditionalForm]], "None"],
 " of points in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"a", ",", "b"}], "]"}], TraditionalForm]], "None"],
 ", there exists a point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    RowBox[{"[", 
     RowBox[{"a", ",", "b"}], "]"}]}], TraditionalForm]], "None"],
 " with the property that, for any ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", ">", "0"}], TraditionalForm]], "None"],
 ", there exists a natural number ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "\[Element]", "\[DoubleStruckCapitalN]"}], "=", 
    SuperscriptBox["\[DoubleStruckCapitalZ]", "+"]}], TraditionalForm]], 
  "None"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "n"], "\[Element]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"y", "-", "\[Epsilon]"}], ",", 
      RowBox[{"y", "+", "\[Epsilon]"}]}], ")"}]}], TraditionalForm]], 
  "None"],
 ".   (This property has a nontrivial proof.  We will eventually provide it \
in Chapter 2.)"
}], "Subsection",
 CellChangeTimes->{{3.429971467843981*^9, 3.429971646248752*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Least Upper Bounds and Greatest Lower Bounds (\"",
 StyleBox[ButtonBox["sups",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Supremum"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Supremum"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 "\"and \"",
 StyleBox[ButtonBox["infs",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Infimum"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Infimum"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 "\")"
}], "Section",
 CellChangeTimes->{{3.428081627102338*^9, 3.428081679201282*^9}, {
  3.5554073076605253`*^9, 3.5554073076615973`*^9}, {3.555407338378789*^9, 
  3.5554073383799467`*^9}}],

Cell[TextData[{
 "Given a nonempty set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "\[SubsetEqual]", "\[DoubleStruckCapitalR]"}], 
   TraditionalForm]]],
 ", we can create the following very important definitions."
}], "Text",
 CellChangeTimes->{{3.428166649569434*^9, 3.428166720786117*^9}, {
  3.428171278975401*^9, 3.428171279538608*^9}}],

Cell[TextData[{
 StyleBox["The set ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is ",
  FontWeight->"Plain"],
 StyleBox["bounded above",
  FontWeight->"Bold"],
 StyleBox[" if there exists a number ",
  FontWeight->"Plain"],
 StyleBox["M",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" such that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[LessEqual]", "M"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" for all ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", "S"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" and the number ",
  FontWeight->"Plain"],
 StyleBox["M",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is called an ",
  FontWeight->"Plain"],
 "upper bound",
 StyleBox[" of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".  The set ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is ",
  FontWeight->"Plain"],
 StyleBox["bounded below",
  FontWeight->"Bold"],
 StyleBox[" if there exists a number ",
  FontWeight->"Plain"],
 StyleBox["m",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" such that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "m"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" for all ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", "S"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" and the number ",
  FontWeight->"Plain"],
 StyleBox["m",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is called a ",
  FontWeight->"Plain"],
 "lower bound",
 StyleBox[" of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".  If ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is bounded above and bounded below, then we say that ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is ",
  FontWeight->"Plain"],
 StyleBox[ButtonBox["bounded",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Bounded_set"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".  Equivalently, ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is bounded if there exists a number ",
  FontWeight->"Plain"],
 StyleBox["M",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" such that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", "x", "\[RightBracketingBar]"}], 
    "\[LessEqual]", "M"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" for all ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", "S"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" and the number ",
  FontWeight->"Plain"],
 StyleBox["M",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is called a ",
  FontWeight->"Plain"],
 "bound",
 StyleBox[" of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".   ",
  FontWeight->"Plain"]
}], "Subsection",
 CellChangeTimes->{{3.428166730482312*^9, 3.428166828322298*^9}, {
  3.428166864925251*^9, 3.428166949399303*^9}, {3.428168276563315*^9, 
  3.428168276576076*^9}}],

Cell[TextData[{
 StyleBox["If ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is bounded above, a number \[Beta] satisfying the following \
properties is called a ",
  FontWeight->"Plain"],
 "least upper bound",
 StyleBox[" or a ",
  FontWeight->"Plain"],
 StyleBox[ButtonBox["supremum",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Supremum"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[":  (1) \[Beta] is an upper bound of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and (2) if ",
  FontWeight->"Plain"],
 StyleBox["b",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is an upper bound of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", then ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "\[LessEqual]", "b"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" (equivalently, if ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "<", "\[Beta]"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[", then ",
  FontWeight->"Plain"],
 StyleBox["b",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is not an upper bound of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[").  In this case, we write",
  FontWeight->"Plain"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    RowBox[{"sup", " ", "S"}]}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[".  If a supremum of a set exists, it is unique, so we can speak of \
",
  FontWeight->"Plain"],
 "the ",
 StyleBox["supremum of a set.  \n\nIf ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is bounded below, a number ",
  FontWeight->"Plain"],
 "\[Alpha]",
 StyleBox[" satisfying the following properties is called a ",
  FontWeight->"Plain"],
 "greatest lower bound",
 StyleBox[" or an ",
  FontWeight->"Plain"],
 StyleBox[ButtonBox["infimum",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Infimum"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[":  (1) ",
  FontWeight->"Plain"],
 "\[Alpha]",
 StyleBox[" is an lower bound of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and (2) if ",
  FontWeight->"Plain"],
 StyleBox["a",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is a lower bound of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", then ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[LessEqual]", "\[Alpha]"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" (equivalently, if ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "<", "a"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[", then ",
  FontWeight->"Plain"],
 StyleBox["a",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is not an lower bound of ",
  FontWeight->"Plain"],
 StyleBox["S",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[").  In this case, we write",
  FontWeight->"Plain"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"inf", " ", "S"}]}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[".  If an infimum of a set exists, it is unique, so we can speak of \
",
  FontWeight->"Plain"],
 "the ",
 StyleBox["infimum of a set.  ",
  FontWeight->"Plain"]
}], "Subsection",
 CellChangeTimes->{{3.428167000743286*^9, 3.42816707441921*^9}, {
   3.4281671472609043`*^9, 3.428167526743997*^9}, {3.4281681396709623`*^9, 
   3.42816816536309*^9}, 3.4301403486632147`*^9}],

Cell[TextData[{
 "Question: ",
 StyleBox[" Does the set ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"x", " ", ":", " ", 
     RowBox[{
      SuperscriptBox["x", "2"], "<", "2"}]}], "}"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[" have a sup and/or an inf?",
  FontWeight->"Plain"]
}], "Subsection",
 CellChangeTimes->{{3.428167716550541*^9, 3.428167746944509*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Completeness Axiom",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Completeness_axiom"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Completeness_axiom"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]]
}], "Section",
 CellChangeTimes->{{3.428081705571999*^9, 3.4280817091206083`*^9}, {
  3.5554072695083303`*^9, 3.555407269509384*^9}}],

Cell["The Completeness Axiom states:", "Text",
 CellChangeTimes->{{3.428167822155986*^9, 3.4281678328245792`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Completeness Axiom (or Least Upper Bound Property):",
  FontWeight->"Bold"],
 "  ",
 StyleBox["Every nonempty set of real numbers that is bounded above has a \
(real number) supremum.",
  FontWeight->"Plain"]
}], "Subsection",
 CellChangeTimes->{{3.428167839568647*^9, 3.428167869087728*^9}, {
  3.428168234615459*^9, 3.428168242459725*^9}}],

Cell[TextData[{
 "Question:  ",
 StyleBox["Why not also state that every nonempty set of real numbers that is \
bounded below has a (real number) infimum?",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.428167877585744*^9, 3.4281679007048264`*^9}}],

Cell[TextData[{
 "Remark:  ",
 StyleBox["Later on, we will see that the Completeness Axiom is equivalent to \
the statement that \"",
  FontWeight->"Plain"],
 StyleBox["every ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[ButtonBox["Cauchy sequence",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Cauchy_sequence"], None}],
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Plain",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["of real numbers converges (to a real number)",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["\".  Because of this equivalence, sometimes people take this \
second statement as the Completeness Axiom.  ",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.42816793814076*^9, 3.428168008358436*^9}, {
  3.428168066337919*^9, 3.4281680663466377`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "An \"Obvious\" Property:  the ",
 StyleBox[ButtonBox["Archimedean Property",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Archimedean_property"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Archimedean_property"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " of the Real Numbers and its equivalents"
}], "Section",
 CellChangeTimes->{{3.428081725745154*^9, 3.42808179300882*^9}, {
  3.555836919087392*^9, 3.555836919089094*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["TFSAE (The Following Statements are Equivalent).",
  FontWeight->"Bold"],
 "  Moreover, they are all true and any one of them can be referred to as \
\"the\" ",
 StyleBox[ButtonBox["Archimedean Property",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Archimedean_property"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Archimedean_property"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " of the Real Number system.\n\n\t",
 StyleBox["(i)  If ",
  FontWeight->"Plain"],
 StyleBox["a",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" and ",
  FontWeight->"Plain"],
 StyleBox["b",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" are positive real numbers, then there exists a positive integer ",
  
  FontWeight->"Plain"],
 StyleBox["n",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" such that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", " ", "a"}], ">", "b"}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox[".\n\t(ii)  The set of positive integers is not bounded above.\n\t\
(iii)  For each real number ",
  FontWeight->"Plain"],
 StyleBox["x",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", there exists an integer ",
  FontWeight->"Plain"],
 StyleBox["n ",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["such that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[LessEqual]", "x", "<", 
    RowBox[{"n", "+", "1"}]}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox[" (and there also exists an integer ",
  FontWeight->"Plain"],
 StyleBox["m",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" such that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "<", "x", "\[LessEqual]", 
    RowBox[{"m", "+", "1"}]}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox["...when ",
  FontWeight->"Plain"],
 StyleBox["x",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is not an integer, ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", "n"}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox["...when ",
  FontWeight->"Plain"],
 StyleBox["x",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is an integer, then ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", 
    RowBox[{"m", "+", "1"}]}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox[").  \n\t(iv)  For each positive real number ",
  FontWeight->"Plain"],
 StyleBox["x",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", there exists a positive integer ",
  FontWeight->"Plain"],
 StyleBox["n",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" such that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "n"], "<", "x"}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox[".",
  FontWeight->"Plain"]
}], "Subsection",
 CellChangeTimes->{{3.430143801996616*^9, 3.430143807342593*^9}, {
  3.430143876608037*^9, 3.430144139570546*^9}, {3.555836932775228*^9, 
  3.555836932780291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArchimedeanProperty", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"PointSize", "[", ".03", "]"}]}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "*", "a"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"PointSize", "[", ".02", "]"}]}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "*", "a"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"b", "+", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"b", "/", "a"}], "]"}], ",", "1"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.430144320856678*^9, 3.4301446953202133`*^9}, {
   3.430144732281015*^9, 3.430144890350422*^9}, 3.430145023626124*^9, {
   3.4301450646347723`*^9, 3.43014511388902*^9}, {3.430145259282629*^9, 
   3.430145278783208*^9}}],

Cell[BoxData[
 RowBox[{"ArchimedeanProperty", "[", 
  RowBox[{"3", ",", "70"}], "]"}]], "Input",
 CellChangeTimes->{{3.524391598417633*^9, 3.524391622213078*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Density:",
  FontWeight->"Bold"],
 "  Both the set of rational numbers and the set of irrational numbers is ",
 StyleBox[ButtonBox["dense",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Dense_set"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Dense_set"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " in \[DoubleStruckCapitalR]"
}], "Section",
 CellChangeTimes->{{3.4280818126852827`*^9, 3.428081836456739*^9}, {
   3.555836970891252*^9, 3.555836970892651*^9}, 3.682240890147852*^9}],

Cell[TextData[{
 "A set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[SubsetEqual]", "\[DoubleStruckCapitalR]"}], 
   TraditionalForm]]],
 " is said to be ",
 StyleBox[ButtonBox["dense",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Dense_set"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " in \[DoubleStruckCapitalR] if, for any point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalR]"}], 
   TraditionalForm]]],
 " and any ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", ">", "0"}], TraditionalForm]]],
 ", there exists a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", "A"}], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[NotEqual]", "x"}], TraditionalForm]]],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "-", "\[Epsilon]"}], ",", 
      RowBox[{"x", "+", "\[Epsilon]"}]}], ")"}]}], TraditionalForm]]],
 "  (that is, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", "\[Intersection]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "-", "\[Epsilon]"}], ",", 
       RowBox[{"x", "+", "\[Epsilon]"}]}], ")"}]}], "\[NotEqual]", 
    "\[EmptySet]"}], TraditionalForm]]],
 " for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", "\[DoubleStruckCapitalR]"}], 
   TraditionalForm]]],
 " and for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", ">", "0"}], TraditionalForm]]],
 ").  Theorem 1.18 essentially says that both \[DoubleStruckCapitalQ] and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalR]", "\\", "\[DoubleStruckCapitalQ]"}], 
   TraditionalForm]]],
 " are dense in \[DoubleStruckCapitalR].  (Think about this!) "
}], "Text",
 CellChangeTimes->{{3.430145320099029*^9, 3.430145348544544*^9}, {
  3.4301454075762453`*^9, 3.430145670842342*^9}, {3.4301457010342073`*^9, 
  3.43014570103496*^9}, {3.43014573954206*^9, 3.4301457626695023`*^9}, {
  3.4619226795940866`*^9, 3.461922688508821*^9}}],

Cell["\<\
An intuitive way to imagine this is to imagine that the rationals and \
irrationals are \"everywhere\" (without being every point) on the real number \
line.\
\>", "Text",
 CellChangeTimes->{{3.430145776494117*^9, 3.43014581437286*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Existence of Roots", "Section",
 CellChangeTimes->{{3.4301453130511007`*^9, 3.430145315929603*^9}}],

Cell[TextData[{
 "The Completeness axiom allows us to prove the existence of roots in \
\[DoubleStruckCapitalR], such as solutions of equations of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{" ", "n"}]], "=", "y"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", "\[DoubleStruckCapitalQ]"}], 
   TraditionalForm]]],
 " is not a perfect ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " power of some other rational number, in situations where we can \"expect\" \
the equation to have a real solution (as opposed to situations like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{" ", "2"}]], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]]],
 ").  An idea of the procedure for proving such a statement is given in the \
proof of Theorem 1.19.  We can also prove the existence of arbitrary roots of \
any number ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", even when it's is irrational.    "
}], "Text",
 CellChangeTimes->{{3.4301458291631947`*^9, 3.430146022661069*^9}, {
  3.4301460988559504`*^9, 3.430146158405937*^9}}],

Cell["\<\
The proof of Theorem 1.19 is probably your first really hard \"true \
analysis\" proof.  Study it carefully.  In particular, note how inequalities \
are used in \"crafty\" ways to prove the result.\
\>", "Text",
 CellChangeTimes->{{3.43014602818816*^9, 3.430146077349229*^9}}]
}, Closed]],

Cell["Existence of Decimal Approximations", "Section",
 CellChangeTimes->{{3.430146288554476*^9, 3.4301462935410852`*^9}}],

Cell["Cardinality of Sets", "Section",
 CellChangeTimes->{{3.430146319861733*^9, 3.4301463240928917`*^9}}],

Cell["Basic General Theorems", "Section",
 CellChangeTimes->{{3.4301463372058973`*^9, 3.430146341100925*^9}}],

Cell["\[DoubleStruckCapitalQ] is countably infinite ", "Section",
 CellChangeTimes->{{3.430146348090453*^9, 3.43014636943021*^9}}],

Cell["\[DoubleStruckCapitalR] is uncountable", "Section",
 CellChangeTimes->{{3.430146381723929*^9, 3.430146391846162*^9}}],

Cell[CellGroupData[{

Cell["Existence of Roots", "Section",
 CellChangeTimes->{{3.4301453130511007`*^9, 3.430145315929603*^9}}],

Cell[TextData[{
 "The Completeness axiom allows us to prove the existence of roots in \
\[DoubleStruckCapitalR], such as solutions of equations of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{" ", "n"}]], "=", "y"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", "\[DoubleStruckCapitalQ]"}], 
   TraditionalForm]]],
 " is not a perfect ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " power of some other rational number, in situations where we can \"expect\" \
the equation to have a real solution (as opposed to situations like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{" ", "2"}]], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]]],
 ").  An idea of the procedure for proving such a statement is given in the \
proof of Theorem 1.19.  We can also prove the existence of arbitrary roots of \
any number ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", even when it's is irrational.    "
}], "Text",
 CellChangeTimes->{{3.4301458291631947`*^9, 3.430146022661069*^9}, {
  3.4301460988559504`*^9, 3.430146158405937*^9}}],

Cell["\<\
The proof of Theorem 1.19 is probably your first really hard \"true \
analysis\" proof.  Study it carefully.  In particular, note how inequalities \
are used in \"crafty\" ways to prove the result.\
\>", "Text",
 CellChangeTimes->{{3.43014602818816*^9, 3.430146077349229*^9}}]
}, Closed]],

Cell["Existence of Decimal Approximations", "Section",
 CellChangeTimes->{{3.430146288554476*^9, 3.4301462935410852`*^9}}],

Cell[CellGroupData[{

Cell["Extensions:  Algebraic and Transcendental Numbers", "Section",
 CellChangeTimes->{{3.428171695794812*^9, 3.4281717010245533`*^9}, {
   3.428172153308819*^9, 3.428172157273191*^9}, 3.682240915119771*^9}],

Cell[TextData[{
 "The set of (real)",
 StyleBox[" ",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[ButtonBox["algebraic numbers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Algebraic_numbers"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " can be defined as those real numbers which are roots to some nonzero \
polynomial with integer coefficients.  Those real numbers which are not \
algebraic are called ",
 StyleBox[ButtonBox["transcendental",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Transcendental_number"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " (real numbers).  The easiest way to prove the existence of transcendental \
numbers is to prove that the set of algebraic numbers is ",
 StyleBox[ButtonBox["countable",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Countable"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 ", whereas the set of all real numbers is ",
 StyleBox[ButtonBox["uncountable",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Uncountable_set"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 "  It is harder to prove that particular numbers are transcendental.  \
However two of our favorite numbers, \[ExponentialE] and \[Pi], can be shown \
to be transcendental by the ",
 StyleBox[ButtonBox["Lindemann-Weierstrass Theorem",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Lindemann\[AHat]\.80\.93Weierstrass_\
theorem"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 ".      "
}], "Text",
 CellChangeTimes->{{3.428171710174588*^9, 3.428171747992403*^9}, {
  3.428171813884622*^9, 3.42817183364987*^9}, {3.428171870017227*^9, 
  3.4281719102507057`*^9}, {3.4281719437393847`*^9, 3.4281721447612867`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Extensions:  Weird Formulas Involving ",
 StyleBox[ButtonBox["\[Pi]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Pi"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Pi"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]]
}], "Section",
 CellChangeTimes->{{3.428335434591888*^9, 3.428335444294211*^9}, {
   3.555407526646659*^9, 3.5554075266478662`*^9}, 3.68224091440744*^9}],

Cell["\<\
There are hundreds and perhaps thousands of weird formulas out there that \
mysteriously involve the number \[Pi], for seemingly no apparent \"deep\" \
reason.  Evaluate the following cells to see some.  \
\>", "Text",
 CellChangeTimes->{{3.428335449727057*^9, 3.428335508722063*^9}, {
  3.4283367884703913`*^9, 3.428336790237548*^9}}],

Cell[TextData[{
 "Some sums generated by ",
 StyleBox[ButtonBox["Euler",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Euler"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 ":"
}], "Text",
 CellChangeTimes->{{3.428336711562538*^9, 3.428336738813555*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   RowBox[{"k", "^", "2"}]]}]], "Input",
 CellChangeTimes->{{3.4283354847644444`*^9, 3.428335495925181*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   RowBox[{"k", "^", "4"}]]}]], "Input",
 CellChangeTimes->{{3.4283354847644444`*^9, 3.4283355215738583`*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   RowBox[{"k", "^", "6"}]]}]], "Input",
 CellChangeTimes->{{3.4283354847644444`*^9, 3.428335530774296*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "\[Infinity]"], 
    FractionBox["1", 
     RowBox[{"k", "^", 
      RowBox[{"(", 
       RowBox[{"2", "s"}], ")"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.428336867102005*^9, 3.428336892203979*^9}, {
  3.428336956644099*^9, 3.428336980505559*^9}}],

Cell[TextData[{
 "Oddly enough, nobody knows the exact values of these types of sums when the \
power of each denominator is odd...so they give it a cool sounding \
name...like \[OpenCurlyDoubleQuote]",
 StyleBox[ButtonBox["zeta",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Riemann_zeta_function"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Riemann_zeta_function"],
  FontWeight->"Bold",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 "\[CloseCurlyDoubleQuote] (and can, of course, approximate them)...the \
Riemann Zeta Function is actually one of the most important functions in all \
of mathematics...it\[CloseCurlyQuote]s related to the most important unsolved \
problem in math...the ",
 StyleBox[ButtonBox["Riemann hypothesis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Riemann_hypothesis"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Riemann_hypothesis"],
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.523786956038875*^9, 3.523787003345025*^9}, {
  3.523787092135973*^9, 3.5237871539969997`*^9}, {3.5237871889321337`*^9, 
  3.523787188932941*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   RowBox[{"k", "^", "3"}]]}]], "Input",
 CellChangeTimes->{{3.4283354847644444`*^9, 3.428335530774296*^9}, 
   3.5237869477606077`*^9}],

Cell[BoxData[
 RowBox[{"%", "//", "N"}]], "Input",
 CellChangeTimes->{{3.523787006492284*^9, 3.523787007049124*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   RowBox[{"k", "^", "5"}]]}]], "Input",
 CellChangeTimes->{{3.4283354847644444`*^9, 3.428335530774296*^9}, 
   3.5237869477606077`*^9, 3.52378719839471*^9}],

Cell[BoxData[
 RowBox[{"%", "//", "N"}]], "Input",
 CellChangeTimes->{{3.523787006492284*^9, 3.523787007049124*^9}}],

Cell[TextData[{
 "A sum used by ",
 StyleBox[ButtonBox["Fourier ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Joseph_Fourier"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 "and others:"
}], "Text",
 CellChangeTimes->{{3.428336762356496*^9, 3.428336779884521*^9}, {
  3.428337109970159*^9, 3.4283371175997267`*^9}, {3.428337345755378*^9, 
  3.4283373461358223`*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"k", "-", "1"}], ")"}]}], 
   RowBox[{
    RowBox[{"2", "k"}], "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.428335566163*^9, 3.4283355869623117`*^9}}],

Cell[TextData[{
 "A formula related to the ",
 StyleBox[ButtonBox["Normal distribution",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Normal_distribution"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 ":"
}], "Text",
 CellChangeTimes->{{3.428336656665929*^9, 3.428336669552596*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     RowBox[{"x", "^", "2"}]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.428335609413562*^9, 3.4283356329236193`*^9}}],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["Wallis product",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Wallis_product"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 ":  "
}], "Text",
 CellChangeTimes->{{3.428336617390911*^9, 3.428336628117344*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Product]", 
   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{"4", 
    RowBox[{"k", "^", "2"}]}], 
   RowBox[{
    RowBox[{"4", 
     RowBox[{"k", "^", "2"}]}], "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.4283363944237833`*^9, 3.428336419046834*^9}, {
  3.428336472919384*^9, 3.428336484942072*^9}}],

Cell["\<\
A couple that actually involve some trigonometry!  (So are these mysterious \
or not?)\
\>", "Text",
 CellChangeTimes->{{3.428336822677622*^9, 3.4283368370850782`*^9}, {
  3.428337125051497*^9, 3.428337133400085*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], "x"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.4283368032057056`*^9, 3.428336810315833*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"16", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"1", "/", "5"}], "]"}]}], "-", 
   RowBox[{"4", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"1", "/", "239"}], "]"}]}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.42833714020555*^9, 3.428337171825077*^9}, {
  3.429610943567045*^9, 3.429610947226987*^9}, {3.523787239714468*^9, 
  3.523787247161521*^9}}],

Cell[TextData[{
 "This last one comes from ",
 StyleBox[ButtonBox["Machin",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/John_Machin"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 "."
}], "Text",
 CellChangeTimes->{{3.4283371930038757`*^9, 3.428337210508307*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Extensions:  Fun with Finite Fields (i.e. Algebraic Structures)\
\>", "Section",
 CellChangeTimes->{{3.428338577892303*^9, 3.428338586190823*^9}, {
   3.4283398970487757`*^9, 3.4283399027493258`*^9}, 3.619339370734774*^9, 
   3.682240913671564*^9}],

Cell[TextData[{
 "Perhaps you have a yearning to re-live your time with finite fields from \
algebraic structures.  Typically such fields were constructed as ",
 StyleBox[ButtonBox["factor (or \"quotient\") rings",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Quotient_ring"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalZ]", "p"], "[", "x", "]"}], "/", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"q", "(", "x", ")"}], "\[RightAngleBracket]"}]}], 
   TraditionalForm]]],
 ", where ",
 StyleBox["p",
  FontSlant->"Italic"],
 " was prime and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "(", "x", ")"}], TraditionalForm]]],
 " was some polynomial which was ",
 StyleBox[ButtonBox["irreducible over",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Irreducible_polynomial"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "p"], TraditionalForm]]],
 ".    "
}], "Text",
 CellChangeTimes->{{3.4283385903480167`*^9, 3.428338624302828*^9}, {
  3.428338655350967*^9, 3.428338717702734*^9}, {3.428338768062252*^9, 
  3.4283387925194063`*^9}, {3.4283389037715607`*^9, 3.4283389831300087`*^9}}],

Cell[TextData[{
 "For example, the cubic polynomial ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], "+", "x", "+", "1"}], TraditionalForm]]],
 " is easily seen to be irreducible over ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "2"], TraditionalForm]]],
 ".  This guarantees that the factor ring  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalZ]", "2"], "[", "x", "]"}], "/", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      SuperscriptBox["x", "3"], "+", "x", "+", "1"}], 
     "\[RightAngleBracket]"}]}], TraditionalForm]]],
 " will be a field.  In fact, if we let ",
 StyleBox["I",
  FontSlant->"Italic"],
 " be the ideal ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "=", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      SuperscriptBox["x", "3"], "+", "x", "+", "1"}], 
     "\[RightAngleBracket]"}]}], TraditionalForm]]],
 ", then we can say that ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     FormBox[
      RowBox[{
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalZ]", "2"], "[", "x", "]"}], "/", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         SuperscriptBox["x", "3"], "+", "1"}], "\[RightAngleBracket]"}]}],
      TraditionalForm], "=", " ", 
     FormBox[
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[DoubleStruckCapitalZ]", "2"], "[", "x", "]"}], "/", 
        "I"}], "=", 
       RowBox[{"{", 
        RowBox[{"I", ",", 
         RowBox[{"1", "+", "I"}], ",", 
         RowBox[{"x", "+", "I"}], ",", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", "I"}], ",", 
         RowBox[{"x", "+", "1", "+", "I"}], ",", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", "1", "+", "I"}], ",", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", "x", "+", "I"}], ",", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", "x", "+", "1", "+", "I"}]}], "}"}]}],
      
      TraditionalForm]}]}], TraditionalForm]]],
 ", an 8-element field.  Calculations in this field are done by reducing \
coefficients modulo 2 and reducing the degree of the polynomial modulo ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], "+", "x", "+", "1"}], TraditionalForm]]],
 ".      "
}], "Text",
 CellChangeTimes->{{3.428338840316717*^9, 3.428338869718766*^9}, {
  3.428338919107606*^9, 3.428338932191942*^9}, {3.428339003290636*^9, 
  3.428339240239132*^9}, {3.428339283781447*^9, 3.428339307904079*^9}}],

Cell[TextData[{
 "For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", "x", "+", "1", "+", "I"}], ")"}], "2"], 
    "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "3"], "+", 
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["x", "3"], "+", 
      SuperscriptBox["x", "2"], "+", "x", "+", 
      SuperscriptBox["x", "2"], "+", "x", "+", "1", "+", "I"}], "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "4"], "+", 
       RowBox[{"2", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"3", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"2", "x"}], "+", "1", "+", "I"}], "=", 
      RowBox[{
       SuperscriptBox["x", "4"], "+", 
       SuperscriptBox["x", "2"], "+", "1", "+", "I"}]}]}]}], 
   TraditionalForm]]],
 ".  The command ",
 StyleBox[ButtonBox["PolynomialMod",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/mathematica/ref/PolynomialMod.html"], 
    None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " can illustrate this: "
}], "Text",
 CellChangeTimes->{{3.428339348042324*^9, 3.428339543570237*^9}}],

Cell[BoxData[
 RowBox[{"PolynomialMod", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", "x", "+", "1"}], ")"}], "^", "2"}], ",", 
   "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.428339476585478*^9, 3.428339484972733*^9}}],

Cell[TextData[{
 "We also note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "2"], "+", "1"}], "=", 
     RowBox[{
      RowBox[{"x", "(", 
       RowBox[{
        SuperscriptBox["x", "3"], "+", "x", "+", "1"}], ")"}], "+", "x", "+", 
      "1"}]}], ",", " ", 
    RowBox[{"mod", "(", "2", ")"}]}], TraditionalForm]]],
 " so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", "x", "+", "1", "+", "I"}], ")"}], "2"], 
    "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "4"], "+", 
      SuperscriptBox["x", "2"], "+", "1", "+", "I"}], "=", 
     RowBox[{"x", "+", "1", "+", "I"}]}]}], TraditionalForm]]],
 ".  The following combination of ",
 StyleBox[ButtonBox["PolynomialMod",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/mathematica/ref/PolynomialMod.html"], 
    None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " commands will verify this for us.  "
}], "Text",
 CellChangeTimes->{{3.428339555505227*^9, 3.4283395865502987`*^9}, {
   3.428339675601556*^9, 3.428339764551025*^9}, {3.4283398257531643`*^9, 
   3.428339859014638*^9}, 3.555407575468895*^9}],

Cell[BoxData[
 RowBox[{"PolynomialMod", "[", 
  RowBox[{
   RowBox[{"PolynomialMod", "[", 
    RowBox[{
     RowBox[{"PolynomialMod", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", "x", "+", "1"}], ")"}], "^", "2"}], 
       ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "+", "x", "+", "1"}]}], "]"}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.428338823672821*^9, 3.428338829176162*^9}, {
  3.428339315175166*^9, 3.428339338176941*^9}, {3.4283397964142733`*^9, 
  3.428339815439219*^9}, {3.428339866476046*^9, 3.428339877060451*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Extensions:  A Generalization:  ",
 StyleBox[ButtonBox["Open Sets",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Open_set"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " and ",
 StyleBox[ButtonBox["Closed Sets",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Closed_set"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " in \[DoubleStruckCapitalR]"
}], "Section",
 CellChangeTimes->{{3.428081860531003*^9, 3.4280818669769363`*^9}, {
   3.4283419910377197`*^9, 3.428342017378517*^9}, {3.429971669835734*^9, 
   3.429971709585517*^9}, 3.619339385428771*^9, 3.682240913083186*^9}],

Cell[TextData[{
 "In the real number system \[DoubleStruckCapitalR], we can define an ",
 StyleBox[ButtonBox["open set",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{"ttp:", "", "en.wikipedia.org", "wiki"}, "Open_set", 
     CharacterEncoding -> "UTF-8"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontSlant->"Italic"],
 "in two equivalent ways.  (1) As a union of an arbitrary collection of open \
intervals, or (2) as any set ",
 StyleBox["U",
  FontSlant->"Italic"],
 " with the property that, given ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", "U"}], TraditionalForm]]],
 ", there exists a number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", ">", "0"}], TraditionalForm]]],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "-", "\[Epsilon]"}], ",", 
      RowBox[{"x", "+", "\[Epsilon]"}]}], ")"}], "\[Subset]", "U"}], 
   TraditionalForm]]],
 ".  Note:  you should spend time thinking about why closed intervals don't \
satisfy either of these two properties.  "
}], "Text",
 CellChangeTimes->{{3.4299717172119217`*^9, 3.4299719663897667`*^9}}],

Cell[TextData[{
 StyleBox[ButtonBox["Closed sets",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Closed_set"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " can be defined in a number of equivalent ways also.  (1) a set ",
 StyleBox["K",
  FontSlant->"Italic"],
 " is closed if and only if its complement ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalR]", "\\", "K"}], TraditionalForm]]],
 " is an open set, or (2) as any set ",
 StyleBox["K",
  FontSlant->"Italic"],
 " with the property: given any ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", "\[DoubleStruckCapitalR]", " "}], 
   TraditionalForm]]],
 "with the property that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"y", "-", "\[Epsilon]"}], ",", 
       RowBox[{"y", "+", "\[Epsilon]"}]}], ")"}], "\[Intersection]", "K"}], 
    "\[NotEqual]", "\[EmptySet]"}], TraditionalForm]]],
 " for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", ">", "0"}], TraditionalForm]]],
 ", it follows that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", "K"}], TraditionalForm]]],
 " (think about why this is equivalent to saying that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalR]", "\\", "K"}], TraditionalForm]]],
 " is an open set).   "
}], "Text",
 CellChangeTimes->{{3.42997197587037*^9, 3.42997229421253*^9}, {
  3.429972324687113*^9, 3.429972324688025*^9}}],

Cell[TextData[{
 "These notions generalize to higher dimensions and other kinds of \"",
 StyleBox[ButtonBox["topological spaces",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Topological_space"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 "\".  The key thing about these concepts is that they help us define the \
notion of ",
 StyleBox[ButtonBox["continuity (of a function)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Continuous_function"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Continuous_function"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " in very general situations."
}], "Text",
 CellChangeTimes->{{3.42997234149184*^9, 3.429972388387157*^9}, {
  3.5558370732399607`*^9, 3.555837113951273*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Extensions:  Complex Numbers", "Section",
 CellChangeTimes->{{3.430146460340775*^9, 3.430146462500906*^9}, {
  3.430432126444892*^9, 3.430432128663142*^9}}],

Cell[TextData[{
 "You may have had a teacher who told you something like this:  \"imaginary \
numbers were created in order to allow us to solve equations like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{" ", "2"}]], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]]],
 ".\"  This statement, while having a grain of truth, is not really getting \
at the full truth of the story.  You'll find out more about the whole story \
when you read about the crazy Italian genius ",
 StyleBox[ButtonBox["Gerolamo Cardano",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Gerolamo_cardano"], None}],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " in the book ",
 ButtonBox["Journey through Genius",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.amazon.com/Journey-through-Genius-Theorems-Mathematics/dp/\
014014739X/ref=pd_bbs_sr_1?ie=UTF8&s=books&qid=1221157989&sr=8-1"], None}],
 " in the class Foundations of Mathematics in Interim.  "
}], "Text",
 CellChangeTimes->{{3.4301464672048273`*^9, 3.430146559780957*^9}, {
  3.430146648961068*^9, 3.4301467575687103`*^9}, {3.430146812501227*^9, 
  3.430146817671913*^9}}],

Cell[TextData[{
 "Here we just briefly take a bit of time to intrigue you about ",
 ButtonBox["imaginary",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Imaginary_number"], None}],
 " and ",
 ButtonBox["complex",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Complex_number"], None}],
 " numbers.  We define the ",
 ButtonBox["imaginary unit",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Imaginary_unit"], None}],
 " ",
 StyleBox["i",
  FontSlant->"Italic"],
 " to be a number that satisfies the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["i", 
     RowBox[{" ", "2"}]], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]]],
 ".  A complex number is a number of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "+", 
    RowBox[{"b", " ", "i"}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ",", 
    RowBox[{"b", "\[Element]", "\[DoubleStruckCapitalR]"}]}], 
   TraditionalForm]]],
 ".  In this last expression, the real number ",
 StyleBox["a",
  FontSlant->"Italic"],
 " is called the real part of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "+", 
    RowBox[{"b", " ", "i"}]}], TraditionalForm]]],
 " and the real number ",
 StyleBox["b",
  FontSlant->"Italic"],
 " is called the imaginary part of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "+", 
    RowBox[{"b", " ", "i"}]}], TraditionalForm]]],
 ".  We write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{"Re", "(", 
     RowBox[{"a", "+", 
      RowBox[{"b", " ", "i"}]}], ")"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{"Im", "(", 
     RowBox[{"a", "+", 
      RowBox[{"b", " ", "i"}]}], ")"}]}], TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.430146837614558*^9, 3.430146989632901*^9}, {
  3.430149729983759*^9, 3.430149769174384*^9}}],

Cell[TextData[{
 "We add/subtract complex numbers by adding/subtracting their corresponding \
real and imaginary parts like this:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", 
       RowBox[{"b", " ", "i"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"c", "+", 
       RowBox[{"d", " ", "i"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", "c"}], ")"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "+", "d"}], ")"}], "i"}]}]}], TraditionalForm]]],
 ".  We multiply two complex numbers by imagining (no pun intended) that they \
are binomials and FOILing them:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", 
       RowBox[{"b", " ", "i"}]}], ")"}], "\[CenterDot]", 
     RowBox[{"(", 
      RowBox[{"c", "+", 
       RowBox[{"d", " ", "i"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", "c"}], "+", 
      RowBox[{"a", " ", "d", " ", "i"}], "+", 
      RowBox[{"b", " ", "c", " ", "i"}], "+", 
      RowBox[{"b", " ", "d", " ", 
       SuperscriptBox["i", 
        RowBox[{" ", "2"}]]}]}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", "c"}], "-", 
        RowBox[{"b", " ", "d"}]}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", "d"}], "+", 
         RowBox[{"b", " ", "c"}]}], ")"}], "i"}]}]}]}], TraditionalForm]]],
 ", where we have use the fact that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["i", 
     RowBox[{" ", "2"}]], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]]],
 " to write our answer in the standard form."
}], "Text",
 CellChangeTimes->{{3.430146995103759*^9, 3.430147143824039*^9}}],

Cell[TextData[{
 "With this definition of complex addition and multiplication, it can be \
shown that the set of complex numbers \[DoubleStruckCapitalC] becomes a ",
 ButtonBox["field",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Field_(mathematics)"], None}],
 ".  The multiplicative inverse of the complex number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "+", 
    RowBox[{"b", " ", "i"}]}], TraditionalForm]]],
 " can be shown to be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "+", 
       RowBox[{"b", " ", "i"}]}], ")"}], 
     RowBox[{"-", "1"}]], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"a", "+", 
       RowBox[{"b", " ", "i"}]}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"a", "-", 
        RowBox[{"b", " ", "i"}]}], 
       RowBox[{
        SuperscriptBox["a", 
         RowBox[{" ", "2"}]], "+", 
        SuperscriptBox["b", 
         RowBox[{" ", "2"}]]}]], "=", 
      RowBox[{
       FractionBox["a", 
        RowBox[{
         SuperscriptBox["a", 
          RowBox[{" ", "2"}]], "+", 
         SuperscriptBox["b", 
          RowBox[{" ", "2"}]]}]], "-", 
       RowBox[{
        FractionBox["b", 
         RowBox[{
          SuperscriptBox["a", 
           RowBox[{" ", "2"}]], "+", 
          SuperscriptBox["b", 
           RowBox[{" ", "2"}]]}]], "i"}]}]}]}]}], TraditionalForm]]],
 ".  Because of this, complex division can be defined by the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"a", "+", 
      RowBox[{"b", " ", "i"}]}], 
     RowBox[{"c", "+", 
      RowBox[{"d", " ", "i"}]}]], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", "i"}]}], ")"}], "\[CenterDot]", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["c", 
         RowBox[{
          SuperscriptBox["c", 
           RowBox[{" ", "2"}]], "+", 
          SuperscriptBox["d", 
           RowBox[{" ", "2"}]]}]], "-", 
        RowBox[{
         FractionBox["d", 
          RowBox[{
           SuperscriptBox["c", 
            RowBox[{" ", "2"}]], "+", 
           SuperscriptBox["d", 
            RowBox[{" ", "2"}]]}]], "i"}]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "c"}], 
         RowBox[{
          SuperscriptBox["c", 
           RowBox[{" ", "2"}]], "+", 
          SuperscriptBox["d", 
           RowBox[{" ", "2"}]]}]], "+", 
        FractionBox[
         RowBox[{"b", " ", "d"}], 
         RowBox[{
          SuperscriptBox["c", 
           RowBox[{" ", "2"}]], "+", 
          SuperscriptBox["d", 
           RowBox[{" ", "2"}]]}]]}], ")"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"b", " ", "c"}], 
          RowBox[{
           SuperscriptBox["c", 
            RowBox[{" ", "2"}]], "+", 
           SuperscriptBox["d", 
            RowBox[{" ", "2"}]]}]], "-", 
         FractionBox[
          RowBox[{"a", " ", "d"}], 
          RowBox[{
           SuperscriptBox["c", 
            RowBox[{" ", "2"}]], "+", 
           SuperscriptBox["d", 
            RowBox[{" ", "2"}]]}]]}], ")"}], "i"}]}]}]}], TraditionalForm]]],
 ".  "
}], "Text",
 CellChangeTimes->{{3.430147154082263*^9, 3.4301473677199593`*^9}, {
  3.430149967306127*^9, 3.430149967318585*^9}}],

Cell[TextData[{
 "Whether complex numbers exist or not in a ",
 ButtonBox["metaphysical",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Metaphysics"], None}],
 " sense is irrelevant now.  We have created a new ",
 ButtonBox["field",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Field_(mathematics)"], None}],
 " and we can play with it to our heart's delight.  Of course, that doesn't \
mean that what we're doing here necessarily has any relevance to the real \
world, but suprisingly, it ",
 ButtonBox["does",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathforum.org/library/drmath/view/53851.html"], None}],
 ".    "
}], "Text",
 CellChangeTimes->{{3.430149786743157*^9, 3.430149865412952*^9}, {
  3.430149912696135*^9, 3.430149942038663*^9}, {3.4301499743440332`*^9, 
  3.430149974344754*^9}, {3.430150010296624*^9, 3.4301500103095293`*^9}, {
  3.430150143109359*^9, 3.430150155896985*^9}}],

Cell[TextData[{
 "We can verify these things with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses a capital I to represent the imaginary unit ",
 StyleBox["i",
  FontSlant->"Italic"],
 ".   The command ComplexExpand is helpful. "
}], "Text",
 CellChangeTimes->{{3.430147381416933*^9, 3.4301474194723387`*^9}}],

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "+", 
     RowBox[{"b", "*", "I"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"d", "*", "I"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.430147421090706*^9, 3.4301474360444803`*^9}}],

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "+", 
     RowBox[{"b", "*", "I"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"d", "*", "I"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.430147441905212*^9, 3.430147451829129*^9}}],

Cell[TextData[{
 "What's most interesting about the basic arithmetic of complex numbers is \
its geometric interpretation.  This arises from the fact that complex numbers \
can be represented in polar form because of Euler's formula.  Euler's \
formula, which arises from the use of Taylor series, is the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{" ", 
      RowBox[{"i", " ", "\[Theta]"}]}]], "=", 
    RowBox[{
     RowBox[{"cos", "(", "\[Theta]", ")"}], "+", 
     RowBox[{"i", " ", 
      RowBox[{"sin", "(", "\[Theta]", ")"}]}]}]}], TraditionalForm]]],
 " (as an aside, this leads to the most beautiful equation in the universe: \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{" ", 
       RowBox[{"i", " ", "\[Pi]"}]}]], "+", "1"}], "=", "0"}], 
   TraditionalForm]]],
 ").  If we represent a complex number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "+", 
    RowBox[{"i", " ", "y"}]}], TraditionalForm]]],
 " by a point in the plane given in rectangular coordinates as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]],
 ", then we can use trigonometry to say that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"r", " ", 
     RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"r", " ", 
     RowBox[{"sin", "(", "\[Theta]", ")"}]}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{" ", "2"}]], "+", 
      SuperscriptBox["y", 
       RowBox[{" ", "2"}]]}]]}], TraditionalForm]]],
 " is the distance between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]],
 " and the origin and ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 " is the angle that the ray from the origin to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]],
 " makes with the positive ",
 StyleBox["x",
  FontSlant->"Italic"],
 "-axis.  Because of this, we can write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "+", 
     RowBox[{"i", " ", "y"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"cos", "(", "\[Theta]", ")"}]}], "+", 
      RowBox[{"i", " ", "r", " ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}]}]}], "=", 
     RowBox[{
      RowBox[{"r", "(", 
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], "+", 
        RowBox[{"i", " ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}]}]}], ")"}], "=", 
      RowBox[{"r", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{" ", 
         RowBox[{"i", " ", "\[Theta]"}]}]]}]}]}]}], TraditionalForm]]],
 " and we say that this last expression is the polar form of the complex \
number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "+", 
    RowBox[{"i", " ", "y"}]}], TraditionalForm]]],
 ".  The non-negative number ",
 StyleBox["r",
  FontSlant->"Italic"],
 " is called the modulus of the complex number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "+", 
    RowBox[{"i", " ", "y"}]}], TraditionalForm]]],
 " and the angle ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 " is called the argument of the complex number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "+", 
    RowBox[{"i", " ", "y"}]}], TraditionalForm]]],
 ".  "
}], "Text",
 CellChangeTimes->{{3.430147475120573*^9, 3.4301475152239923`*^9}, {
  3.43014756687915*^9, 3.4301477969664087`*^9}, {3.430147828053116*^9, 
  3.430147901984084*^9}, {3.430148174646772*^9, 3.430148249357213*^9}}],

Cell["\<\
With all these ideas under our belts, the following general principles can be \
demonstrated.\
\>", "Text",
 CellChangeTimes->{{3.4301479143718767`*^9, 3.43014794077783*^9}}],

Cell[TextData[{
 StyleBox["When you add or subtract two complex numbers, the \
addition/subtraction can be represented visually in the complex ",
  FontWeight->"Plain"],
 StyleBox["xy",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["-plane (where ",
  FontWeight->"Plain"],
 StyleBox["x",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is the \"real axis\" and ",
  FontWeight->"Plain"],
 StyleBox["y",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" is the \"imaginary axis\") as vector addition/subtraction, once \
we make the association of the complex number ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "+", 
    RowBox[{"i", " ", "y"}]}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox[" with the vector ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox[" (thought of as an arrow to the point ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]], "None",
  FontWeight->"Plain"],
 StyleBox[")",
  FontWeight->"Plain"]
}], "Subsection",
 CellChangeTimes->{{3.430147946900538*^9, 3.4301480219883013`*^9}, {
  3.4301480997878532`*^9, 3.43014812963244*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["Really ",
  FontSlant->"Italic"],
 "Cool Principle: ",
 StyleBox[" when you multiply two complex numbers, you multiply their modulii \
and add their arguments.  When you divide two complex number, you divide \
their modulii and subtract their arguments (in the appropriate order).",
  FontWeight->"Plain"]
}], "Subsection",
 CellChangeTimes->{{3.43014814023411*^9, 3.430148167574053*^9}, {
  3.4301482277834053`*^9, 3.430148288254105*^9}}],

Cell[TextData[{
 "We can illustrate these principles with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.430148298894821*^9, 3.430148305997994*^9}}],

Cell[CellGroupData[{

Cell["Addition:", "Subsubsection",
 CellChangeTimes->{{3.4301491555138483`*^9, 3.43014915955868*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "p"}], "}"}], "]"}]}], "}"}],
       "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "q"}], "}"}], "]"}]}], "}"}],
       "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{"p", "+", "q"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"p", "+", "q"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Purple", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"p", "+", "q"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"q", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"q", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"PointSize", "[", ".025", "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Real\>\"", ",", "\"\<Imaginary\>\""}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", "Locator"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.430148802163827*^9, 3.430148908818781*^9}, {
  3.430148949336567*^9, 3.430149007599987*^9}, {3.4301490402894087`*^9, 
  3.430149052632476*^9}, {3.430149091409647*^9, 3.4301491251377974`*^9}, {
  3.430149583368585*^9, 3.430149607229763*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiplication:", "Subsubsection",
 CellChangeTimes->{{3.4301491670174627`*^9, 3.4301491692835207`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "p"}], "}"}], "]"}]}], "}"}],
       "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "q"}], "}"}], "]"}]}], "}"}],
       "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Purple", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"q", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"q", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"q", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"q", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}]}], "}"}], "]"}]}],
        "}"}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "*", 
            RowBox[{"q", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{"q", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "*", 
            RowBox[{"q", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{"q", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"PointSize", "[", ".025", "]"}]}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Real\>\"", ",", "\"\<Imaginary\>\""}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", "Locator"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", "Locator"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.430148802163827*^9, 3.430148908818781*^9}, {
  3.430148949336567*^9, 3.430149007599987*^9}, {3.4301490402894087`*^9, 
  3.430149052632476*^9}, {3.430149091409647*^9, 3.4301491251377974`*^9}, {
  3.4301491899482822`*^9, 3.430149208276703*^9}, {3.430149244168624*^9, 
  3.430149283585636*^9}, {3.4301493252776003`*^9, 3.4301493594666643`*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Extensions:  Power sets and the ultimate paradox", "Section",
 CellChangeTimes->{{3.430146415875422*^9, 3.430146432676895*^9}}],

Cell[TextData[{
 "Recall that sets can be just described as collections.  They can be \
collections of anything:  numbers, people, numbers and people, animals, \
atoms, dust, stars,...even collections of sets (so the elements of such a set \
would also be sets).  Given any set ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 ", we can always create the power set of ",
 StyleBox["S",
  FontSlant->"Italic"],
 ", denoted by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", "S", ")"}], TraditionalForm]]],
 ", and defined to be the set of all subsets of ",
 StyleBox["S",
  FontSlant->"Italic"],
 ", including the empty set \[EmptySet] and the whole set ",
 StyleBox["S",
  FontSlant->"Italic"],
 ".  For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], 
   TraditionalForm]]],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[ScriptCapitalP]", "(", "S", ")"}], "=", 
    RowBox[{"{", 
     RowBox[{"\[EmptySet]", ",", 
      RowBox[{"{", "a", "}"}], ",", 
      RowBox[{"{", "b", "}"}], ",", 
      RowBox[{"{", "c", "}"}], ",", 
      RowBox[{"{", "d", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "c"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "d"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "d"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "d"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "d"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "c", ",", "d"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "c", ",", "d"}], "}"}], ",", "S"}], "}"}]}], 
   TraditionalForm]]],
 ".  In general, as we saw in the preliminary handout, if ",
 StyleBox["S",
  FontSlant->"Italic"],
 " has ",
 StyleBox["n",
  FontSlant->"Italic"],
 " elements, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", "S", ")"}], TraditionalForm]]],
 " has ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    RowBox[{" ", "n"}]], TraditionalForm]]],
 " elements.  Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", "S", ")"}], TraditionalForm]]],
 " is itself a set, we can iterate this process and create its power set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", 
    RowBox[{"\[ScriptCapitalP]", "(", "S", ")"}], ")"}], TraditionalForm]]],
 ".  If ",
 StyleBox["S",
  FontSlant->"Italic"],
 " has ",
 StyleBox["n",
  FontSlant->"Italic"],
 " elements, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", 
    RowBox[{"\[ScriptCapitalP]", "(", "S", ")"}], ")"}], TraditionalForm]]],
 " would have ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    SuperscriptBox["2", "n"]], TraditionalForm]]],
 " elements.  For this set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], 
   TraditionalForm]]],
 " above, this would mean ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", 
    RowBox[{"\[ScriptCapitalP]", "(", "S", ")"}], ")"}], TraditionalForm]]],
 " would have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", 
     SuperscriptBox["2", "4"]], "=", 
    RowBox[{
     SuperscriptBox["2", "16"], "=", "65536"}]}], TraditionalForm]]],
 " elements.  "
}], "Text",
 CellChangeTimes->{{3.4301502097386093`*^9, 3.430150282117004*^9}, {
   3.430150354278615*^9, 3.430150416731802*^9}, {3.430150451565104*^9, 
   3.430150641052685*^9}, 3.4306430550185757`*^9, {3.43064313644666*^9, 
   3.4306432804823027`*^9}}],

Cell[TextData[{
 "The creation of a power set can be done even when the original set is \
infinite.  For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", "\[DoubleStruckCapitalR]", ")"}], 
   TraditionalForm]]],
 " is the set of all subsets of the real number system \
\[DoubleStruckCapitalR].  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", 
    RowBox[{"\[ScriptCapitalP]", "(", "\[DoubleStruckCapitalR]", ")"}], ")"}],
    TraditionalForm]]],
 " is the set of all subsets of the set of all subsets of the real number \
system \[DoubleStruckCapitalR].  And we can keep going:  how would you \
describe ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalP]", "(", 
    RowBox[{"\[ScriptCapitalP]", "(", 
     RowBox[{"\[ScriptCapitalP]", "(", 
      RowBox[{"\[ScriptCapitalP]", "(", 
       RowBox[{"\[ScriptCapitalP]", "(", "\[DoubleStruckCapitalR]", ")"}], 
       ")"}], ")"}], ")"}], ")"}], TraditionalForm]]],
 "?    Even in this situation, we can prove that when we take a power set of \
an infinite set, we get a set with a yet bigger cardinality (a \"bigger size \
of infinity\").  "
}], "Text",
 CellChangeTimes->{{3.430643062367174*^9, 3.430643129050166*^9}, {
  3.4620314829091463`*^9, 3.462031608360115*^9}}],

Cell["\<\
Now we come to the ultimate paradox.  Let \[ScriptCapitalU] be the \"ultimate\
\" \"universal\" set.  What is this?  It is the set of everything.  What's in \
this set?  Every number is.  Every person is (you are...I am).  Every animal. \
 Every plant.  Every collection of animals and plants.  Every molecule.  \
Every atom.  Every quark.  Every idea.  Anything that exists is in this set.  \
In fact, and here's part of the paradox.  \[ScriptCapitalU] itself must be an \
element of \[ScriptCapitalU].  Huh?!?!?!  Here's the other part of the \
paradox.  Since \[ScriptCapitalU] is the set of everything, it must be the \
biggest set that there is...right?  Well, no.  \[ScriptCapitalP](\
\[ScriptCapitalU]) must be yet bigger.  Huh?!?!?!?!  Moreover, \
\[ScriptCapitalP](\[ScriptCapitalU]) must be an element of \[ScriptCapitalU]. \
 Huh?!?!?!\
\>", "Text",
 CellChangeTimes->{{3.462031563012322*^9, 3.46203156423151*^9}, {
  3.462031610536023*^9, 3.462031847378241*^9}}],

Cell[TextData[{
 "Now you see that we seem to be in deep trouble.  None of this makes sense.  \
Is there a way to resolve these paradoxes.  Yes, we can formulate axioms for ",
 StyleBox[ButtonBox["set theory",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Set_theory"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Set_theory"],
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 1]],
 " that don't allow \[ScriptCapitalU] to even be called a set.  It's outside \
the rules of the game.  I know that this idea in and of itself seems strange. \
 But it must be done if we are to avoid these paradoxes.    "
}], "Text",
 CellChangeTimes->{{3.462031856122306*^9, 3.4620319004820013`*^9}, {
  3.4620319379351883`*^9, 3.462031959106587*^9}}]
}, Closed]]
}, Open  ]]
},
WindowSize->{1214, 852},
WindowMargins->{{125, Automatic}, {Automatic, 56}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>2. Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 646, 9, 201, "Title"],
Cell[CellGroupData[{
Cell[1238, 35, 297, 6, 304, "Section"],
Cell[1538, 43, 245779, 4114, 1208, "Input"]
}, Closed]],
Cell[247332, 4160, 354, 6, 190, "Section"],
Cell[CellGroupData[{
Cell[247711, 4170, 351, 9, 112, "Section"],
Cell[248065, 4181, 1755, 61, 224, "Text"],
Cell[249823, 4244, 506, 18, 62, "Text"],
Cell[250332, 4264, 2377, 82, 223, "Text"],
Cell[252712, 4348, 2064, 69, 200, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[254813, 4422, 203, 3, 108, "Section"],
Cell[255019, 4427, 2822, 76, 298, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[257878, 4508, 257, 3, 108, "Section"],
Cell[258138, 4513, 2240, 62, 148, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[260415, 4580, 146, 2, 108, "Section"],
Cell[260564, 4584, 3706, 109, 378, "Text"],
Cell[264273, 4695, 1642, 43, 238, "Input"],
Cell[265918, 4740, 225, 7, 96, "Text"],
Cell[266146, 4749, 1077, 26, 138, "Input"],
Cell[267226, 4777, 1054, 30, 160, "Text"],
Cell[268283, 4809, 1201, 29, 138, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[269521, 4843, 131, 1, 108, "Section"],
Cell[269655, 4846, 813, 27, 6194, "Text"],
Cell[CellGroupData[{
Cell[270493, 4877, 1742, 63, 11502, "Subsection"],
Cell[272238, 4942, 529, 15, 3482, "Text"]
}, Open  ]],
Cell[272782, 4960, 2188, 74, 11502, "Subsection"],
Cell[274973, 5036, 1240, 41, 7550, "Subsection"]
}, Closed]],
Cell[CellGroupData[{
Cell[276250, 5082, 781, 21, 190, "Section"],
Cell[277034, 5105, 342, 9, 606, "Text"],
Cell[277379, 5116, 3513, 139, 4494, "Subsection"],
Cell[280895, 5257, 4073, 153, 7820, "Subsection"],
Cell[284971, 5412, 415, 14, 810, "Subsection"]
}, Closed]],
Cell[CellGroupData[{
Cell[285423, 5431, 446, 11, 108, "Section"],
Cell[285872, 5444, 114, 1, 606, "Text"],
Cell[CellGroupData[{
Cell[286011, 5449, 368, 9, 2690, "Subsection"],
Cell[286382, 5460, 268, 6, 1862, "Subsubsection"],
Cell[286653, 5468, 985, 28, 3338, "Subsubsection"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[287687, 5502, 518, 12, 272, "Section"],
Cell[CellGroupData[{
Cell[288230, 5518, 3179, 111, 785, "Subsection"],
Cell[291412, 5631, 2362, 66, 403, "Input"],
Cell[293777, 5699, 162, 3, 60, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[293988, 5708, 581, 14, 190, "Section"],
Cell[294572, 5724, 2087, 67, 220, "Text"],
Cell[296662, 5793, 246, 5, 152, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[296945, 5803, 105, 1, 108, "Section"],
Cell[297053, 5806, 1173, 33, 2592, "Text"],
Cell[298229, 5841, 286, 5, 990, "Text"]
}, Closed]],
Cell[298530, 5849, 122, 1, 108, "Section"],
Cell[298655, 5852, 106, 1, 108, "Section"],
Cell[298764, 5855, 109, 1, 108, "Section"],
Cell[298876, 5858, 130, 1, 108, "Section"],
Cell[299009, 5861, 123, 1, 108, "Section"],
Cell[CellGroupData[{
Cell[299157, 5866, 105, 1, 108, "Section"],
Cell[299265, 5869, 1173, 33, 30818, "Text"],
Cell[300441, 5904, 286, 5, 16218, "Text"]
}, Closed]],
Cell[300742, 5912, 122, 1, 108, "Section"],
Cell[CellGroupData[{
Cell[300889, 5917, 208, 2, 144, "Section"],
Cell[301100, 5921, 2116, 52, 71280, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[303253, 5978, 455, 11, 144, "Section"],
Cell[303711, 5991, 345, 6, 24258, "Text"],
Cell[304059, 5999, 324, 10, 14598, "Text"],
Cell[304386, 6011, 229, 6, 25716, "Input"],
Cell[304618, 6019, 231, 6, 25716, "Input"],
Cell[304852, 6027, 229, 6, 25716, "Input"],
Cell[305084, 6035, 450, 13, 25716, "Input"],
Cell[305537, 6050, 1276, 28, 52488, "Text"],
Cell[306816, 6080, 257, 7, 25716, "Input"],
Cell[307076, 6089, 116, 2, 13664, "Input"],
Cell[307195, 6093, 278, 7, 25716, "Input"],
Cell[307476, 6102, 116, 2, 13664, "Input"],
Cell[307595, 6106, 439, 12, 14598, "Text"],
Cell[308037, 6120, 367, 12, 25716, "Input"],
Cell[308407, 6134, 354, 10, 14598, "Text"],
Cell[308764, 6146, 330, 9, 21708, "Input"],
Cell[309097, 6157, 325, 10, 14598, "Text"],
Cell[309425, 6169, 372, 11, 25716, "Input"],
Cell[309800, 6182, 227, 5, 14598, "Text"],
Cell[310030, 6189, 299, 8, 22598, "Input"],
Cell[310332, 6199, 399, 11, 13664, "Input"],
Cell[310734, 6212, 335, 10, 14598, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[311106, 6227, 258, 5, 248, "Section"],
Cell[311367, 6234, 1491, 42, 228, "Text"],
Cell[312861, 6278, 2530, 75, 424, "Text"],
Cell[315394, 6355, 1263, 40, 224, "Text"],
Cell[316660, 6397, 271, 8, 86, "Input"],
Cell[316934, 6407, 1314, 41, 234, "Text"],
Cell[318251, 6450, 639, 17, 138, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[318927, 6472, 736, 19, 248, "Section"],
Cell[319666, 6493, 1203, 35, 22314, "Text"],
Cell[320872, 6530, 1502, 47, 23042, "Text"],
Cell[322377, 6579, 858, 20, 16218, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[323272, 6604, 162, 2, 144, "Section"],
Cell[323437, 6608, 1218, 28, 4998, "Text"],
Cell[324658, 6638, 1945, 70, 5102, "Text"],
Cell[326606, 6710, 1780, 58, 5060, "Text"],
Cell[328389, 6770, 3410, 114, 5912, "Text"],
Cell[331802, 6886, 978, 23, 4088, "Text"],
Cell[332783, 6911, 378, 12, 2306, "Text"],
Cell[333164, 6925, 307, 9, 18426, "Input"],
Cell[333474, 6936, 305, 9, 18426, "Input"],
Cell[333782, 6947, 3760, 121, 133706, "Text"],
Cell[337545, 7070, 184, 4, 1394, "Text"],
Cell[337732, 7076, 1318, 43, 7652, "Subsection"],
Cell[CellGroupData[{
Cell[339075, 7123, 475, 11, 4878, "Subsection"],
Cell[339553, 7136, 194, 6, 1394, "Text"],
Cell[CellGroupData[{
Cell[339772, 7146, 101, 1, 1578, "Subsubsection"],
Cell[339876, 7149, 3174, 93, 7410, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343087, 7247, 110, 1, 1578, "Subsubsection"],
Cell[343200, 7250, 4073, 116, 8928, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[347334, 7373, 133, 1, 144, "Section"],
Cell[347470, 7376, 3830, 124, 11016, "Text"],
Cell[351303, 7502, 1272, 30, 5952, "Text"],
Cell[352578, 7534, 984, 15, 7670, "Text"],
Cell[353565, 7551, 792, 15, 4088, "Text"]
}, Closed]]
}, Open  ]]
}
]
*)

