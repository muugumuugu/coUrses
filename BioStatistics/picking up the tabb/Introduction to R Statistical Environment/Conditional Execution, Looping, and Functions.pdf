####################################
#Day 3
#Executing conditionally, iterating through loops, and creating functions
#if-else, for, while, subset

# for loops execute a specified number of times
for (i in 1:10) {
  cat(i^2,"\n");
}

# The curly braces specify a section of code dependent on the FOR for operation.
# We indent the code by a couple of spaces to show that dependence.

# The "cat" function is useful for outputing information to screen or to a file.
# The caret operator raises the left value to the power of the right value.

# for loops may iterate through a set of characters rather than integers.
for (thisletter in letters) {
  cat(thisletter," ")
}
cat("\n");

#What is that odd "\n" string?  It means "new line!"

# Using "if" makes it possible to behave differently depending on the value of a variable
for (i in 1:10) {
  if (i%%2) cat("Odd\n")
  else cat("Even\n");
}

# The above code uses %%, the "modulo" operator, to check the remainder of a division.
# Try these examples:
15%%3
15%%4

# Why is a remainder of 0 treated as FALSE while a remainder of >0 is treated as TRUE?
# Computer science convention.  Here's another example:
if(0) cat("true\n");
if(1) cat("true\n");

# Sometimes we aren't sure in advance how many times a loop should execute.
# The while loop checks to see if a condition is true before continuing.

x = 0
square = 0
while (square<100) {
  x = x + 1;
  square = x^2;
  cat(x,"\t",square, "\n");
}

### Indexing and subsetting

# Create a little test set.

Labels = letters;
ExptA1 = runif(26);
ExptA2 = runif(26);
ExptA3 = runif(26);
ExptB1 = runif(26);
ExptB2 = runif(26);
ExptB3 = runif(26);
ExptTable = data.frame(Labels,ExptA1,ExptA2,ExptA3,ExptB1,ExptB2,ExptB3);

# Often we have an operation we need to carry out upon a selected part of our data.
# We have talked about the index operator as a way to access specific elements of a vector.

# This use of the index operator specifies that it wants to retrieve the fifth row, and it wants the whole row.
ExptTable[5,]

# This use of the index operator species that we want only this cell's contents.
ExptTable[5,2]

# When we retrieve a column from a data frame, it is frequently easier to grab the column by name:
ExptTable$ExptB1
# This is possible because a data frame is a list of vectors, each vector having the same length!

# Sometimes we want to extract rows from the data frame that meet particular criteria.
subExpt = subset(ExptTable, ExptA1<0.5)
dim(ExptTable)
dim(subExpt)

### Functions
# If you are performing the same complex operation at many places within your code,
# you could instead define a function to carry it out.

# This function computes the distance between two points in Euclidean geometry
# xdiff^2 + ydiff^2 = distance^2
Pythagoras = function(x1,y1, x2=0,y2=0) {
   xdiff = abs(x1-x2);
   ydiff = abs(y1-y2);
   distance = sqrt(xdiff^2 + ydiff^2);
   return(distance);
}
