(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     52685,       1113]
NotebookOptionsPosition[     51061,       1059]
NotebookOutlinePosition[     51513,       1076]
CellTagsIndexPosition[     51470,       1073]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Real Analysis, Lecture 14", "Title",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQff9X1tQHnS8dE6LWg2nmtw6LQfQEMaYlIHrOpeos
tq6XjjF+uyB0sIpDG5CenF8JphUc3F53AmnXhsVguuWoKmMXkLYTCwXTTBlO
n7qBdHbfeTDdcO2LRE3fS8ccjqWSIFoxU+NcQf9Lx8qFl8E021nveYeA9AwF
hfkgWqVy37PpE146doh0PAfRJ0SnzXsNpHfUv58PolVefxVfOPGlo9OidEkQ
/SFhsazwpJeOSuxBciDaYNUc3glAOp8xhQ9EH8ovdz4ApLU+ZLiC6ANf3ns6
TH7p+NxshxeI/qWpX/seSDfZONSB6GmvfAUdz790fLz9CpguOO399JbbK8cb
q0rBNA/rinfXml45vuDfDaaTtwd7f/v9ynESl4gPiL5U8zHmk/lrxwPvOGNB
NJP3OqGZxa8dXyx6AKYBm5zMbQ==
  "]],

Cell["The Intermediate Value Property", "Section",
 CellChangeTimes->{{3.432382982763051*^9, 3.4323829869826107`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Derivatives satisfy the Intermediate Value Property (even though certain \
derivatives may not be continuous)\
\>", "Section",
 CellChangeTimes->{{3.434276405408967*^9, 3.434276425106558*^9}, {
  3.6844880839714394`*^9, 3.684488085143362*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"\[Piecewise]", GridBox[{
     {
      RowBox[{
       RowBox[{"x", "^", "2"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"1", "/", "x"}], "]"}]}], 
      RowBox[{"x", "\[NotEqual]", "0"}]},
     {"0", 
      RowBox[{"x", "=", "0"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.84]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}]}]}]], "Input",
 CellChangeTimes->{{3.558088225468261*^9, 3.5580882448805227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.6844882860422287`*^9, 3.6844882883860826`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(\\*RowBox[{\\\"Slot\\\"}]\\)\[NoBreak] \
in \[NoBreak]\\!\\(\\*RowBox[{\\\"#1\\\"}]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6844882892611084`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.684488289339246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.653212510654686*^9, 3.6532125515414352`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(\\*RowBox[{\\\"Slot\\\"}]\\)\[NoBreak] \
in \[NoBreak]\\!\\(\\*RowBox[{\\\"#1\\\"}]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6844882982927275`*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rgeWn6biatAuI+dFIGsQ2o6qkXb51GBo2RfK9CdBWG0uwV3+ogadCpZCCp2D
8BDZVYV03RrUMMhVTUwPQsUwJudQmRo8kWDrptQahIkcFETnmzUIDbXstfNB
uFLytdeEowZ9dseUO/4GIf+Dz7+V6GqwunFXVp8uGN+ONnCI7VUjTTy1+avT
wdhhnit7Zaka6e7KKv3mCEZGsmgH5sFq/P3J5sAIZzA+DXNPoaytRguWl6sU
7MGYw2HRuZldjTnsDH9fMAXjTonq9sT7aizZXO45fTgYxR6Is3W4V+Pae5bC
7a0gDBzleVhqWY3ZG8kNvz4H4Yj5yRepGtV4VoaW7kx5ELKT7U8IlqpGgeS5
DMOwILQIW295faMaJ8a0arsNgrCcY2TD6Ew1/tkX26h6IwgpSutPKVJXo2Pf
81/HfgViUrhmoNt3xAdHroq0vw5EgXLeafVWRM8qwcWVHwHYOU7JfyMJUUww
YtpfNwD1yMd8qB3+8T21U9vq/DFI2uta1QXEiL7rrll6fshhpeERTop4L7ZC
LS3FFyvCr42YDVchpW/D9NKwDy6Mf3lz2rsKte7bskmxe+Ntq6s9LguVmPD3
8PX399xxMJyCXaW6EuuMD23uCLrh8/LPdlcjK1FcmM3j4TlXjCT3YJ26V4nH
jArvZ0+54NfwEfO76RXYIXNxcJnLDj3KP9QxOVegzz3nFJ8sW2SecDu+qViB
UhOR3+TPW6PkBR5MoajAjNRm+Qjm55hQ7nqEQr8ct67J+VRaySDfhLLumHA5
RsYG0u8oXsd28svFxfTlKEL8OnGwmxe2pYc0DBrKMMt1/Nj9aGV4NHExu/lc
GcYstuC9bDN4qHdeG3ZKceHopBB/oiXcXzhztLijFOnVWqcZe6zh3nPmxotJ
pUgUG5MhTNuC2FcG++QXpZiupcLwYPAl3LH57+LJB6W4Wuz5zSLNHkS2D40H
nf7Xfi78QOTjV3DLkSLkwGYJdpTYBj0ecAQBElJxp+YS1Dwu1iDB4wQ33HZ/
bsaUYLTKCouIhjNco9zKMLEsQXpqQYugyy5wxe+rxpR4CbKVp9u4hLvAJdpl
WpWTJbjbYvYscNYFuMJm67rWPuLxERbq7ZNvgJNx4oVE3Ud8Lndnl47vDbDH
jFyojPiIQyEOX1T+YTbWgS+8zz9it1n0pDHTGzid0hWYcfsjBplpXT78T4+Z
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
pvavdXgUwfNifm4J/vffGv733xr+D3Xkays=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13c4lf8bB3BJMhLJaEiipJSMshofLTRkRLakom9mRtKQ7L0TssqmrGzq
tlf2OOYZjs1xzolzVCp+z++v53pdz7quz3N/3vf9HLJy1HvIysLCMrWFheX/
RxkktLi5SQM5ja4gNc0VpP/4aODvdRqYKx50HcP8/K2y5CqTBjiRPW9dr62g
1iUTq9klGvzN0XuRe30FWcanjnUO08D0k+K4oNYKivoh9T2hkAagJfXnl+4K
YqSf/aRwlwY/jm5oL5iuoGqOew4236jQNr3771OnFfS6C7dUf28ZJlo0rbXS
VtBC5l5hJREKjIiX3Lndt4KOEzU5efGLEHnEuK5z2yrK2J3OGPVegO6kLNG1
y6uo0bQjDNA8uBWkSnL6rCKRVBGx+MlZ6HUeP9rQuYpuXDb1GAiaATP9UMfB
vQx08I+117Fr01BJfy9/5wEDnSxI9nJeJsNpj1/s7qUMpPnVgNdyngwelMjY
hDIGsurkSdGaIgO7ZlVNTTkDxS++qpEaJYN3JWvPRiUDsR21WCM0kYHt6rP+
118ZaCxV1O5GEhnczUL9bFsYyD8q1fDwDTKcVys0HxtmoA9phrO71MlwedV7
G2WEgWoLed021cigdbhx8+8oA/3oeh09pkiGdzEqkyITDGTGZdkVKU4GPifv
nfokBlLwEbv87/ckDJZbliTPMxDJ9YMMLmcS/vnsaAv6xUCeZ9w08emTcOSs
sNOL3wwksqZpNZ0yCc+nZITs1hnIyJ3+diUWu393nPb1vwzU54H+7XwzCb+q
Du1f32SgBk/8dw3jSai97Lz/8HYmskTFM7f0JyGSfYiPjYOJNjZ9Nw20J2Fi
u0gXGbPqmxMKD65OAi7bPSSJi4m++LxI9JKbBBahp2UsO5koI3Dvf1Wck8Bl
0KMXKMBEl64te9exTcJKR9ysniATkTjrk1o3SVDYMbJFRIiJREIe9Q4xSfDJ
rfRrrjATvQ2rUFqZJEFtAEdfyT4m8o82YJeuJkGUf7a7uxgTHb59TEy+jATJ
cUx7qUNM1LD7n4pKEQkeJeI/DmPejM2w18gigZL0cKmsBBM9e7c6eD+aBH8L
A5c7jzDRf0lR6UmPSWDG53Yy9zgTMTiuByk9JIG4FHOrpjQTebmxOvbfxc7T
rlpPY4675aLKYUACrZuvigVPYu9jMehzQSQQNXoYa3yKibTseSp2qpLgZDjb
3ynMI6PNSbmnSfCeg/rFVpaJqCWKj4jHSBBt5810lmOifQ/3bF4XIAH3+LfJ
uwpMlNnXOz2zkwRG1AvUAcyyF4I6vDhJsL91guvqaSYKlWFI2/8jwkGfWT3R
M0z0cfvDnx9XiFC+3cTeH3MlaahhZI4I1fLrbkuYp6MrjK/0E8HWkiLzSZGJ
1m2ljjxvJUJ0XmrXdiUm4ruaQC+sJUJe00UlS8znfj4P2J9NhBqqlMZ2ZSbS
613S000iAv9b8XEDzI9yzUQDoohQ1+0i+AHzW9MLZSsviGAmFmV4UoWJPp0u
9JJ6QgTRQIubDpgbeMRuWlgT4UWZX30+5pHZSOFYUyKIvNP6PIOZClum2nWI
4J02s01ElYnYEpwLNq8SITzqYf0tzPucpzzOnCXC0/NdQ68wy97Qv2orSwRF
XTaVXMzqh5v5PhwhgsPeMVIvZrN/ZyZw+4jQprGtkYHZGZeVvYMPW58KiSGB
s0wUWCjscmnb/9eneocc5pTAwAvP1gmw6/Tpu9cwl977zVlAI0BP/lS9OeYO
1cdDU9MEcKlnOe6AmbR7PG3vGAFwb3NDn2Neo9yw0+4hQAIbmeCNeUdLrZJf
EwHoD2IEAzCLp57cWlNFgLFroUf+b+VnKd30AgLUX/Ta6oP5li5vomQGAfzf
bs/4//MeHPd6aJZAgCn21D/2mJ9v/SEbHU6AS+HZG2aYIyfu/W31IQBF2PqD
Bubssv7Wf88IkKK2deQk5m/hl2MUHAjgtiskjhfzoE2pxX/3CXC9htJLwdZj
Ue3I8VQjAhjprj9vxsyyL445qEUATZ9HgQmYhVbZ67kuEyDuTjflEeYTne6h
asoE0CZmvFfAbORpLPFJnAC9v+mZ1dj3465TbkrcQ4CDKlrvXmD+tmXPw6Cd
BJhOOHxZGfMRP1yW9ToeLmSEpWZg9TLSUqZhQMfDpcQAVX3MoRxv5y/P4qGb
0PlgE6u/lZDbxw/142G19K+qJubMLvnvvG14ECoK7p3B6teIl99u4yseTMzz
2jwxQ3Tv5/FcPIxMdpd8xOo9NEFLLu4NHp4d1JUqxvYPGj/R7+uOB9+V+lAp
zCsiO1xc7PEgk/mCmSjPRMZpHaU6xnh4gMv+6ITtxx3kXAOkjYelm1e6B7D9
WicRtHbyKh4+C7/qlMMsma2hzC2Hh2lE5iHIMNHovOTob0k81BnfUTqBOfQ4
+/N5ETyI1DM3XbF8WP3cVNPMgYe1wm2qa1h+1JVeRF6kCTgRzTdWJsVELmti
JAfcBLzM0fEfPoo9X5nljXnnBHw+d/PhqiQThdV8a1CtnIBqAsN7L5ZXJg1n
1ZkRE3CyKyjvAJZvPGz756b8JqBI+p8JL5aHdVfXA/pfTEDe7FT7uigTHW2v
bC+0mYArwa5Z30SwfOs5o/UYTQB7xfb8X1i+Zu8SpBqdmYAHlx6klWP5a3Kb
Ea4hPQGx73yH7bF8rseV9B4WnoBZ970drfxMFI4/pU+kjkPDeM+PozxMJLV0
zFQ/ZRyqPYaNg1mYqMy3P+ZxzDjUTVdaFW4w0CXRF51egeNwuolF+TvWb8x0
O89/dh4Hpz8h87NYv4qscBBj1xgHrydG1fl0BjqgK2wscm4cdvrWeflSGShv
EaLk5cZBZum49m0KAzUd2LX17v5xqOe/m9w/x0C/fb7MVNDGQLyHU8KAgPXb
A2ai3dNj0KG1cmt8nIEEKtgMp0fH4FazZOEdrL/KLBq08TWNAe5sV/KJQay/
6/zK+y9+DPiCR0X12hmoQ+S80/6LYyATRZB4XMxAhuUzOXKKY0A2PsarWMBA
09rhkxrSY7BiV6bPzGOgDW+inqvgGEi7iThoZTCQ/MKbM10Lo1B9i0/dMo6B
Esta1j2jR6FZ2nVmxZ2Bjmo7KrwNGAUNLkLjtAsDlc4L2+W/HIWp9GBcqyMD
de//Dz9sPQplB+u23rNhIFZv7jrZs6PAfrHHcNyAgWxv6fiRp0agbpMtvOsU
9v7rsoPSoyOQqJZ1a+Q4A0Vr8Em4dY/AW8Vom/4jDFSt1lu3vWoEVK5ob8bs
ZyAOBZ2/J8JHYDfnzvOa7AyUJazj4q48AnEHOuy0R1aRqoBsQ93JEfDUejVw
tn8VdfPx7eKSGAEewR9jAtg8xeTsLUjiGYGlf358obCKrvzVXqwnD8Pkoh4h
KHMVkUna93aEDcMDazr5nf0qeoo/VWTgPQx75OtfKlmvIq4x3s0U92E4Z8oT
X2exiuQGepLkrIZBBvfzRbj2KvJq1h65ozQMbSIf//HLriLRPG3tD5M4cLFI
9QujrKCSrFMpizgcjCV0cOdPrSD1dN5lhU4c7KgCr4KxFWSf1BPcUo6D9sk3
F63bVlBtuHbLUggOrlv23oj+uIJMXLTPKyriAMc2ejUDm09DRpLvKZ/AwcHV
+Qs1Gtj15yl+quI48P4Tx155fgWJcgR1X9iJg4cup8Wsjq2gyaSGuxqzQ3DO
uE/VefMHetRyxtsobgiCB3d9vpX1AyVI+2aZhA7BNtLd69mJP1BHZH+HmfcQ
vPbbsoUc/gOdMHXcfc9hCDq3Zn/7+/QHotFyMv5THwJBLWOfuqs/0NO9Iq3P
1wahcmvsXk08HWV7Pl56SRmEvSy6P9N76GhkqpL3NXkQLEmJvfh6OlItMDDy
6R4Eko2K5WImHf27FLEQkjUIHL5y6nft6MjXjnVH8p1BYBNIZq5M01AMzOtA
+QAQUYFQV8MySnnJwrOQPwD8v597NCcuoxyVPe38HwYgm5elzNB5GX37onHR
OmQAPJ0336iLLaP57Cw5HssBIFTbkBXdKehC5AN+U84BEDKXf/SJbwld03rZ
7bvRDyxJF3ZMTi4ifa7Y4ILVfkj9uf3lx5JF9J9vIysroR+CE7Wd2vQWUewz
8dWckn6ofj3pGxS2gBYsSQNrpv1wNn4s5yhlDjEO/IoQ0+2Hvw9/7Wopm0Mb
Y7w3r6v3g7xdt8S05xwSMEBNybL9kC84xZ3EO4cuXEspvbKtHxoYyUXTx2dR
rJzZ2+iCPpjm+DMgrTmNEOvIHZktfZDw57pW5B4Smj1qMc/3sxeqjEcPcuYT
UbjWtMcqpRcU/qjIUSSIiBBPT6oc6YWdEVkcqfwE5HmKc+pSUS+kdiuMZkyN
o1ozVUfDu73Af/V0b/XtYeTqoMK75UUPWDkUvk8Y6kBNVVflW6x7YLo3jL/b
vx0JbNMzCNHrAb4vnYfWzrShL+8fvxc83gOJD1neHgtvRitt748eH+0GB8q+
/vuSdchRYgPdVuoGjsdxIYypdPR4pMEpc7UT5Hc/zBYqbwD7gXuNVfhOyMpp
s/9t0QRO3SxC3a2dsGj+If0xZwu4N12oWXvfCU/e/pats2oH36LqbZpXOoEf
HbvRyt8LKYEliYux30FUS/GaAhUHA8ofm04pdkA4b3FwvikZcAoXha+IdcDX
G5a+Zm1kGJMh/WfE1QHVJda/c05PAemwKO8bQjsI2cvto3BPA5Uv0bjfvx0O
MztTf3yZAY6FKKrrcBs0MQOfFBHngXta9mJQfRvwz8/0N6ktwE5iT0xyfht8
4r4aUZS2AIJDPCotr9vAOuZVfJ/ZIojXB/kIS7XBP5VlP8+mJThSK4WT5m8D
Lgmtpth9FJCqaJVS+9sKnNu4uVgcKXDq87buR72tELmWHxHGvwznEt7sqX7W
ChZK7MSnl6igZRLx7vT9Vvj+38jUTAAVLPYnCxVqtcLFC0TDI9+p8Dq5UiBD
vBV0pc7ubrlOg0iLlhhRnlboDgxo3PCnQdrBQf6Eny3wOCCkvLyOBg0faHzh
nS2gqO3cfFSIDv1W/yI4KlqAo2X4HespOkxJcPP6fGiBnrzw3ifqdGBM7wn/
F9ICq7ry5x6b0YEtS5Ln2dMWqH3yx4vkRAdBm9OhK5YtsKBAPtjuQwdJqUvc
9jda4DkHyW3PWzooLmgHz51pAfwvva8NGXTQyDPntBJrwfLDl7e2hA5GtraB
E1wtUGmtb/3rGx0enfDYbshshvQ2nhTbdjp4LPv79xGb4YbBPXfOfjoEF8Ru
u9nRDDaTYQnNI3RIdPzo21LaDMo3y2Jj8HTIly3aejG1GfbcvzdtTaJD7Y+v
3jVBzXByUXVFfpIOnSXftyi6NkOqMnPPEpEOeJdRryKLZjBdcsr2nqAD9fTc
5vFr2P3qe6YpODpsMBmemQrNQKC68x3ooQNvBevGQdFm+NUkZM/eTAexZ3yv
EjmawTUn4nxSJR1kVUT/Cqw2wcP99M6+XDpcXJd+EYFvgtoqC+fEeDro1ais
c7Y1gf+7HXELvnS4/1LDw7ekCSjZruUlDnRwPW/wayOpCZIsKfYLBnTw3bBy
9whogkOEwGdvVOnwFpzWVp80wdcJ02oHETpkeXm6OZg1wUi3cOj1nzQovxjK
mFdvgqt34lrli2gw0pi9gt/fBDvpi2Z7d9Fg3rfsiRF7E+jsv+C+VEmF31cb
6f30RriwQ9yIZEKFfW0EamtzI8TmREVMhi6DdBDF/lJRI8zVX45uFcHq8/o6
pTaxESpPBkz4ZFHAvFNwqdixETgnaFnns5fAIUzi8QmTRiDPyd44ILoEnrfk
FrKuNEK71daid+GLkNZ7c+793kY42Sl9UNZsAYqiTKyF2BqhXIRz4GzVPNTr
PZqJpDZAm6/Y4FfeeSAP+kz5NTbAzc4WFoHcWVh9G2XFUtAATMcQ5vTSDLAZ
pk4+j2+A+9fIOySlZuDIaDXR0b4Bfs0vN3GHTcEj/I9xY+EG0Dn2O8Qb+y/9
4jixTX1rA/ibmso80SPAxpbWU/K0eggPPr9VIQCbIyWTfLha60F14ZyQex82
tziqS9c8rYeSAt/eMFov7GF9/1wEVwdiPfFVfQ3P0P1YvwyOhjqYN3CKOqCT
iQoknboZn+vA1/fYgYmhL+jKjaviXX51YP30hc5pmUbkFEtrf3WmDi7WPOg6
Tu9HkVqB8t+OAXBNec15xpGRpLO5f9wWgID9S5d08qZQbZz8mMPoNyCJn74c
WDmN5okTbw4GfQPWzTzup/WzyJOtZOin5TfY0WpDbazG+suxgGO9yt/AIvPW
ztz8eaTmLNfnNf8Vmsw+2Z15sohwcexHjOu+grn4fIDOlSVkVzP+TC7+K7j3
EnWXuCmIlVTUyen0FQodjIWUWikons1fjKzxFYLt/722cltGMsdMXasPfoXf
WZMSiYJU1KQl2xb9sxYMZ1JEOLOpyMR5m4htTy3clOsvG5WiIXrcmOPl7Fpw
almSUkykIf+awsb9r2uh99EJu2vrNCRC8hVm3KkFDm1DLrHDdFTCZmLbKVML
WyaOZWVcpCPNY6cgg70WxI/KU28Y0BFBi233K0IN5JwczCq2oCNX51Frg/Ia
8D10J8LVnI643hVUnwyvgX1RjzmUdOkorcZnJ7t1DZwus2lJVaEjRZKRFeF8
DeBU70eYCNFRJ5tMebkgZlwxl3w3DVkd28oVsVwNsgfwvyQNaeiX1oi5TXM1
vJhJrd7dSkXhzp+LUXI1sFZvOxp0gIoOv/PetsetGjgrZ3dKmyyj6hpDY/rN
akhwztMoeUlB2qQTn9sOV4OffvJ3qu8SuvngqCX6XQXhF1t6X5ssouvzh3aX
d1UBjtr/TmjXAtKwE2k58bEK8LrrNdM5c+gKXcgj/WkVFNRUHLgmPosuuu46
se9GFTiYawQOvJpGF35xEyMPVsELuRYLzVoyUmbZctWzrRJEtoymo048OuP7
5ycjqRIEdo3TH+aMInmOtTzbJ5Ugv5d4SM5gCJ3kW+Iz3lcJIb7hTilWbUhc
bGhCwa4CFAZ4175MfIWDGT0ReWoVkER+rryTsx1EpDouHRKsgLQwcr9RZB8I
y0LOzm/l4GveXCD7ehwESqtM/aLLIdBUkXn7KAn4lUt3/rUuB3MVozfNz8mw
Qy3XdYG3HLzS/vS5d88CZ1P6UcvpMrD9d/iTcOM8sGumjOEqy4DXknLrUugi
bO2MD9MKKwN7LimjWQkKsOjEqDXdKwN/1+H7DJ9l+DcQtqqqWAbLu5rOOWdR
Yd0wMKuYqwwqDisHRfrR4Ne4t7EUsRTUSr28JnnowLz7akfql1Kg9j94tyxH
h5UpdxAMLAV1Z9eR6BN0oNs4O4ealcKzG6SJICxPl5fsjmyVKwU9MIzNP0uD
RUebEY9tpXDmv6esvBJUmFu9F0If/QIMnVcT5z9RYNrd7IJNwRew/+aRtoxb
hMk/d37gvb+A5f1EKcmMeSC81s3QN/wCFtzK9TZCszC+9abhd+kv4BYs29gj
NwUjAepcl1i+QOg9Dw63X0QYiDjrdCq3BOKcbGOmX/VB725FiaxXJXCoIFw+
UL4Rut/J4kT0SoAeHHbmhn8ctKUeOcf1pxheHmr0TK7oRs0SYjSvnmLwjDJ9
5ZAxjBqy9338mV4M838OccRkEFGdtKCBw7Ni4ODWfxT5bgp9LeTlmLlZDJ8O
i9sGcc2hagWuGtNDxdAvPVGvtHsRVVawOfQzi+DJLrx8VQIFlZ3dFLvWUQSf
pHbRmf5UVAK/ByClCM42OLHaNtNQ4WWGv6JLEeA9D7awH6KjT61Ulc8aRXDG
wyj48jIN5d5YoEiIFMEWjfY2Sg0VaaW2ojOThWDWOObimkNBmtm1meLBhfD3
uS3/5JcFdKmwmJtPoRB64rJwQ7Mz6FxF1pN/4wUwKnZQyk1vEinC++FF3wL4
yBR4Li4+gvbtYFtIUSiAn3ZZKeeLO9A/I7t1PfJn0CGzGmfFpyBS5iD39qjP
cEo7mH0kqxGaVs4dqEGf4ZC6zvsZjyHIQZkyjtRPcM45pzhAiwShoTxqEsmf
wHPHi0pbyxlwGnXTHb7xCYKlWxyFqhbgtiTBKmQ9H17y6FUdxfqloou6K8rN
h+GU3qdRejTYV1fgt2qYDwIvs//EY/PXxg7hd9ns+TD4eeBaXSAN+29/nWNa
lgekSjOTcd1laMmaq+J9kAc859Qi1gMXIHdV+3sjfx7I1RG8lq5OQ6ha5YR7
fS6cJM2uLbmOg1OYGFXaKRd644ds6rrbQH8scJMomgviY9xF3TYFSOnoD77Y
rhyIFY63Pys1iPa5GotrvsyBMJb7j6obJtFGXb3C3+M5wAgiuk8bzCMyz/Gr
RaPZcF1+sm9Cfhk1m0TfeRCYDTSBuwNcPTSUk71us0cpG1ol11oD62golGHl
0TmTBcdMo21e9VCQ08XvwV6xWeD6TPWlOfscuh2ukHT6chbYv9w+feoVHimO
v/88/yMT2HATcSOJDWifFBskpWXCxJZGCxxbO2y42vXqaGeCZXiiSmEFCcj1
g5NsGxkgHS0ZYWm0AC07z69WfsoAq/jbIkfaqZBrmslmb5oBxA6tw4MrNAjN
4RE6xJUBe3V0sh4hCjgx3Y4OVaZDpQE6IzgwBfqXCMpBNukgM61W49fWDcoR
6tfPC6VDf7BrpcVKGxKZKDD90fQR0l15Fa3uTqFNKWH7TJePEBXDLyQwSEFk
t9eexuIfwex0DNOCg45aGuYiePo+gIfPiNGd9CWUx6vzof71B0i/fMfZtZmI
wswqS9xkPkB4aX0w4Sc2zeWKNR3Dp0F0lB1DLWkS9NcCh/AhaaDCStY867gM
ypd/zEappgGjVlCS6EwDJbEv9JD+VHATll83aJyBjSqf3YxTqWAXctqmJKoC
Wm7rK5qFpUB6/7e/nH2TKGz5sHHTYjIcEvlquYtMRfoBzBcnNJNB51f5SmUM
BYkcakmJzUwCwu32IbfoQTRVHVf/lzUJzh3mWWF8xUOevs30A8v3oOjd9ab/
AA2cqUrbu74mwnJkB5fnuwVQCeQ4fmZ/Imgms87FdbohFvHRm8nPEkD8/h+7
j5mLqLUm13EbLh4sdEZflLIuo3CD59H2CvEgfUew/pd/HjKgXS8binwHGutO
c0tmFBAJ2j9ynhoHm37zdzb3zcOUOGU980YcJOoGkIt4x1Bebe2BnblvwdVz
eJjbgYac74SpPWV/CyYmlb3J7rmgQje/T7gfC/r3LD7JbqWDXXXGgntTDPx6
oCsguO6MUnyXHHcdiYErgq9mNbpoqPeW/FqeXzS4vI4IOBw1BFv3ery8MhsF
qx962rMS5kFxClgJ6lGwh3qv/WHOMnr0mT3IPTsS9uMTttdo90KiuxbvLo5I
aFBzVHofRIAEHylpg75w+B4ZlfVzfgltCJcrBUaHwcotZkx4JA2sPl2+UnM7
FBrYsiWcaDTUqtanQxUIAdzJ7BLaFhqcGLIwP4QLgp/rnO3RxnMo6j/Kf/rv
AsH1Q5Xfqeh8tPbP42mAUQBoKH14YnuRBqbR232q9/qDlmqWczEtEOok30Ys
j/lCTiZPSF3YDDpSI54kluQDc9xnuLnzZ1GwdlHObXNvYCFVCDPe+wFt6nyZ
v+gbSAuqDLHFUyGbHufjAq+Bl5RWK3eKhpz2liSNXnwFIy3Pktd4vyPVS11l
qOk5kImO59upU4jNdr47U/0Z7EslnUv4MgXdMVvnudvd4O8H4bvPwygQXyu6
xfmGC/SMR8cvyXaD1YzKvpEuJ/gbrpAawNIPhiJ51i/T7CA0KcTuVgkVLdqT
4jUzbcDytf2UzaNp8ASh7wJ5VuAs8ugJa+kUiIsnrtebm0JazqbCoE0nutbM
ftfERhdmskuaikcIoLLtVDZp5goYORzUYdtLRf8DFxGZdQ==
       "]], 
      LineBox[CompressedData["
1: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
QqW4MClzQDyfQ75JOKhvXluKip/rbi7P4JD24+h8p1SKLc12VaejOKTvwWz7
ZUdLcfiZm2a3P4dwEqpEnpmUgsYrT6l+wiG/aa+iZ9wpxcJC1S9rb3PInIWG
avc9SzEklsTrMeEQceteW4uMUsTLvnbmb+cQ6Xdx82kVpVi26pWyoRiHKNbY
hJ9ilMLignBd5l820dz2pwnzy5Bz6VJRiw+b6F0osv60rgzxlSOREqfZxPi5
55xtKmXw8Pi36dcyNrEbXa662rQMwzen5315xSLvEuWDeZllEHh4rSbMdpTc
FF7lOVlRhlPOFxU4W0bJgesz7v3tLAPpEJsdzRwhdJmmU0JzyrHsy7LlXkdH
iGSEw3yJs+XQddLyiJo/TCKCih0Oj5fjn269mNWZAZLwn5Gh785KmOXXDBWc
6yYP+g9rBmhX4j5H2nHbeBfR0dimHGJCmXc4Qt+3i7BmCohGeVQi+tOc6J8V
TKLoElmW3VKJgNUfxw7cpJOMO5ydXfZVaAytvTJ/TSvJNfNYrvi5Go+tt2Wn
6JSRNtHOxr7qariO3h9Rjioh40TJN7i7GnO89B6rCBQTxbVdInNFaqCbX/OD
mZVPwtv3CtEv1+BOV9PTmw8yiNfpn1PPltRCYHm8vRvbF4Yaxswf1nUQnfl3
peifCtzlpb1/96gOvR6V51wuVcE3fN6F02/rUPpgr9/zsmpUz/jc9rW4DoUK
g60eT+sgyXg6WLnwGy7m27R02DfAL7in++Plb9h0u9pnQ9h3OC5723xyCdX3
zpTmjj1l4vqsswxbiXpIa8bokUomjLlLBv2k66Gs8XHGPOEu4Jv39Pc99Vj1
R2S1GNU/Cnq7bjC9VI9SW+FTuz274TPLytYmox5pParaI1d78ZC70cn3az3c
90uLtob3wqar63FGeT3s9is80u7sxWlyPnCCVg9/fYumkhN9WOV0krjObkAV
t1F589Z+hHN3Lnx1tgFXtWJypep/4HXX2Ip00wbU77VvLZw1AI9vKZLN1xqQ
Y99VyFMZgFWSrLLYwwbkLlCNX/h2APLX1p7/GN2AxqpER2mjQWR1zY5NnWjA
xG69ZK/yIVR/a1JvCGpEktfd6WYj6jw0NlItiGiE73bnletcR/FxgCGXktSI
Ibv8kcWRo7AXGF7iU9iInCKBfb9GRyGpOKPr6FAjfObRveqdWLj7Yptzwe4m
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
eBxjwPl87O7/r8+bP/FPMs4w0P3iVcYsyr5Che+7LzJgqD57upZaz2drWd8O
3GFAOy5ssTHlp1sEh264MKDqvJmzhvJj5dWzgp8yMGHJ+kKj9o+LtqbKrxAG
lsgr7P3//nI8Y3xiUzQDMy/b/Z1D+Z6p3ZXTqQzQ0rxqs6n9aGP//m1yCQN5
n+ZnrKB8KWz8zxUWA3fUtlslUfvdNFF4pf8EAw4n3C11KMsbL15lPoOJNy3P
Egep/JC7snn7ywVM1Dx/sGM15Y3Opy+NrGNCV31f53kq31bGxpdFHGGiIlI0
6QqVr0v+rD4apsMEzS9VtmsbH8J6XpWhp5jgvXe2M6Q8c9KqJsiYiU8PFjup
UfnOOiLd+NKGiVqbxMW/qHpROvCB/iCQiUXjb3fNoupNwT5RU8d3VDxTZKEx
VY9yXz7suhfGhH7pyOx0ql6lqZr02iUwsUfylP359dR6PBUfsspnQmPOEbo/
Vd/sZfz5+gNMWFatW5Arxoftg9n3To0yUVAnZTG5io8b3+5MnOQycbRMT0GF
svn907+1p5ng6wlIx6zg40S56IyDol3Ij29c8WApH9JWz4S3qXbh9nt6FkOY
yodo1w2zn3Zho6j559S/PPSeXNB2k+pjH61MHkz5wwP31xufVt8uxFwsaU2a
5kHkSPxk/LsuKH688TdqigfNgea6U+ldCPLf3/l0nIfPMnIPPtC7YO7cfGcF
i4fA2OamvSrdOJW92ek2jYfz8bIedt3doNXOih75xMO+4Ll7Szb1wqirPjOI
Os97XmSPb3zch2NTKdbrxXnI2PBwWIrWDyN9rzVjNWNght/bIbhmAM+7F/xY
7TWGBhkN17H7g0jSWXCwQWMM64I0JMvzhrAtWWal4oIx+Medm9w9PYz3f1aJ
mLdw0UgOtWWdGcX92sz388K4uF5gsmBNIAvGSw/TXe5yYR7a5p/7joVrMs7M
/DtcGDnrrzcOZ2H+tdvysygf2a29OziJhcltqxOf2nGxMVXlilgJC6amk9sD
bnFB+yBctJxLvY91HIVXuTjumuMocpyNoJ82fidNuDhsojInSY8NYcMdDUEX
uNizL+WVjgEbT/f0GvZT/aPMRGSMtzkbN9d/3O9ynur/bF61zHdg48DtnWap
hlzkXbTaMTeKDYvtb8c3nqb6z/09eVHxVNxQP+rOKS4SxE2OaqaywdWUCinW
4yLo+2nTJ7mUPzqcs9Dlwv4kdSVpZCOqqG9lnA4X1ttyxMJb2fCw4/B+H+fi
8gKVyEN0NlIY61aeoHyqTDbXbZCNeLa97Jg2F0cjI7Wk2GzIf7wkrklZ7ZFk
Yz6PDSf5f7pvj3KxyyzYxHSKDUfFrVUjR7iQx4qhf//Y2K5V46lG+X9PPbIH

       "]]}, {}}, {{}, {}, {}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1.054980226718395, 1.3270335855947195`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6844882985583644`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uniform Continuity", "Section",
 CellChangeTimes->{{3.4326452226735764`*^9, 3.4326452252274*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";", 
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "/", "x"}]}], ";", 
  RowBox[{
   RowBox[{"Invg", "[", "x_", "]"}], ":=", 
   SqrtBox["x"]}], ";", 
  RowBox[{
   RowBox[{"Invh", "[", "x_", "]"}], ":=", 
   RowBox[{"h", "[", "x", "]"}]}], ";", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"f", "[", "c", "]"}], "+", "\[Epsilon]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Invf", "[", 
               RowBox[{
                RowBox[{"f", "[", "c", "]"}], "+", "\[Epsilon]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"f", "[", "c", "]"}], "+", "\[Epsilon]"}]}], "}"}]}], 
           "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"f", "[", "c", "]"}], "-", "\[Epsilon]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Invf", "[", 
               RowBox[{
                RowBox[{"f", "[", "c", "]"}], "-", "\[Epsilon]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"f", "[", "c", "]"}], "-", "\[Epsilon]"}]}], "}"}]}], 
           "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"f", "[", "c", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", 
              RowBox[{"f", "[", "c", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "-", "\[Delta]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "-", "\[Delta]"}], ",", 
              RowBox[{"f", "[", 
               RowBox[{"c", "-", "\[Delta]"}], "]"}]}], "}"}]}], "}"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "+", "\[Delta]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "+", "\[Delta]"}], ",", 
              RowBox[{"f", "[", 
               RowBox[{"c", "+", "\[Delta]"}], "]"}]}], "}"}]}], "}"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "5"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "h"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Invf", ",", 
      RowBox[{"{", 
       RowBox[{"Invg", ",", "Invh"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", ".51", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", ".2", ",", ".01"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", ".5", ",", ".001"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.432029745271516*^9, 3.432030213527052*^9}, {
   3.43203025081921*^9, 3.432030334498496*^9}, {3.432030395820305*^9, 
   3.43203071768573*^9}, 3.526809409786895*^9}]
}, Closed]],

Cell[TextData[{
 "Prove that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    FractionBox["1", "x"]}], TraditionalForm]], "None"],
 " is not uniformly continuous on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "1"}], ")"}], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.4330715371441402`*^9, 3.433071558500297*^9}, {
  3.526810674821154*^9, 3.526810714673252*^9}, {3.526811064588106*^9, 
  3.526811064769813*^9}}],

Cell["The Main \"Uniform Continuity Theorem\"", "Section",
 CellChangeTimes->{{3.464515360106633*^9, 3.464515368182927*^9}}],

Cell[TextData[{
 "Prove that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"sin", "(", 
     SuperscriptBox["x", "2"], ")"}]}], TraditionalForm]], "None"],
 " is not uniformly continuous on \[DoubleStruckCapitalR]"
}], "Section",
 CellChangeTimes->{{3.4330715371441402`*^9, 3.433071558500297*^9}, 
   3.526810674821154*^9}],

Cell[CellGroupData[{

Cell["Monotone Functions are \"nice\"", "Section",
 CellChangeTimes->{{3.4330040384686337`*^9, 3.4330040438947163`*^9}, {
  3.433065888088188*^9, 3.433065890444347*^9}}],

Cell["One-sided Limits Exist at Every Point", "Subsection",
 CellChangeTimes->{{3.433066484810008*^9, 3.4330664931083307`*^9}}],

Cell["The Set of Discontinuities is Countable", "Subsection",
 CellChangeTimes->{{3.43306650185345*^9, 3.433066512828429*^9}}],

Cell["They are Differentiable \"Almost Everywhere\"", "Subsection",
 CellChangeTimes->{{3.433066550051936*^9, 3.433066561567231*^9}}],

Cell["They are Riemann Integrable", "Subsection",
 CellChangeTimes->{{3.4330665689700613`*^9, 3.4330665745351763`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The Variation of a Function and Functions of Bounded Variation\
\>", "Section",
 CellChangeTimes->{{3.526809491936998*^9, 3.526809494830737*^9}, {
  3.526810011111247*^9, 3.526810016475892*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "+", 
    FractionBox["1", "2"]}]}], ";", 
  RowBox[{"a", "=", "0"}], ";", 
  RowBox[{"b", "=", 
   RowBox[{"2", "\[Pi]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.526809509642282*^9, 3.526809511304317*^9}, {
  3.52680960274408*^9, 3.526809604638283*^9}, {3.5268097026838007`*^9, 
  3.526809727892021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", "x_", "]"}], ":=", 
   RowBox[{"\[Piecewise]", GridBox[{
      {
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], "-", 
         RowBox[{"f", "[", "0", "]"}]}], "]"}], 
       RowBox[{"a", "\[LessEqual]", "x", "<", 
        FractionBox["\[Pi]", "2"]}]},
      {
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           FractionBox["\[Pi]", "2"], "]"}], "-", 
          RowBox[{"f", "[", "0", "]"}]}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], "-", 
          RowBox[{"f", "[", 
           FractionBox["\[Pi]", "2"], "]"}]}], "]"}]}], 
       RowBox[{
        FractionBox["\[Pi]", "2"], "\[LessEqual]", "x", "<", 
        FractionBox[
         RowBox[{"3", "\[Pi]"}], "2"]}]},
      {
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           FractionBox["\[Pi]", "2"], "]"}], "-", 
          RowBox[{"f", "[", "0", "]"}]}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           FractionBox[
            RowBox[{"3", "\[Pi]"}], "2"], "]"}], "-", 
          RowBox[{"f", "[", 
           FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "+", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], "-", 
          RowBox[{"f", "[", 
           FractionBox[
            RowBox[{"3", "\[Pi]"}], "2"], "]"}]}], "]"}]}], 
       RowBox[{
        FractionBox[
         RowBox[{"3", "\[Pi]"}], "2"], "\[LessEqual]", "x", "\[LessEqual]", 
        "b"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.84]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.52680973080836*^9, 3.526809859118746*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "x_", "]"}], ":=", 
   RowBox[{"V", "[", "x", "]"}]}], ";", 
  RowBox[{
   RowBox[{"f2", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"f1", "[", "x", "]"}], "-", 
    RowBox[{"f", "[", "x", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.526809876804932*^9, 3.526809888311356*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"f1", "[", "x", "]"}], ",", 
     RowBox[{"f2", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Purple"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.526809889493784*^9, 3.526809922399687*^9}}]
}, Closed]],

Cell["Derivatives", "Section",
 CellChangeTimes->{{3.526809491936998*^9, 3.526809494830737*^9}, {
  3.526810011111247*^9, 3.526810016475892*^9}, {3.6844864475789223`*^9, 
  3.684486449682351*^9}}]
}, Open  ]]
},
WindowSize->{640, 397},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 541, 10, 127, "Title"],
Cell[1111, 34, 118, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[1254, 39, 253, 5, 169, "Section"],
Cell[1510, 46, 929, 26, 54, "Input"],
Cell[CellGroupData[{
Cell[2464, 76, 142, 3, 36, "Input"],
Cell[2609, 81, 507, 10, 29, "Message"],
Cell[3119, 93, 70, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3226, 99, 361, 11, 36, "Input"],
Cell[3590, 112, 507, 10, 29, "Message"],
Cell[4100, 124, 36309, 610, 290, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40458, 740, 103, 1, 86, "Section"],
Cell[40564, 743, 4591, 131, 525, "Input"]
}, Closed]],
Cell[45170, 877, 482, 15, 124, "Section"],
Cell[45655, 894, 124, 1, 119, "Section"],
Cell[45782, 897, 370, 11, 119, "Section"],
Cell[CellGroupData[{
Cell[46177, 912, 169, 2, 68, "Section"],
Cell[46349, 916, 127, 1, 59, "Subsection"],
Cell[46479, 919, 126, 1, 48, "Subsection"],
Cell[46608, 922, 133, 1, 48, "Subsection"],
Cell[46744, 925, 119, 1, 48, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46900, 931, 204, 4, 137, "Section"],
Cell[47107, 937, 431, 12, 92, "Input"],
Cell[47541, 951, 2288, 66, 170, "Input"],
Cell[49832, 1019, 344, 10, 56, "Input"],
Cell[50179, 1031, 655, 19, 90, "Input"]
}, Closed]],
Cell[50849, 1053, 196, 3, 68, "Section"]
}, Open  ]]
}
]
*)

