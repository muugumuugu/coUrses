(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     35783,        817]
NotebookOptionsPosition[     34349,        768]
NotebookOutlinePosition[     34815,        786]
CellTagsIndexPosition[     34772,        783]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Real Analysis, Lecture 11", "Title",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQff9X1tQHnS8dE6LWg2nmtw6LQfQEMaYlIHrOpeos
tq6XjjF+uyB0sIpDG5CenF8JphUc3F53AmnXhsVguuWoKmMXkLYTCwXTTBlO
n7qBdHbfeTDdcO2LRE3fS8ccjqWSIFoxU+NcQf9Lx8qFl8E021nveYeA9AwF
hfkgWqVy37PpE146doh0PAfRJ0SnzXsNpHfUv58PolVefxVfOPGlo9OidEkQ
/SFhsazwpJeOSuxBciDaYNUc3glAOp8xhQ9EbzunuL73HFDfoXowXdkqtmCL
6ytHrmmrwbS19OcT6xtfOQY4MZ4E0Z8yVvw+++uV49SPh8C00lQxkdNmrx0X
BZeD6edSfzKLil473rPVywLRAKLcsHM=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "5"}], "-", 
    RowBox[{"4", 
     RowBox[{"x", "^", "4"}]}], "-", 
    RowBox[{"16", 
     RowBox[{"x", "^", "3"}]}], "+", 
    RowBox[{"64", 
     RowBox[{"x", "^", "2"}]}], "+", 
    RowBox[{"55", "x"}], "-", "220"}]}], ";", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "4"}], ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683882264956971*^9, 3.6838822993677692`*^9}, {
  3.683882343923132*^9, 3.683882426675061*^9}}],

Cell[CellGroupData[{

Cell["The Story of a Monk on a Mountain", "Section",
 CellChangeTimes->{{3.5578276251709843`*^9, 3.557827637888341*^9}}],

Cell["\<\
Exactly at sunrise one morning, a Buddhist monk set out to climb a tall \
mountain. The narrow path was not more than a foot or two wide, and it wound \
around the mountain to a beautiful, glittering temple at the mountain peak.
The monk climbed the path at varying rates of speed. He stopped many times \
along the way to rest and to eat the fruit he carried with him. He reached \
the temple just at sunset.

At the temple, he fasted and meditated for several days. Then he began his \
journey back along the same path, starting exactly at sunrise and walking, as \
before, at variable speeds with many stops along the way.

Will the monk ever be at the same position on the mountain at the same time \
of day?\
\>", "Subsection",
 CellChangeTimes->{{3.5578276420086393`*^9, 3.557827645906136*^9}}]
}, Closed]],

Cell["\<\
The \"Mega-Theorems\" that Follow from the Definition of Continuity and the \
Completeness Axiom:  the IVT (Intermediate Value Theorem) and the EVT \
(Extreme Value Theorem)\
\>", "Section",
 CellChangeTimes->{{3.432382899773449*^9, 3.4323829553097143`*^9}, 
   3.683882452916588*^9}],

Cell[CellGroupData[{

Cell["A Reminder to Expect the Unexpected", "Section",
 CellChangeTimes->{{3.432028231468706*^9, 3.4320282825462112`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"1", "/", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "a"}], ",", "a"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", ".001", ",", 
     RowBox[{"-", ".001"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.432028286835252*^9, 3.432028383059803*^9}, {
  3.557480294007948*^9, 3.557480299236861*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{"x", "/", "2"}], "+", 
           RowBox[{
            RowBox[{"x", "^", "2"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"1", "/", "x"}], "]"}]}]}], 
          RowBox[{"x", "\[NotEqual]", "0"}]},
         {"0", 
          RowBox[{"x", "\[Equal]", "0"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "'"}], "[", "x", "]"}], ",", 
        RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "a"}], ",", "a"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "a"}], ",", "a"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "3", ",", ".001", ",", 
      RowBox[{"-", ".001"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.432028286835252*^9, 3.432028383059803*^9}, {
  3.557480294007948*^9, 3.557480299236861*^9}, {3.621154882138144*^9, 
  3.6211552464032907`*^9}, {3.6211576035761375`*^9, 3.6211576173568134`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Limits of Functions Defined on Open Intervals (possibly with one point \
removed)\
\>", "Section",
 CellChangeTimes->{{3.431854903245989*^9, 3.431854934697315*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4320298586092787`*^9, 3.4320298650782833`*^9}, {
   3.432030362847363*^9, 3.432030389156588*^9}, 3.526033521015177*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";", 
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "/", "x"}]}], ";", 
  RowBox[{
   RowBox[{"Invg", "[", "x_", "]"}], ":=", 
   SqrtBox["x"]}], ";", 
  RowBox[{
   RowBox[{"Invh", "[", "x_", "]"}], ":=", 
   RowBox[{"h", "[", "x", "]"}]}], ";", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"f", "[", "c", "]"}], "+", "\[Epsilon]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Invf", "[", 
               RowBox[{
                RowBox[{"f", "[", "c", "]"}], "+", "\[Epsilon]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"f", "[", "c", "]"}], "+", "\[Epsilon]"}]}], "}"}]}], 
           "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"f", "[", "c", "]"}], "-", "\[Epsilon]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Invf", "[", 
               RowBox[{
                RowBox[{"f", "[", "c", "]"}], "-", "\[Epsilon]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"f", "[", "c", "]"}], "-", "\[Epsilon]"}]}], "}"}]}], 
           "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"f", "[", "c", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", 
              RowBox[{"f", "[", "c", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "-", "\[Delta]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "-", "\[Delta]"}], ",", 
              RowBox[{"f", "[", 
               RowBox[{"c", "-", "\[Delta]"}], "]"}]}], "}"}]}], "}"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "+", "\[Delta]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c", "+", "\[Delta]"}], ",", 
              RowBox[{"f", "[", 
               RowBox[{"c", "+", "\[Delta]"}], "]"}]}], "}"}]}], "}"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "5"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "h"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Invf", ",", 
      RowBox[{"{", 
       RowBox[{"Invg", ",", "Invh"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", ".51", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", ".2", ",", ".01"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", ".5", ",", ".001"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.432029745271516*^9, 3.432030213527052*^9}, {
   3.43203025081921*^9, 3.432030334498496*^9}, {3.432030395820305*^9, 
   3.43203071768573*^9}, 3.526033523029505*^9}]
}, Closed]],

Cell["Relation to Limits of Sequences", "Section",
 CellChangeTimes->{{3.432029554244464*^9, 3.432029558097396*^9}}],

Cell["Algebraic Properties of Limits and the Squeeze Theorem", "Section",
 CellChangeTimes->{{3.432284381831547*^9, 3.432284396062958*^9}}],

Cell["One-Sided Limits and Other Kinds of Limits", "Section",
 CellChangeTimes->{{3.432029643662209*^9, 3.432029650745764*^9}}],

Cell["Infinite Limits and Limits at Infinity", "Section",
 CellChangeTimes->{{3.526378131302844*^9, 3.526378144948669*^9}}],

Cell["Continuity and Discontinuity", "Section",
 CellChangeTimes->{{3.432284340998435*^9, 3.432284350143005*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Proving, for example, that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"h", "(", "x", ")"}], "=", 
    FractionBox[
     RadicalBox[
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       RowBox[{
        SuperscriptBox["x", "2"], 
        RowBox[{"sin", "(", 
         RowBox[{"3", "x"}], ")"}]}]}], "5"], 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}]]}], TraditionalForm]]],
 " is continuous on \[DoubleStruckCapitalR]...a chat about the value of \
abstract thoerems proved from precise definitions"
}], "Section",
 CellChangeTimes->{{3.432382636376052*^9, 3.432382707152567*^9}, {
  3.4323828526015673`*^9, 3.432382867711607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}]], "*", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
      RadicalBox[
       RowBox[{
        RowBox[{"x", "^", "3"}], "+", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", "x"}], "]"}]}]}], "5"], ",", 
      RowBox[{"-", 
       RadicalBox[
        RowBox[{
         RowBox[{"-", 
          RowBox[{"x", "^", "3"}]}], "-", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", "x"}], "]"}]}]}], "5"]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.621331950278364*^9, 3.6213320020059743`*^9}, {
  3.6213320428452034`*^9, 3.621332116981351*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
05QM/nc/D/vf/TzwfxkdWD4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {-0.6595949970979628, 0.6595958547734213}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.621332003862303*^9, 3.6213321181045074`*^9}]
}, Open  ]]
}, Closed]],

Cell["\<\
Continuity of Arithmetic Combinations of Continuous Functions (including \
Polynomials and Rational Functions)\
\>", "Section",
 CellChangeTimes->{{3.463912024323123*^9, 3.463912071032001*^9}}],

Cell["Continuity of Trigonometric Functions", "Section",
 CellChangeTimes->{{3.463912051497032*^9, 3.463912056177578*^9}}],

Cell["Continuity of Composite Functions and Inverse Functions", "Section",
 CellChangeTimes->{{3.463911953614614*^9, 3.463911966964003*^9}, 
   3.6527813284647803`*^9}]
}, Open  ]]
},
WindowSize->{960, 689},
WindowMargins->{{161, Automatic}, {Automatic, 43}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 484, 9, 137, "Title"],
Cell[1054, 33, 640, 20, 69, "Input"],
Cell[CellGroupData[{
Cell[1719, 57, 120, 1, 95, "Section"],
Cell[1842, 60, 810, 15, 1210, "Subsection"]
}, Closed]],
Cell[2667, 78, 294, 6, 228, "Section"],
Cell[CellGroupData[{
Cell[2986, 88, 122, 1, 72, "Section"],
Cell[3111, 91, 685, 19, 69, "Input"],
Cell[3799, 112, 3009, 83, 170, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[6845, 200, 174, 4, 124, "Section"],
Cell[7022, 206, 168, 2, 43, "Input"],
Cell[7193, 210, 4591, 131, 302, "Input"]
}, Closed]],
Cell[11799, 344, 116, 1, 72, "Section"],
Cell[11918, 347, 139, 1, 124, "Section"],
Cell[12060, 350, 127, 1, 72, "Section"],
Cell[12190, 353, 123, 1, 72, "Section"],
Cell[12316, 356, 113, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[12454, 361, 678, 20, 217, "Section"],
Cell[CellGroupData[{
Cell[13157, 385, 950, 30, 292, "Input"],
Cell[14110, 417, 19697, 333, 667, "Output"]
}, Open  ]]
}, Closed]],
Cell[33834, 754, 203, 4, 176, "Section"],
Cell[34040, 760, 122, 1, 72, "Section"],
Cell[34165, 763, 168, 2, 124, "Section"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
